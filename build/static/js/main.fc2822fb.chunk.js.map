{"version":3,"sources":["assets/logo.png","context/actionTypes.js","context/actions/errorActions.js","utils/axiosInstance.js","context/actions/contactAction/contactAction.js","Partials/NavBar.jsx","Routes/HomeRoute.jsx","Views/Dashboard/DashboardFollowUp.jsx","Views/Dashboard/Dashboard.jsx","context/actions/confirmationAction.js","Components/reactTable.jsx","context/actions/leadAction/leadActions.js","utils/dateFilter.js","Views/Leads/Leads.jsx","Views/Message/Message.jsx","context/actions/inventoryAction/inventoryAction.js","Views/Inventory/UpdateSkuCard.jsx","Views/Inventory/Inventory.jsx","Views/Contact/Contacts.jsx","Views/Organization/Organization.jsx","Views/Contact/CreateOrg.jsx","Views/Contact/CreateContactDetails.jsx","Views/Contact/CreateContactCard.jsx","Views/Leads/CreateLead.jsx","Views/Leads/UpdateLead.jsx","Views/Contact/UpdateContact.jsx","Views/Leads/LeadList.jsx","Components/DetailCard.jsx","printable/Ouotation.jsx","printable/OrderForm.jsx","Views/Leads/UpdatePrice.jsx","Views/Leads/LeadItems.jsx","printable/Invoice.jsx","Views/Leads/LeadDetails.jsx","Views/Contact/FollowUpList.jsx","Views/Contact/ContactDetail.jsx","Views/Inventory/CreateInventory.jsx","Views/Inventory/UpdateInventory.jsx","Views/Inventory/InventoryDetails.jsx","context/actions/authActions/authActions.js","Views/Auth/Login.jsx","Components/Confirmation.jsx","Views/Contact/CreateFollowUpCard.jsx","Views/Leads/CreateLeadCard.jsx","Views/Organization/UpdateOrgCard.jsx","Views/Organization/OrganizationDetails.jsx","Views/Organization/CreateOrgCard.jsx","App.js","reportWebVitals.js","context/reducers/authReducer/authReducer.js","context/reducers/confirmationReducer.js","context/reducers/contactReducer/contactReducer.js","context/reducers/errorReducer.js","context/reducers/inventoryReducer/inventoryReducer.js","context/reducers/leadReducer/leadReducer.js","context/rootReducer.js","context/store.js","index.js"],"names":["SET_USER","SET_LEADS","UPDATE_LEAD","SET_UPDATELEAD","DELETE_LEAD","SELECTED_LEAD","ADD_LEAD","SET_INVENTORY","SET_UPDATEINVENTORY","DELETE_INVENTORY","SET_CONTACT","ADD_CONTACT","DELETE_CONTACT","DELETE_ORGANIZATION","SET_UPDATECONTACT","SET_ORGANIZATION","SET_UPDATEORG","SET_ALERT","SET_CONFIRMATION","SHOW_FOLLOWUP","SHOW_LEADCREATE","SHOW_CONTACTCREATE","SHOW_ORGCREATE","setAlert","data","type","payload","axiosInstance","require","default","create","baseURL","setupdatecontact","createFollowUp","createleadCard","createcontactCard","createorgCard","setUpdateOrg","getContact","dispatch","get","then","res","catch","err","console","log","getOrganization","createContact","values","resetForm","history","setType","token","Cookies","user","JSON","parse","localStorage","getItem","post","_id","headers","Authorization","message","error","show","phone","fromLead","push","organization","refreshOrg","deleteContact","id","delete","deletecontact","refreshContact","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","backgroundColor","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","height","color","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","navOptions","title","icon","style","fontSize","path","MiniDrawer","Component","props","classes","useTheme","React","useState","open","setOpen","useHistory","useDispatch","useSelector","state","anchorEl","refreshFollowUp","Boolean","contact","followUp","setFollowUp","useEffect","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","src","logo","alt","Button","textTransform","fromContact","name","Avatar","Drawer","variant","paper","direction","Divider","List","map","item","index","ListItem","paddingTop","paddingBottom","button","Tooltip","ListItemIcon","paddingLeft","ListItemText","primary","remove","clear","HomeRoute","component","rest","render","to","pathname","from","location","DashboardFollowUp","fupFilter","fup","update","remark","setRemark","handleSubmit","e","preventDefault","remarks","Date","date","toLocaleDateString","isAttended","text","toLocaleString","timeZone","day","month","year","hour","minute","placeholder","value","onChange","target","Dashboard","leads","setLeads","org","organizations","setFupFilter","completed","totalLeads","cancelled","forEach","element","leadyear","updatedAt","leadmonth","status","isCustomer","customer","length","selected","detail","filter","f","contactId","setConfirmation","IndeterminateCheckbox","forwardRef","ref","indeterminate","defaultRef","useRef","resolvedRef","current","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","setValue","useAsyncDebounce","undefined","border","dateBetweenFilterFn","rows","filterValues","sd","toDateString","ed","setDate","getDate","r","time","fuzzyTextFilterFn","filterValue","matchSorter","keys","row","autoRemove","val","Table","columns","not_customer","deleteFunc","refresh","tablepath","isContact","isOrg","dataExport","setdataExport","customerType","setCustomerType","filterTypes","useMemo","fuzzyText","dateBetween","rowValue","String","toLowerCase","startsWith","useTable","initialState","pageIndex","useFilters","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","visibleColumns","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","setAllFilters","pageSize","selectedRowIds","Object","downloads","Array","setAnchorEl","handleClose","Refresh","event","currentTarget","outlineWidth","onClose","MenuListProps","MenuItem","disabled","defaultValue","Number","colSpan","textAlign","headerGroup","column","canFilter","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","getRowProps","cells","cell","cursor","getCellProps","func","selectedlead","getLead","createLead","deleteLead","deletelead","refreshLead","DateRangeColumnFilter","preFilteredRows","setFilter","min","max","rowDate","toISOString","slice","old","concat","Leads","DATA","lead","elm","createdAt","headCells","accessor","Filter","isLead","Message","useFormik","initialValues","validate","errors","getFieldProps","setFieldValue","options","label","company","borderRadius","colors","primary25","selectedOption","setupdateinventory","getInventory","deleteInventory","deleteinventory","UpdateSkuCard","setShow","inventory","sku","setValues","item_name","article","patch","Inventory","Contacts","isVisible","Customer","notCustomer","Organization","CreateOrg","setCreateContact","setCreateOrg","street","city","country","zipcode","address","CreateContactDetails","contactData","setId","orgList","setOrgList","email","department","whatsapp_no","description","website","toString","flag","test","marginTop","CreateContactCard","createOrg","CreateLead","addContact","setAddContact","setContact","items","quantity","updatedSalePrice","i","updatelead","owner","industry","rating","whatsapp_number","onSubmit","a","hidden","CreateContact","useParams","updateContact","LeadList","stage","dispatchOrder","DetailCard","Ouotation","componentRef","inventorySku","inventoryItem","sale_price","totalAmt","inven","amt","gst","hsn_code","OrderForm","colour","UpdatePrice","leadId","salesPrice","updatedPrice","LeadItems","add","price","itemButton","setitemButton","marginBottom","Invoice","LeadDetails","details","quotation","order","invoice","setbutton","setStatus","setStage","quotationRef","orderFormRef","invoiceRef","pageStyle","fontWeight","trigger","FollowUpList","ContactDetails","showLeadDetails","setShowLeadDetails","setButton","actions","SpeedDialIcon","task","orderForm","allLeads","SpeedDial","ariaLabel","sx","bottom","right","action","SpeedDialAction","tooltipTitle","tooltipOpen","allFollowups","CreateInventory","imgRef","brand","manufacturer","purchase_price","mpn_code","isbn_code","image","formdata","FormData","todayDate","append","createInventory","checked","accept","files","assign","handleChange","newdata","updateInventory","InventoryDetails","refreshInventory","setUser","Login","password","admin","set","setItem","stringify","Confirmation","CreateFollowUpCard","CreateLeadCard","currentContact","UpdateOrgCard","selectedOrg","OrganizationDetails","employees","CreateOrgCard","App","alert","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","confirmation","leadCreate","contactCreate","orgCreate","newestOnTop","rtl","pauseOnFocusLoss","exact","UpdateLead","UpdateInventory","UpdateContact","ContactDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","c","l","convert","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc2822fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9a449140.png\";","export const SET_USER = 'SET_USER';\r\n\r\nexport const SET_LEADS = 'SET_LEADS';\r\nexport const SET_LEADSLOADING = 'SET_LEADSLOADING';\r\nexport const UPDATE_LEAD = 'UPDATE_LEAD';\r\nexport const SET_UPDATELEAD = 'SET_UPDATELEAD';\r\nexport const DELETE_LEAD = 'DELETE_LEAD';\r\nexport const REFRESH_LEAD = 'REFRESH_LEAD';\r\nexport const SELECTED_LEAD = 'SELECTED_LEAD';\r\nexport const ADD_LEAD = 'ADD_LEAD';\r\n\r\nexport const SET_INVENTORY = 'SET_INVENTORY';\r\nexport const SET_INVENTORYLOADING = 'SET_INVENTORYLOADING';\r\nexport const UPDATE_INVENTORY = 'UPDATE_INVENTORY';\r\nexport const SET_UPDATEINVENTORY = 'SET_UPDATEINVENTORY';\r\nexport const DELETE_INVENTORY = 'DELETE_INVENTORY';\r\n\r\nexport const SET_CONTACT = 'SET_CONTACT';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const DELETE_ORGANIZATION = 'DELETE_ORGANIZATION';\r\nexport const DELETE_PERSON = 'DELETE_PERSON';\r\nexport const SET_UPDATECONTACT = 'SET_UPDATECONTACT';\r\nexport const SET_ORGANIZATION = 'SET_ORGANIZATION';\r\nexport const SET_UPDATEORG = 'SET_UPDATEORG';\r\nexport const SET_PERSONS = 'SET_PERSONS';\r\n\r\nexport const SET_ALERT = 'SET_ALERT';\r\n\r\nexport const SET_CONFIRMATION = 'SET_CONFIRMATION';\r\n\r\nexport const SHOW_FOLLOWUP = 'SHOW_FOLLOWUP';\r\nexport const SHOW_LEADCREATE = 'SHOW_LEADCREATE';\r\nexport const SHOW_CONTACTCREATE = 'SHOW_CONTACTCREATE';\r\nexport const SHOW_ORGCREATE = 'SHOW_ORGCREATE';\r\n","import { SET_ALERT } from '../actionTypes';\r\n\r\nconst setAlert = (data) => ({\r\n  type: SET_ALERT,\r\n  payload: data,\r\n});\r\n\r\nexport { setAlert };\r\n","const { default: axios } = require('axios');\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:6000/api',\r\n});\r\n\r\nexport default axiosInstance;\r\n","import Cookies from 'js-cookie';\r\nimport axiosInstance from '../../../utils/axiosInstance';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  DELETE_ORGANIZATION,\r\n  DELETE_PERSON,\r\n  SET_CONTACT,\r\n  SET_ORGANIZATION,\r\n  SET_PERSONS,\r\n  SET_UPDATECONTACT,\r\n  SET_UPDATEORG,\r\n  SHOW_CONTACTCREATE,\r\n  SHOW_FOLLOWUP,\r\n  SHOW_LEADCREATE,\r\n  SHOW_ORGCREATE,\r\n} from '../../actionTypes';\r\nimport { setAlert } from '../errorActions';\r\n\r\nconst setContact = (data) => ({\r\n  type: SET_CONTACT,\r\n  payload: data,\r\n});\r\n\r\nconst deletecontact = (data) => ({\r\n  type: DELETE_CONTACT,\r\n  payload: data,\r\n});\r\n\r\nconst setupdatecontact = (data) => ({\r\n  type: SET_UPDATECONTACT,\r\n  payload: data,\r\n});\r\n\r\nconst setOrganization = (data) => ({\r\n  type: SET_ORGANIZATION,\r\n  payload: data,\r\n});\r\n\r\nconst addContact = (data) => ({\r\n  type: ADD_CONTACT,\r\n  payload: data,\r\n});\r\n\r\nconst deleteOrganization = (data) => ({\r\n  type: DELETE_ORGANIZATION,\r\n  payload: data,\r\n});\r\n\r\nconst createFollowUp = (data) => ({\r\n  type: SHOW_FOLLOWUP,\r\n  payload: data,\r\n});\r\n\r\nconst createleadCard = (data) => ({\r\n  type: SHOW_LEADCREATE,\r\n  payload: data,\r\n});\r\n\r\nconst createcontactCard = (data) => ({\r\n  type: SHOW_CONTACTCREATE,\r\n  payload: data,\r\n});\r\n\r\nconst createorgCard = (data) => ({\r\n  type: SHOW_ORGCREATE,\r\n  payload: data,\r\n});\r\n\r\nconst setUpdateOrg = (data) => ({\r\n  type: SET_UPDATEORG,\r\n  payload: data,\r\n});\r\n\r\nconst getContact = () => {\r\n  return (dispatch) => {\r\n    axiosInstance\r\n      .get('/contacts')\r\n      .then((res) => {\r\n        dispatch(setContact(res.data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nconst getOrganization = () => {\r\n  return (dispatch) => {\r\n    axiosInstance\r\n      .get('/organizations')\r\n      .then((res) => {\r\n        dispatch(setOrganization(res.data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nconst createContact = (values, resetForm, history, setType) => {\r\n  return (dispatch) => {\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .post(`/create-contact/${user._id}`, values, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch(addContact(res.data));\r\n        dispatch(\r\n          setAlert({ message: 'Contact created successfully', error: false }),\r\n        );\r\n        resetForm();\r\n        dispatch(\r\n          createcontactCard({\r\n            show: false,\r\n            phone: null,\r\n            fromLead: false,\r\n          }),\r\n        );\r\n        history.push(`/contactdetail/${res.data._id}`);\r\n        setType('');\r\n        if (values.organization) {\r\n          dispatch(refreshOrg(values?.organization));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(setAlert({ message: 'Error creating contact', error: true }));\r\n        resetForm();\r\n      });\r\n  };\r\n};\r\n\r\nconst updateContact = (id, data, resetForm, history) => {\r\n  return (dispatch) => {\r\n    console.log(data);\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .patch(`/update-contact/${id}/${user._id}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(refreshContact(id));\r\n        resetForm();\r\n        history.push(`/contactdetail/${id}`);\r\n        dispatch(\r\n          setAlert({ message: 'Contact updated successfully', error: false }),\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(setAlert({ message: 'Error updating contact', error: true }));\r\n        resetForm();\r\n      });\r\n  };\r\n};\r\n\r\nconst deleteContact = (data, id) => {\r\n  return (dispatch) => {\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .delete(`/delete-contact/${data}/${user._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(deletecontact(data));\r\n        dispatch(\r\n          setAlert({ message: 'Contact deleted successfully', error: false }),\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setAlert({ message: 'Error deleting contact', error: true }));\r\n      });\r\n  };\r\n};\r\n\r\nconst refreshContact = (id) => {\r\n  return (dispatch) => {\r\n    axiosInstance\r\n      .get(`/contact/${id}`)\r\n      .then((res) => {\r\n        dispatch(setupdatecontact(res.data));\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nconst refreshOrg = (id) => {\r\n  return (dispatch) => {\r\n    axiosInstance\r\n      .get(`/organization/${id}`)\r\n      .then((res) => {\r\n        dispatch(setUpdateOrg(res.data));\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nexport {\r\n  createContact,\r\n  getContact,\r\n  setContact,\r\n  deleteContact,\r\n  updateContact,\r\n  setupdatecontact,\r\n  getOrganization,\r\n  refreshContact,\r\n  createFollowUp,\r\n  createleadCard,\r\n  createcontactCard,\r\n  setUpdateOrg,\r\n  refreshOrg,\r\n  createorgCard,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport {\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport ContactsIcon from '@mui/icons-material/Contacts';\r\nimport InventoryIcon from '@mui/icons-material/Inventory';\r\nimport { useHistory } from 'react-router';\r\nimport CircleNotificationsIcon from '@mui/icons-material/CircleNotifications';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport logo from '../assets/logo.png';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Cookies from 'js-cookie';\r\nimport { setAlert } from '../context/actions/errorActions';\r\nimport ShowChartIcon from '@mui/icons-material/ShowChart';\r\nimport DomainIcon from '@mui/icons-material/Domain';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {\r\n  createcontactCard,\r\n  createFollowUp,\r\n  createleadCard,\r\n  createorgCard,\r\n} from '../context/actions/contactAction/contactAction';\r\nimport axiosInstance from '../utils/axiosInstance';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nconst drawerWidth = 230;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: 'rgb(73, 71, 129)',\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    backgroundColor: 'rgb(73, 71, 129)',\r\n    height: '100%',\r\n    color: 'white',\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    backgroundColor: 'rgb(73, 71, 129)',\r\n    height: '100%',\r\n    color: 'white',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst navOptions = [\r\n  {\r\n    title: 'Dashboard',\r\n    icon: <HomeIcon style={{ fontSize: '30px', color: 'white' }} />,\r\n    path: '/',\r\n  },\r\n  {\r\n    title: 'Organization',\r\n    icon: <DomainIcon style={{ fontSize: '30px', color: 'white' }} />,\r\n    path: '/organizations',\r\n  },\r\n  {\r\n    title: 'All Contacts',\r\n    icon: <ContactsIcon style={{ fontSize: '30px', color: 'white' }} />,\r\n    path: '/contacts',\r\n  },\r\n\r\n  {\r\n    title: 'Inventory',\r\n    icon: <InventoryIcon style={{ fontSize: '30px', color: 'white' }} />,\r\n    path: '/inventory',\r\n  },\r\n  {\r\n    title: 'Send SMS',\r\n    icon: <MessageIcon style={{ fontSize: '30px', color: 'white' }} />,\r\n    path: '/message',\r\n  },\r\n];\r\n\r\nexport default function MiniDrawer({ Component, props }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const followUpOpen = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const refreshFollowUp = useSelector((state) => state.contact.followUp);\r\n  const contact = useSelector((state) => state.contact.contact);\r\n  const [followUp, setFollowUp] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(`/followups`)\r\n      .then((res) => {\r\n        setFollowUp(res.data);\r\n      })\r\n      .catch((error) => {});\r\n  }, [refreshFollowUp]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <div className=\"flex justify-between w-full items-center\">\r\n            <div className=\"flex\">\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, {\r\n                  [classes.hide]: open,\r\n                })}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <img src={logo} alt=\"\" style={{ height: '45px' }} />\r\n            </div>\r\n            <div className=\"flex items-center justify-center sm:mr-4\">\r\n              {/* <IconButton\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={followUpOpen ? 'true' : undefined}\r\n                onClick={handleClick}\r\n              >\r\n                <CircleNotificationsIcon\r\n                  fontSize=\"large\"\r\n                  style={{ color: 'white' }}\r\n                />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={followUpOpen}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}\r\n                className=\"mt-10 ml-2\"\r\n              >\r\n                {followUp?.map((fup) => {\r\n                  const name = contact?.filter(\r\n                    (f) => f._id === fup?.contactId,\r\n                  )[0];\r\n                  return (\r\n                    <>\r\n                      {new Date(fup?.date).toLocaleString('en-US', {\r\n                        day: '2-digit',\r\n                        month: 'long',\r\n                        year: 'numeric',\r\n                      }) ===\r\n                      new Date().toLocaleString('en-US', {\r\n                        day: '2-digit',\r\n                        month: 'long',\r\n                        year: 'numeric',\r\n                      }) ? (\r\n                        <MenuItem\r\n                          style={{ width: '20vw' }}\r\n                          onClick={handleClose}\r\n                        >\r\n                          <div className=\"w-full flex justify-between\">\r\n                            <div\r\n                              onClick={() => {\r\n                                history.push(`/contactdetail/${name?._id}`);\r\n                              }}\r\n                            >\r\n                              <p>{fup?.text}</p>\r\n                              <p className=\"text-sm\">\r\n                                {name?.name + '(' + name?.phone + ')'}\r\n                              </p>\r\n                            </div>\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                const token = Cookies.get('JWT');\r\n                                const User = JSON.parse(\r\n                                  localStorage.getItem('user'),\r\n                                );\r\n                                axiosInstance\r\n                                  .delete(\r\n                                    `/delete-followup/${fup?._id}/${User._id}`,\r\n                                    {\r\n                                      headers: {\r\n                                        Authorization: `Bearer ${token}`,\r\n                                      },\r\n                                    },\r\n                                  )\r\n                                  .then((res) => {\r\n                                    console.log(res);\r\n                                    dispatch(\r\n                                      createFollowUp({\r\n                                        show: false,\r\n                                        phone: '',\r\n                                        fromContact: false,\r\n                                      }),\r\n                                    );\r\n                                  });\r\n                              }}\r\n                            >\r\n                              <CheckIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                        </MenuItem>\r\n                      ) : null}\r\n                    </>\r\n                  );\r\n                })}\r\n              </Menu> */}\r\n\r\n              <Button\r\n                onClick={() => dispatch(createorgCard({ show: true }))}\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  backgroundColor: 'white ',\r\n                  marginRight: '10px',\r\n                }}\r\n              >\r\n                Create Organization\r\n                <AddIcon />\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={() =>\r\n                  dispatch(\r\n                    createcontactCard({\r\n                      show: true,\r\n                      phone: null,\r\n                      fromLead: false,\r\n                    }),\r\n                  )\r\n                }\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  backgroundColor: 'white ',\r\n                  marginRight: '10px',\r\n                }}\r\n              >\r\n                Create Contact\r\n                <AddIcon />\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={() =>\r\n                  dispatch(\r\n                    createFollowUp({\r\n                      show: true,\r\n                      phone: null,\r\n                      fromContact: false,\r\n                    }),\r\n                  )\r\n                }\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  backgroundColor: 'white ',\r\n                  marginRight: '10px',\r\n                }}\r\n              >\r\n                Create FollowUp\r\n                <AddIcon />\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={() =>\r\n                  dispatch(\r\n                    createleadCard({\r\n                      show: true,\r\n                      phone: null,\r\n                      fromContact: false,\r\n                    }),\r\n                  )\r\n                }\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  backgroundColor: 'white ',\r\n                  marginRight: '10px',\r\n                }}\r\n              >\r\n                Create Lead\r\n                <AddIcon />\r\n              </Button>\r\n              <h2 className=\" text-xs m-0 p-2\">{user?.user?.name}</h2>\r\n              <Avatar />\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <div></div>\r\n        <Divider />\r\n        <List>\r\n          {navOptions.map((item, index) => (\r\n            <ListItem\r\n              style={{ paddingTop: '10px', paddingBottom: '10px' }}\r\n              button\r\n              onClick={() => {\r\n                history.push(item.path);\r\n              }}\r\n              key={index}\r\n            >\r\n              <Tooltip title={item.title}>\r\n                <ListItemIcon style={{ paddingLeft: '5px' }}>\r\n                  {item.icon}\r\n                </ListItemIcon>\r\n              </Tooltip>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              Cookies.remove('JWT');\r\n              localStorage.clear();\r\n              history.push('/login');\r\n              dispatch(\r\n                setAlert({ message: 'Logged out successfully', error: false }),\r\n              );\r\n            }}\r\n          >\r\n            <Tooltip title=\"Logout\">\r\n              <ListItemIcon style={{ paddingLeft: '5px' }}>\r\n                <LogoutIcon style={{ fontSize: '30px', color: 'white' }} />,\r\n              </ListItemIcon>\r\n            </Tooltip>\r\n            <ListItemText primary={'Logout'} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className=\"mt-14 w-full\">\r\n        <Component {...props} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport MiniDrawer from '../Partials/NavBar';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction HomeRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <>\r\n      <Route\r\n        {...rest}\r\n        render={(props) => (\r\n          <>\r\n            {Cookies.get('JWT') ? (\r\n              <MiniDrawer Component={Component} props={props} />\r\n            ) : (\r\n              <Redirect\r\n                to={{\r\n                  pathname: '/login',\r\n                  state: { from: props.location },\r\n                }}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomeRoute;\r\n","import React, { useState } from 'react';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  createFollowUp,\r\n  refreshContact,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport Cookies from 'js-cookie';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst DashboardFollowUp = ({ name, fupFilter, fup }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const data = useSelector((state) => state.contact.update);\r\n  const token = Cookies.get('JWT');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const [remark, setRemark] = useState('');\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .post(\r\n        `/add-remarks-in-followup/${fup._id}/${user._id}`,\r\n        {\r\n          remarks: remark,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        },\r\n      )\r\n      .then((res) => {\r\n        dispatch(\r\n          createFollowUp({ show: false, phone: null, fromContact: false }),\r\n        );\r\n        dispatch(setAlert({ message: 'FollowUp Completed', error: false }));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          setAlert({ message: 'Error converting followup', error: true }),\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {fupFilter === 'Upcoming' ? (\r\n        <>\r\n          {new Date(fup?.date).toLocaleDateString() >=\r\n            new Date().toLocaleDateString() && !fup?.isAttended ? (\r\n            <div\r\n              key={fup?._id}\r\n              className=\"bg-gray-100 w-full p-4 py-1 rounded-md flex justify-between items-center mb-2 cursor-pointer\"\r\n            >\r\n              <div\r\n                onClick={() => history.push(`/contactdetail/${name._id}`)}\r\n                className=\"text-sm cursor-pointer\"\r\n              >\r\n                <p className=\"border-b-2 py-1 pr-4\">\r\n                  <span className=\"font-light mr-2\">Opening Remark:</span>\r\n                  {fup?.text}\r\n                </p>\r\n                <p className=\"border-b-2 pr-4 w-max\">\r\n                  {name?.name +\r\n                    '(' +\r\n                    (name?.organization\r\n                      ? name?.organization?.name + ')' + '('\r\n                      : null) +\r\n                    name?.phone +\r\n                    ')'}\r\n                </p>\r\n                <p>\r\n                  {new Date(fup?.date).toLocaleString('en-US', {\r\n                    timeZone: 'UTC',\r\n                    day: '2-digit',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                  })}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={`px-2 py-1 ml-4 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  placeholder=\"Enter closing remark\"\r\n                  value={remark}\r\n                  onChange={(e) => setRemark(e.target.value)}\r\n                />\r\n                <IconButton\r\n                  onClick={handleSubmit}\r\n                  style={{ padding: '8px', marginLeft: '10px' }}\r\n                >\r\n                  <CheckIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    axiosInstance\r\n                      .delete(`/delete-followup/${fup?._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(data._id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'FollowUp deleted',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch((err) => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting followup',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  }}\r\n                  style={{ padding: '8px' }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n      {fupFilter === 'Today' ? (\r\n        <>\r\n          {new Date(fup?.date).toLocaleDateString() ===\r\n            new Date().toLocaleDateString() && !fup?.isAttended ? (\r\n            <div\r\n              key={fup?._id}\r\n              className=\"bg-gray-100 w-full p-4 py-1 rounded-md flex justify-between items-center mb-2 cursor-pointer\"\r\n            >\r\n              <div\r\n                onClick={() => history.push(`/contactdetail/${name._id}`)}\r\n                className=\"text-sm cursor-pointer\"\r\n              >\r\n                <p className=\"border-b-2 py-1 pr-4\">\r\n                  <span className=\"font-light mr-2\">Opening Remark:</span>\r\n                  {fup?.text}\r\n                </p>\r\n                <p className=\"border-b-2 pr-4 w-max\">\r\n                  {name?.name +\r\n                    '(' +\r\n                    (name?.organization\r\n                      ? name?.organization?.name + ')' + '('\r\n                      : null) +\r\n                    name?.phone +\r\n                    ')'}\r\n                </p>\r\n                <p>\r\n                  {new Date(fup?.date).toLocaleString('en-US', {\r\n                    timeZone: 'UTC',\r\n                    day: '2-digit',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                  })}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={`px-2 py-1 ml-4 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  placeholder=\"Enter closing remark\"\r\n                  value={remark}\r\n                  onChange={(e) => setRemark(e.target.value)}\r\n                />\r\n                <IconButton\r\n                  onClick={handleSubmit}\r\n                  style={{ padding: '8px', marginLeft: '10px' }}\r\n                >\r\n                  <CheckIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    axiosInstance\r\n                      .delete(`/delete-followup/${fup?._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(data._id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'FollowUp deleted',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch((err) => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting followup',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  }}\r\n                  style={{ padding: '8px' }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n\r\n      {fupFilter === 'Missed' ? (\r\n        <>\r\n          {new Date(fup?.date).toLocaleDateString() <\r\n          new Date().toLocaleDateString() ? (\r\n            <div\r\n              key={fup?._id}\r\n              className=\"bg-gray-100 w-full p-4 py-1 rounded-md flex justify-between items-center mb-2 cursor-pointer\"\r\n            >\r\n              <div\r\n                onClick={() => history.push(`/contactdetail/${name._id}`)}\r\n                className=\"text-sm cursor-pointer\"\r\n              >\r\n                <p className=\"border-b-2 py-1 pr-4\">\r\n                  <span className=\"font-light mr-2\">Opening Remark:</span>\r\n                  {fup?.text}\r\n                </p>\r\n                <p className=\"w-max\">\r\n                  {name?.name +\r\n                    '(' +\r\n                    (name?.organization\r\n                      ? name?.organization?.name + ')' + '('\r\n                      : null) +\r\n                    name?.phone +\r\n                    ')'}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <p>\r\n                  {new Date(fup?.date).toLocaleString('en-US', {\r\n                    timeZone: 'UTC',\r\n\r\n                    day: '2-digit',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                  })}\r\n                </p>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    axiosInstance\r\n                      .delete(`/delete-followup/${fup?._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(data._id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'FollowUp deleted',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch((err) => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting followup',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  }}\r\n                  style={{ padding: '8px' }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n      {fupFilter === 'Completed' ? (\r\n        <>\r\n          {fup?.isAttended ? (\r\n            <div\r\n              key={fup?._id}\r\n              className=\"bg-gray-100 w-full p-4 py-1 rounded-md flex justify-between items-center mb-2 cursor-pointer\"\r\n            >\r\n              <div\r\n                onClick={() => history.push(`/contactdetail/${name._id}`)}\r\n                className=\"text-sm cursor-pointer\"\r\n              >\r\n                <p className=\"border-b-2 py-1 pr-4\">\r\n                  <span className=\"font-light mr-2\">Opening Remark:</span>\r\n                  {fup?.text}\r\n                </p>\r\n                <p className=\"border-b-2 pr-4 w-max\">\r\n                  <span className=\" font-light mr-2\">Closing Remark:</span>\r\n                  {fup?.remarks}\r\n                </p>\r\n                <p className=\"\">\r\n                  {name?.name +\r\n                    '(' +\r\n                    (name?.organization\r\n                      ? name?.organization?.name + ')' + '('\r\n                      : null) +\r\n                    name?.phone +\r\n                    ')'}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <p>\r\n                  {new Date(fup?.date).toLocaleString('en-US', {\r\n                    timeZone: 'UTC',\r\n\r\n                    day: '2-digit',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                  })}\r\n                </p>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    axiosInstance\r\n                      .delete(`/delete-followup/${fup?._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(data._id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'FollowUp deleted',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch((err) => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting followup',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  }}\r\n                  style={{ padding: '8px' }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardFollowUp;\r\n","import React, { useEffect, useState } from 'react';\r\nimport LeadsChart from '../../Components/LeadsChart';\r\nimport { useSelector } from 'react-redux';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport DashboardFollowUp from './DashboardFollowUp';\r\nimport EventIcon from '@mui/icons-material/Event';\r\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\r\nimport AccessTimeFilledIcon from '@mui/icons-material/AccessTimeFilled';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport DomainIcon from '@mui/icons-material/Domain';\r\nimport ContactsIcon from '@mui/icons-material/Contacts';\r\n\r\nconst Dashboard = () => {\r\n  const [leads, setLeads] = useState([]);\r\n  const [followUp, setFollowUp] = useState([]);\r\n  const contact = useSelector((state) => state.contact.contact);\r\n  const org = useSelector((state) => state.contact.organizations);\r\n  const refreshFollowUp = useSelector((state) => state.contact.followUp);\r\n  const [fupFilter, setFupFilter] = useState('Today');\r\n  useEffect(() => {\r\n    axiosInstance.get('/leads').then((res) => {\r\n      setLeads(res.data);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(`/followups`)\r\n      .then((res) => {\r\n        setFollowUp(res.data);\r\n      })\r\n      .catch((error) => {});\r\n  }, [refreshFollowUp]);\r\n\r\n  const month = new Date().toLocaleString('en-US', {\r\n    month: '2-digit',\r\n  });\r\n  const year = new Date().toLocaleString('en-US', {\r\n    year: 'numeric',\r\n  });\r\n\r\n  let completed = 0;\r\n  let totalLeads = 0;\r\n  let cancelled = 0;\r\n  let customer = 0;\r\n\r\n  leads?.forEach((element) => {\r\n    const leadyear = new Date(element.updatedAt).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n    });\r\n    const leadmonth = new Date(element.updatedAt).toLocaleString('en-US', {\r\n      month: '2-digit',\r\n    });\r\n    if (leadyear === year && leadmonth === month) {\r\n      totalLeads++;\r\n      if (element.status === 'Completed') {\r\n        completed++;\r\n      } else if (element.status === 'Cancelled') {\r\n        cancelled++;\r\n      }\r\n    }\r\n  });\r\n\r\n  contact?.forEach((element) => {\r\n    if (element.isCustomer) {\r\n      customer++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"mt-10 mx-10\">\r\n      <div className=\"w-full bg-white p-6 rounded-lg\">\r\n        <h2 className=\"text-3xl font-semibold\">Dashboard</h2>\r\n      </div>\r\n\r\n      <div className=\"w-full flex justify-between mt-5\">\r\n        <div className=\"w-full flex flex-col flex-1 items-center \">\r\n          <div className=\"w-full flex mb-4\">\r\n            <div className=\" bg-green-400 mr-2 rounded-lg w-full h-32 flex flex-col justify-center items-center p-6\">\r\n              <p className=\"text-2xl flex items-center\">\r\n                <ThumbUpAltIcon fontSize=\"large\" />\r\n                <span className=\"ml-3\">Closed Leads</span>\r\n              </p>\r\n              <p className=\"text-2xl\">{completed}</p>\r\n            </div>\r\n            <div className=\" bg-yellow-400 mr-2 rounded-lg w-full h-32 flex flex-col justify-center items-center p-6\">\r\n              <p className=\"text-2xl flex items-center\">\r\n                <AccessTimeFilledIcon fontSize=\"large\" />\r\n                <span className=\"ml-3\">Pending Leads</span>\r\n              </p>\r\n              <p className=\"text-2xl\">{totalLeads - completed - cancelled}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full flex mb-4\">\r\n            <div className=\" bg-red-400 mr-2 rounded-lg w-full h-32 flex flex-col justify-center items-center p-6\">\r\n              <p className=\"text-2xl flex items-center\">\r\n                <PersonOffIcon fontSize=\"large\" />\r\n                <span className=\"ml-3\">Rejected Leads</span>\r\n              </p>\r\n              <p className=\"text-2xl\">{cancelled}</p>\r\n            </div>\r\n            <div className=\" bg-blue-400 mr-2 rounded-lg w-full h-32 flex flex-col justify-center items-center p-6\">\r\n              <p className=\"text-2xl flex items-center\">\r\n                <ListAltIcon fontSize=\"large\" />\r\n                <span className=\"ml-3\">All Leads</span>\r\n              </p>\r\n              <p className=\"text-2xl\">{totalLeads}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full flex\">\r\n            <div className=\" bg-purple-400 mr-2 rounded-lg w-full h-32 flex flex-col justify-center items-center p-6\">\r\n              <p className=\"text-2xl flex items-center\">\r\n                <DomainIcon fontSize=\"large\" />\r\n                <span className=\"ml-3\">Total Organizations</span>\r\n              </p>\r\n              <p className=\"text-2xl\">{org.length}</p>\r\n            </div>\r\n            <div className=\"bg-purple-400  mr-2 rounded-lg w-full h-32 flex flex-col justify-center items-center p-6\">\r\n              <p className=\"text-2xl flex items-center\">\r\n                <ContactsIcon fontSize=\"large\" />\r\n                <span className=\"ml-3\">Total Contacts</span>\r\n              </p>\r\n              <p className=\"text-2xl\">{contact.length}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <h2 className=\"text-xl my-4\">Leads This Year</h2> */}\r\n          {/* <LeadsChart leads={leads} /> */}\r\n        </div>\r\n        <div className=\" max-h-lead w-full flex flex-col flex-1 items-center bg-white rounded-lg\">\r\n          <div className=\"flex my-3 justify-between w-full px-4\">\r\n            <h2 className=\"text-2xl ml-4 w-max\">\r\n              Follow Ups today <EventIcon />\r\n            </h2>\r\n            <div className=\"w-1/2 flex items-center justify-end\">\r\n              <select\r\n                className={`p-2 w-3/4 py-1 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                name=\"\"\r\n                id=\"\"\r\n                value={fupFilter}\r\n                onChange={(e) => setFupFilter(e.target.value)}\r\n              >\r\n                <option value=\"Today\" selected>\r\n                  Today\r\n                </option>\r\n                <option value=\"Upcoming\">Upcoming</option>\r\n                <option value=\"Completed\">Completed</option>\r\n                <option value=\"Missed\">Missed</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"h-68 w-full px-4 overflow-auto\">\r\n            {followUp?.map((fup) => {\r\n              const detail = contact?.filter(\r\n                (f) => f._id === fup?.contactId,\r\n              )[0];\r\n              return (\r\n                <>\r\n                  <DashboardFollowUp\r\n                    name={detail}\r\n                    fupFilter={fupFilter}\r\n                    fup={fup}\r\n                  />\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { SET_CONFIRMATION } from '../actionTypes';\r\n\r\nconst setConfirmation = (data) => ({\r\n  type: SET_CONFIRMATION,\r\n  payload: data,\r\n});\r\n\r\nexport { setConfirmation };\r\n","import { IconButton, Menu, MenuItem, Tooltip } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { matchSorter } from 'match-sorter';\r\nimport {\r\n  useTable,\r\n  usePagination,\r\n  useRowSelect,\r\n  useSortBy,\r\n  useAsyncDebounce,\r\n  useFilters,\r\n  useGlobalFilter,\r\n} from 'react-table';\r\nimport './table.css';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport DownloadForOfflineIcon from '@mui/icons-material/DownloadForOffline';\r\nimport { CSVLink } from 'react-csv';\r\nimport { Refresh } from '@material-ui/icons';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport { setConfirmation } from '../context/actions/confirmationAction';\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef();\r\n    const resolvedRef = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <span className=\"font-semibold\">\r\n      Search:{' '}\r\n      <input\r\n        className={`ml-2 px-2 py-1 focus:outline-none rounded-md focus:ring-1 ring-red-1 `}\r\n        value={value || ''}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`Search ${count} records...`}\r\n        style={{\r\n          fontSize: '1.1rem',\r\n          border: '0',\r\n        }}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction dateBetweenFilterFn(rows, id, filterValues) {\r\n  let sd = filterValues[0]\r\n    ? new Date(filterValues[0]).toDateString()\r\n    : undefined;\r\n  let ed = filterValues[1]\r\n    ? new Date(\r\n        new Date(filterValues[1]).setDate(\r\n          new Date(filterValues[1]).getDate() - 1,\r\n        ),\r\n      ).toDateString()\r\n    : undefined;\r\n\r\n  console.log(sd, ed);\r\n\r\n  if (ed || sd) {\r\n    return rows.filter((r) => {\r\n      var time = new Date(r.values[id]).toDateString();\r\n      if (ed && sd) {\r\n        return time >= sd && time <= ed;\r\n      } else if (sd) {\r\n        return time >= sd;\r\n      } else if (ed) {\r\n        return time <= ed;\r\n      }\r\n    });\r\n  } else {\r\n    return rows;\r\n  }\r\n}\r\n\r\ndateBetweenFilterFn.autoRemove = (val) => !val;\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\nfunction Table({\r\n  columns,\r\n  data,\r\n  customer,\r\n  not_customer,\r\n  deleteFunc,\r\n  update,\r\n  path,\r\n  refresh,\r\n  tablepath,\r\n  text,\r\n  isContact,\r\n  isOrg,\r\n}) {\r\n  const [dataExport, setdataExport] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  // Use the state and functions returned from useTable to build your UI\r\n\r\n  const [customerType, setCustomerType] = useState('All');\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      dateBetween: dateBetweenFilterFn,\r\n\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    [],\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    visibleColumns,\r\n    state,\r\n    setGlobalFilter,\r\n    setAllFilters,\r\n    state: { pageIndex, pageSize, selectedRowIds },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data:\r\n        customerType === 'All'\r\n          ? data\r\n          : customerType === 'Customer'\r\n          ? customer\r\n          : not_customer,\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter, // useGlobalFilter!\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => [\r\n        // Let's make a column for selection\r\n        {\r\n          id: 'selection',\r\n          // The header can use the table's getToggleAllRowsSelectedProps method\r\n          // to render a checkbox\r\n          Header: ({ getToggleAllRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n            </div>\r\n          ),\r\n          // The cell can use the individual row's getToggleRowSelectedProps method\r\n          // to the render a checkbox\r\n          Cell: ({ row }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n            </div>\r\n          ),\r\n        },\r\n        ...columns,\r\n      ]);\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    var keys = Object.keys(selectedRowIds);\r\n    var downloads = new Array();\r\n    keys.forEach(function (item, index) {\r\n      downloads.push(data[item]);\r\n    });\r\n\r\n    setdataExport(downloads);\r\n  }, [selectedRowIds]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div className=\"w-full flex justify-end bg-white rounded-t-lg mt-4\">\r\n        <div className=\"flex w-full justify-between items-center\">\r\n          <div className=\"pl-1\">\r\n            {isOrg ? null : (\r\n              <Tooltip title=\"Refresh\">\r\n                <IconButton onClick={() => dispatch(refresh())}>\r\n                  <Refresh style={{ fontSize: '35px' }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            <Tooltip title=\"Export data\">\r\n              <IconButton\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}\r\n                style={{ outlineWidth: '0' }}\r\n              >\r\n                <DownloadForOfflineIcon style={{ fontSize: '35px' }} />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              MenuListProps={{\r\n                'aria-labelledby': 'basic-button',\r\n              }}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <CSVLink data={dataExport}>Download Selected</CSVLink>\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose}>\r\n                <CSVLink data={data}>Download All</CSVLink>\r\n              </MenuItem>\r\n            </Menu>\r\n            <Tooltip title=\"Clear all filters\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  setAllFilters([]);\r\n                }}\r\n              >\r\n                <CancelIcon style={{ fontSize: '35px' }} />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n          <div className=\"pagination\">\r\n            <div className=\"flex flex-col sm:flex-row justify-center items-center\">\r\n              <div className=\"flex flex-row\">\r\n                <Tooltip title=\"First Page\">\r\n                  <IconButton\r\n                    onClick={() => gotoPage(0)}\r\n                    disabled={!canPreviousPage}\r\n                  >\r\n                    <FirstPageIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Previous Page\">\r\n                  <IconButton\r\n                    onClick={() => previousPage()}\r\n                    disabled={!canPreviousPage}\r\n                  >\r\n                    <NavigateBeforeIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Next Page\">\r\n                  <IconButton\r\n                    onClick={() => nextPage()}\r\n                    disabled={!canNextPage}\r\n                  >\r\n                    <NavigateNextIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Last Page\">\r\n                  <IconButton\r\n                    onClick={() => gotoPage(pageCount - 1)}\r\n                    disabled={!canNextPage}\r\n                  >\r\n                    <LastPageIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </div>\r\n              <div className=\"flex items-center justify-center\">\r\n                <span>\r\n                  Page\r\n                  <strong className=\"mr-1\">\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                  </strong>\r\n                </span>\r\n                <div className=\"hidden sm:flex\">\r\n                  <span>\r\n                    | Go to page:\r\n                    <input\r\n                      className={`px-2 py-1 mx-1 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                      type=\"number\"\r\n                      defaultValue={pageIndex + 1}\r\n                      onChange={(e) => {\r\n                        const page = e.target.value\r\n                          ? Number(e.target.value) - 1\r\n                          : 0;\r\n                        gotoPage(page);\r\n                      }}\r\n                      style={{ width: '100px' }}\r\n                    />\r\n                  </span>\r\n                </div>\r\n                <select\r\n                  className={`py-1 px-2 mx-1 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  value={pageSize}\r\n                  onChange={(e) => {\r\n                    setPageSize(Number(e.target.value));\r\n                  }}\r\n                >\r\n                  {[10, 20, 30, 40, 50].map((pageSize) => (\r\n                    <option key={pageSize} value={pageSize}>\r\n                      Show {pageSize}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-4 pb-4 bg-white overflow-x-auto rounded-b-lg\">\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                colSpan={visibleColumns.length + 2}\r\n                style={{\r\n                  textAlign: 'left',\r\n                }}\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={state.globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                  />\r\n                  <div className=\"flex items-center\">\r\n                    {isContact ? (\r\n                      <div className=\"font-semibold\">\r\n                        <label>Contact type: </label>\r\n                        <select\r\n                          className=\"border border-gray-300 rounded-md mr-4 outline-none\"\r\n                          value={customerType}\r\n                          onChange={(e) => setCustomerType(e.target.value)}\r\n                        >\r\n                          <option selected value=\"All\">\r\n                            All\r\n                          </option>\r\n                          <option value=\"Customer\">Customer</option>\r\n                          <option value=\"Not a customer\">Not a customer</option>\r\n                        </select>\r\n                      </div>\r\n                    ) : null}\r\n                    {headerGroups.map((headerGroup) =>\r\n                      headerGroup.headers.map((column) => (\r\n                        <>\r\n                          {column.canFilter && column.Header === 'Created At'\r\n                            ? column.render('Filter')\r\n                            : null}\r\n                        </>\r\n                      )),\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n\r\n            {headerGroups.map((headerGroup, index) => (\r\n              <tr key={index} {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column, index) => (\r\n                  <th\r\n                    key={index}\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  >\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <ArrowDownwardIcon />\r\n                        ) : (\r\n                          <ArrowUpwardIcon />\r\n                        )\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </span>\r\n                    {/* <div>\r\n                      {column.canFilter && column.Header === 'Created At'\r\n                        ? column.render('Filter')\r\n                        : null}\r\n                    </div> */}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, index) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr key={index} {...row.getRowProps()}>\r\n                  <>\r\n                    {row.cells.map((cell, index) => {\r\n                      return (\r\n                        <>\r\n                          {cell.column.id === 'item_name' ||\r\n                          cell.column.id === 'name' ||\r\n                          cell.column.id === 'company' ? (\r\n                            <td\r\n                              key={index}\r\n                              style={{ cursor: 'pointer' }}\r\n                              onClick={() => {\r\n                                dispatch(update(data[row.id]));\r\n                                history.push(\r\n                                  `${tablepath}/${data[row.id]._id}`,\r\n                                );\r\n                              }}\r\n                              {...cell.getCellProps()}\r\n                            >\r\n                              {cell.render('Cell')}\r\n                            </td>\r\n                          ) : (\r\n                            <td key={index} {...cell.getCellProps()}>\r\n                              {cell.render('Cell')}\r\n                            </td>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </>\r\n                  {tablepath !== '/organizationdetail' ? (\r\n                    <>\r\n                      {' '}\r\n                      <td className=\"w-max p-1 px-0\">\r\n                        <div className=\"flex justify-evenly items-center\">\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              dispatch(\r\n                                setConfirmation({\r\n                                  show: true,\r\n                                  text: text,\r\n                                  func: () => {\r\n                                    dispatch(deleteFunc(data[row.id]._id));\r\n                                  },\r\n                                }),\r\n                              );\r\n                            }}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                          <div className=\"h-6 bg-gray-300 border border-r-1\"></div>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              dispatch(update(data[row.id]));\r\n                              history.push(`${path}/${data[row.id]._id}`);\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      </td>\r\n                    </>\r\n                  ) : null}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import Cookies from 'js-cookie';\r\nimport axiosInstance from '../../../utils/axiosInstance';\r\nimport {\r\n  ADD_LEAD,\r\n  DELETE_LEAD,\r\n  SELECTED_LEAD,\r\n  SET_LEADS,\r\n  SET_UPDATELEAD,\r\n  UPDATE_LEAD,\r\n} from '../../actionTypes';\r\nimport { refreshContact } from '../contactAction/contactAction';\r\nimport { setAlert } from '../errorActions';\r\n\r\nconst setLeads = (data) => ({\r\n  type: SET_LEADS,\r\n  payload: data,\r\n});\r\n\r\nconst deletelead = (data) => ({\r\n  type: DELETE_LEAD,\r\n  payload: data,\r\n});\r\n\r\nconst setupdatelead = (data) => ({\r\n  type: SET_UPDATELEAD,\r\n  payload: data,\r\n});\r\n\r\nconst updatelead = (data) => ({\r\n  type: UPDATE_LEAD,\r\n  payload: data,\r\n});\r\n\r\nconst selectedlead = (data) => ({\r\n  type: SELECTED_LEAD,\r\n  payload: data,\r\n});\r\n\r\nconst addLead = (data) => ({\r\n  type: ADD_LEAD,\r\n  payload: data,\r\n});\r\n\r\nconst getLead = () => {\r\n  return (dispatch) => {\r\n    axiosInstance\r\n      .get('/leads')\r\n      .then((res) => {\r\n        dispatch(setLeads(res.data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nconst createLead = (values, resetForm, history, id) => {\r\n  return (dispatch) => {\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    console.log(values);\r\n    axiosInstance\r\n      .post(`/create-lead/${user._id}`, values, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (id) {\r\n          dispatch(refreshContact(id));\r\n        }\r\n        dispatch(addLead(res.data));\r\n        resetForm();\r\n        dispatch(\r\n          setAlert({ message: 'Lead created successfully', error: false }),\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(setAlert({ message: 'Error creating lead', error: true }));\r\n        resetForm();\r\n      });\r\n  };\r\n};\r\n\r\n// const updateLead = (id,values, resetForm, history) => {\r\n//   return (dispatch) => {\r\n//     const token = Cookies.get('JWT');\r\n//     const user = JSON.parse(localStorage.getItem('user'));\r\n//     axiosInstance\r\n//       .post(`/lead/${id}/${user._id}`, values, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//       })\r\n//       .then((res) => {\r\n//         dispatch(getLead());\r\n//         resetForm();\r\n//         history.push('/leads');\r\n//       })\r\n//       .catch((err) => {\r\n//         resetForm();\r\n//       });\r\n//   };\r\n// };\r\n\r\nconst deleteLead = (data) => {\r\n  return (dispatch) => {\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .delete(`/lead/${data}/${user._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(\r\n          setAlert({ message: 'Lead deleted successfully', error: false }),\r\n        );\r\n        dispatch(deletelead(data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setAlert({ message: 'Error deleting lead', error: true }));\r\n      });\r\n  };\r\n};\r\n\r\nconst convertDeal = (values, lead, deal, resetForm, setbutton) => {\r\n  return (dispatch) => {\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .put(`/convert-deal/${lead}/${deal}/${user._id}`, values, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(refreshLead(deal));\r\n        dispatch(\r\n          setAlert({ message: 'Deal converted successfully', error: false }),\r\n        );\r\n        resetForm();\r\n        setbutton({\r\n          details: true,\r\n          items: false,\r\n          quotation: false,\r\n          order: false,\r\n          invoice: false,\r\n          convert: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setAlert({ message: 'Error converting deal', error: true }));\r\n        resetForm();\r\n      });\r\n  };\r\n};\r\n\r\nconst refreshLead = (id) => {\r\n  return (dispatch) => {\r\n    axiosInstance\r\n      .get(`/lead/${id}`)\r\n      .then((res) => {\r\n        dispatch(selectedlead(res.data));\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nexport {\r\n  getLead,\r\n  setLeads,\r\n  createLead,\r\n  deleteLead,\r\n  setupdatelead,\r\n  convertDeal,\r\n  updatelead,\r\n  selectedlead,\r\n  refreshLead,\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nfunction DateRangeColumnFilter({\r\n  column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n  const [min, max] = useMemo(() => {\r\n    let min = preFilteredRows.length\r\n      ? new Date(preFilteredRows[0].values[id])\r\n      : new Date(0);\r\n    let max = preFilteredRows.length\r\n      ? new Date(preFilteredRows[0].values[id])\r\n      : new Date(0);\r\n\r\n    preFilteredRows.forEach((row) => {\r\n      const rowDate = new Date(row.values[id]);\r\n\r\n      min = rowDate <= min ? rowDate : min;\r\n      max = rowDate >= max ? rowDate : max;\r\n    });\r\n\r\n    return [min, max];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <div className=\"flex font-semibold items-center\">\r\n      <p className=\"mr-4 \">Filter by date: </p>\r\n      <div>\r\n        <input\r\n          min={new Date(new Date(min).setDate(min.getDate() + 1))\r\n            .toISOString()\r\n            .slice(0, 10)}\r\n          max={new Date(new Date(max).setDate(max.getDate() + 1))\r\n            .toISOString()\r\n            .slice(0, 10)}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            setFilter((old = []) => [val ? val : undefined, old[1]]);\r\n          }}\r\n          type=\"date\"\r\n          value={filterValue[0] || ''}\r\n          className=\"border border-gray-300 p-1 rounded-lg\"\r\n        />\r\n        {' to '}\r\n\r\n        <input\r\n          min={new Date(new Date(min).setDate(min.getDate() + 1))\r\n            .toISOString()\r\n            .slice(0, 10)}\r\n          max={new Date(new Date(max).setDate(max.getDate() + 1))\r\n            .toISOString()\r\n            .slice(0, 10)}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            setFilter((old = []) => [\r\n              old[0],\r\n              val ? val.concat('T23:59:59.999Z') : undefined,\r\n            ]);\r\n          }}\r\n          type=\"date\"\r\n          value={filterValue[1]?.slice(0, 10) || ''}\r\n          className=\"border border-gray-300 p-1 rounded-lg\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DateRangeColumnFilter;\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport Table from '../../Components/reactTable';\r\nimport {\r\n  deleteLead,\r\n  getLead,\r\n  selectedlead,\r\n} from '../../context/actions/leadAction/leadActions';\r\nimport DateRangeColumnFilter from '../../utils/dateFilter';\r\n\r\nconst Leads = () => {\r\n  const history = useHistory();\r\n  const DATA = useSelector((state) => state.lead.leads);\r\n\r\n  for (let elm of DATA) {\r\n    elm.createdAt = new Date(elm.createdAt).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      day: 'numeric',\r\n      month: 'numeric',\r\n    });\r\n    elm.updatedAt = new Date(elm.updatedAt).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      day: 'numeric',\r\n      month: 'numeric',\r\n    });\r\n  }\r\n\r\n  const headCells = [\r\n    {\r\n      accessor: 'title',\r\n      Header: 'Title',\r\n    },\r\n    {\r\n      accessor: 'name',\r\n      Header: 'Name',\r\n    },\r\n    {\r\n      accessor: 'phone',\r\n      Header: 'Phone',\r\n    },\r\n    {\r\n      accessor: 'status',\r\n      Header: 'Lead Status',\r\n    },\r\n    {\r\n      accessor: 'company',\r\n      Header: 'Company',\r\n    },\r\n    {\r\n      accessor: 'rating',\r\n      Header: 'Rating',\r\n    },\r\n    {\r\n      accessor: 'updatedAt',\r\n      Header: 'Created At',\r\n      Filter: DateRangeColumnFilter,\r\n      filter: 'dateBetween',\r\n    },\r\n    {\r\n      accessor: 'email',\r\n      Header: 'Email',\r\n    },\r\n  ];\r\n\r\n  const columns = useMemo(() => headCells, []);\r\n  const data = useMemo(() => DATA, [DATA]);\r\n\r\n  return (\r\n    <div className=\"mt-10 mx-4\">\r\n      <div className=\"bg-white flex justify-between items-center p-3\">\r\n        <h2 className=\"text-2xl font-bold m-0 ml-2\">Leads</h2>\r\n        <button\r\n          onClick={() => {\r\n            history.push('/createlead');\r\n          }}\r\n          className=\"bg-green-500 hover:bg-green-600 text-white p-4 py-2 rounded-md\"\r\n        >\r\n          Create Lead\r\n        </button>\r\n      </div>\r\n\r\n      <Table\r\n        columns={columns}\r\n        data={data}\r\n        deleteFunc={deleteLead}\r\n        update={selectedlead}\r\n        path=\"/updatelead\"\r\n        refresh={getLead}\r\n        tablepath={'/leaddetail'}\r\n        isLead={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leads;\r\n","import { useFormik } from 'formik';\r\nimport Cookies from 'js-cookie';\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport Select from 'react-select';\r\nimport { createcontactCard } from '../../context/actions/contactAction/contactAction';\r\n\r\nconst Message = () => {\r\n  const contact = useSelector((state) => state.contact.contact);\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.contact) {\r\n      errors.contact = '*Required';\r\n    }\r\n    if (!values.message) {\r\n      errors.message = '*Required';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const history = useHistory();\r\n  const { getFieldProps, errors, values, resetForm, setFieldValue } = useFormik(\r\n    {\r\n      initialValues: {\r\n        contact: '',\r\n        message: '',\r\n      },\r\n      validate,\r\n    },\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0) {\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const token = Cookies.get('JWT');\r\n      axiosInstance\r\n        .post(\r\n          `/send-sms/${values.contact}/${user._id}`,\r\n          { message: values.message },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          },\r\n        )\r\n        .then((res) => {\r\n          resetForm();\r\n          dispatch(\r\n            setAlert({ message: 'Message sent successfully', error: false }),\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          resetForm();\r\n          dispatch(setAlert({ message: 'Error sending message', error: true }));\r\n        });\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  let options = [];\r\n\r\n  contact.forEach((element) => {\r\n    options.push({\r\n      value: element._id,\r\n      label:\r\n        element.name +\r\n        '(' +\r\n        element.phone +\r\n        ')' +\r\n        (element.company !== 'NA' ? `(${element.company})` : ''),\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-10 mx-4\">\r\n        <div className=\"bg-white lg:w-1/2 flex justify-between items-center p-4 mb-4 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold m-0\">Message</h2>\r\n          <button\r\n            onClick={() => {\r\n              dispatch(\r\n                createcontactCard({\r\n                  show: true,\r\n                  phone: null,\r\n                  fromLead: false,\r\n                }),\r\n              );\r\n            }}\r\n            className=\"bg-green-500 hover:bg-green-600 text-white p-4 py-2 rounded-md\"\r\n          >\r\n            Create Contact\r\n          </button>\r\n        </div>\r\n        <div className=\"bg-white lg:w-1/2 p-4 flex-1 flex flex-col rounded-lg\">\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Select Contact\r\n            </lable>\r\n            <Select\r\n              theme={(theme) => ({\r\n                ...theme,\r\n                borderRadius: 5,\r\n                colors: {\r\n                  ...theme.colors,\r\n                  primary25: 'lightgray',\r\n                  primary: 'lightgray',\r\n                },\r\n              })}\r\n              options={options}\r\n              onChange={(selectedOption) => {\r\n                setFieldValue(`contact`, selectedOption.value);\r\n              }}\r\n            />\r\n            {errors.contact ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.contact}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Enter Message\r\n            </lable>\r\n            <textarea\r\n              rows={8}\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter message\"\r\n              {...getFieldProps('message')}\r\n            />\r\n            {errors.message ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.message}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <button\r\n            onClick={(e) => {\r\n              handleSubmit(e);\r\n            }}\r\n            className=\"bg-green-600 mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md my-4 mx-2 text-white\"\r\n          >\r\n            Send Message\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import Cookies from 'js-cookie';\r\nimport axiosInstance from '../../../utils/axiosInstance';\r\nimport {\r\n  DELETE_INVENTORY,\r\n  SET_INVENTORY,\r\n  SET_UPDATEINVENTORY,\r\n} from '../../actionTypes';\r\nimport { setAlert } from '../errorActions';\r\n\r\nconst setInventory = (data) => ({\r\n  type: SET_INVENTORY,\r\n  payload: data,\r\n});\r\n\r\nconst deleteinventory = (data) => ({\r\n  type: DELETE_INVENTORY,\r\n  payload: data,\r\n});\r\n\r\nconst setupdateinventory = (data) => ({\r\n  type: SET_UPDATEINVENTORY,\r\n  payload: data,\r\n});\r\n\r\nconst getInventory = () => {\r\n  return (dispatch) => {\r\n    axiosInstance\r\n      .get('/inventories')\r\n      .then((res) => {\r\n        dispatch(setInventory(res.data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nconst createInventory = (formdata, resetForm, history) => {\r\n  return (dispatch) => {\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .post(`/add-inventory/${user._id}`, formdata, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(getInventory());\r\n        resetForm();\r\n        history.push('/inventory');\r\n        dispatch(\r\n          setAlert({\r\n            message: 'Inventory created successfully',\r\n            error: false,\r\n          }),\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          setAlert({ message: 'Error creating inventory', error: true }),\r\n        );\r\n        resetForm();\r\n      });\r\n  };\r\n};\r\n\r\nconst updateInventory = (id, data, resetForm, history) => {\r\n  return (dispatch) => {\r\n    console.log(data);\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .patch(`/inventory/${id}/${user._id}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(getInventory());\r\n        resetForm();\r\n        history.push('/inventory');\r\n        dispatch(\r\n          setAlert({\r\n            message: 'Inventory updated successfully',\r\n            error: false,\r\n          }),\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          setAlert({ message: 'Error updating inventory', error: true }),\r\n        );\r\n        resetForm();\r\n      });\r\n  };\r\n};\r\n\r\nconst deleteInventory = (data) => {\r\n  return (dispatch) => {\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .delete(`/inventory/${data}/${user._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(\r\n          setAlert({ message: 'Inventory deleted successfully', error: false }),\r\n        );\r\n        dispatch(deleteinventory(data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          setAlert({ message: 'Error deleting inventory', error: true }),\r\n        );\r\n      });\r\n  };\r\n};\r\nconst refreshInventory = (id) => {\r\n  return (dispatch) => {\r\n    axiosInstance\r\n      .get(`/inventory/${id}`)\r\n      .then((res) => {\r\n        dispatch(setupdateinventory(res.data));\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nexport {\r\n  createInventory,\r\n  getInventory,\r\n  setInventory,\r\n  deleteInventory,\r\n  setupdateinventory,\r\n  updateInventory,\r\n  refreshInventory,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport Cookies from 'js-cookie';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport { getInventory } from '../../context/actions/inventoryAction/inventoryAction';\r\n\r\nconst UpdateSkuCard = ({ show, setShow }) => {\r\n  const dispatch = useDispatch();\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.sku) {\r\n      errors.sku = '*Required';\r\n    }\r\n    if (!values.id) {\r\n      errors.id = '*Required';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, values, setValues, setFieldValue, resetForm } =\r\n    useFormik({\r\n      initialValues: {\r\n        id: '',\r\n        sku: '',\r\n      },\r\n      validate,\r\n    });\r\n\r\n  let options = [];\r\n\r\n  inventory.forEach((element) => {\r\n    options.push({\r\n      value: element._id,\r\n      label: element.item_name + '(' + element.article + ')',\r\n    });\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0) {\r\n      const token = Cookies.get('JWT');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      axiosInstance\r\n        .patch(\r\n          `/inventory/${values.id}/${user._id}`,\r\n          { sku: values.sku },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          },\r\n        )\r\n        .then((res) => {\r\n          setShow(false);\r\n          dispatch(getInventory());\r\n          resetForm();\r\n          dispatch(\r\n            setAlert({\r\n              message: 'Inventory updated successfully',\r\n              error: false,\r\n            }),\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          dispatch(\r\n            setAlert({ message: 'Error updating inventory', error: true }),\r\n          );\r\n          resetForm();\r\n        });\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sku = inventory?.filter((f) => f._id === values?.id)[0]?.sku;\r\n    setValues({ ...values, sku: sku });\r\n  }, [values.id, inventory]);\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        show ? 'block' : 'hidden'\r\n      }  fixed top-1/2 right-1/2 transform translate-x-1/2 z-50 -translate-y-1/2 flex justify-center items-center w-full h-full bg-black bg-opacity-20 mt-10 mx-4  `}\r\n    >\r\n      <div className=\"bg-white rounded-md shadow-2xl w-1/4 \">\r\n        <div className=\"w-full flex justify-end\">\r\n          <IconButton onClick={() => setShow(false)}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <h3 className=\"text-center text-xl font-semibold mb-6\">Update SKU</h3>\r\n        <div className=\"px-6 pb-6\">\r\n          <div>\r\n            <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n              <Select\r\n                theme={(theme) => ({\r\n                  ...theme,\r\n                  borderRadius: 5,\r\n                  colors: {\r\n                    ...theme.colors,\r\n                    primary25: 'lightgray',\r\n                    primary: 'lightgray',\r\n                  },\r\n                })}\r\n                options={options}\r\n                onChange={(selectedOption) => {\r\n                  setFieldValue(`id`, selectedOption.value);\r\n                }}\r\n              />\r\n              {errors.id ? (\r\n                <div className=\"w-full text-sm text-red-400\">{errors.id}</div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">SKU</lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter message\"\r\n                {...getFieldProps('sku')}\r\n              />\r\n              {errors.sku ? (\r\n                <div className=\"w-full text-sm text-red-400\">{errors.sku}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"px-2 mt-6 flex flex-col w-full\">\r\n            <Button\r\n              onClick={(e) => {\r\n                handleSubmit(e);\r\n              }}\r\n              style={{\r\n                backgroundColor: 'rgba(16, 185, 129, var(--tw-bg-opacity))',\r\n                color: 'white',\r\n              }}\r\n            >\r\n              Update SKU\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateSkuCard;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Table from '../../Components/reactTable';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  deleteInventory,\r\n  getInventory,\r\n  setupdateinventory,\r\n} from '../../context/actions/inventoryAction/inventoryAction';\r\nimport DateRangeColumnFilter from '../../utils/dateFilter';\r\nimport UpdateSkuCard from './UpdateSkuCard';\r\n\r\nconst Inventory = () => {\r\n  const history = useHistory();\r\n\r\n  const DATA = useSelector((state) => state.inventory.inventory);\r\n\r\n  for (let elm of DATA) {\r\n    elm.createdAt = new Date(elm?.createdAt).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      day: 'numeric',\r\n      month: 'numeric',\r\n    });\r\n    elm.updatedAt = new Date(elm?.updatedAt).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      day: 'numeric',\r\n      month: 'numeric',\r\n    });\r\n  }\r\n\r\n  const headCells = [\r\n    {\r\n      accessor: 'type',\r\n      Header: 'Type',\r\n    },\r\n    {\r\n      accessor: 'item_name',\r\n      Header: 'Item Name',\r\n    },\r\n    {\r\n      accessor: 'article',\r\n      Header: 'Article',\r\n    },\r\n    {\r\n      accessor: 'sku',\r\n      Header: 'SKU',\r\n    },\r\n\r\n    {\r\n      accessor: 'brand',\r\n      Header: 'Brand',\r\n    },\r\n    {\r\n      accessor: 'manufacturer',\r\n      Header: 'Manufacturer',\r\n    },\r\n    {\r\n      accessor: 'sale_price',\r\n      Header: 'Sales price',\r\n    },\r\n    {\r\n      accessor: 'purchase_price',\r\n      Header: 'Purchase price',\r\n    },\r\n    {\r\n      accessor: 'isbn_code',\r\n      Header: 'ISBN Code',\r\n    },\r\n    {\r\n      accessor: 'createdAt',\r\n      Header: 'Created At',\r\n      Filter: DateRangeColumnFilter,\r\n      filter: 'dateBetween',\r\n    },\r\n  ];\r\n\r\n  const columns = useMemo(() => headCells, []);\r\n  const data = useMemo(() => DATA, [DATA]);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <div className=\"mt-10 mx-4\">\r\n      <UpdateSkuCard show={show} setShow={setShow} />\r\n      <div className=\"bg-white flex justify-between items-center p-4 mb-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-bold m-0\">Inventory</h2>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n            className=\"bg-green-500 hover:bg-green-600 text-white p-4 py-2 mr-4 rounded-md\"\r\n          >\r\n            Update Inventory\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              history.push('/createinventory');\r\n            }}\r\n            className=\"bg-green-500 hover:bg-green-600 text-white p-4 py-2 rounded-md\"\r\n          >\r\n            Create Inventory\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Table\r\n        columns={columns}\r\n        data={data}\r\n        deleteFunc={deleteInventory}\r\n        update={setupdateinventory}\r\n        path={'/updateinventory'}\r\n        refresh={getInventory}\r\n        tablepath={'/inventorydetails'}\r\n        text={'Are you sure you want to delete?'}\r\n        isContact={false}\r\n        isOrg={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React, { useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Table from '../../Components/reactTable';\r\nimport {\r\n  createcontactCard,\r\n  deleteContact,\r\n  getContact,\r\n  setupdatecontact,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport DateRangeColumnFilter from '../../utils/dateFilter';\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const DATA = useSelector((state) => state.contact.contact);\r\n\r\n  for (let elm of DATA) {\r\n    elm.createdAt = new Date(elm.createdAt).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      day: 'numeric',\r\n      month: 'numeric',\r\n    });\r\n  }\r\n\r\n  const headCells = [\r\n    {\r\n      accessor: 'name',\r\n      Header: 'Name',\r\n    },\r\n    {\r\n      accessor: 'phone',\r\n      Header: 'Phone',\r\n    },\r\n    {\r\n      accessor: 'email',\r\n      Header: 'Email',\r\n    },\r\n    {\r\n      accessor: 'whatsapp_no',\r\n      Header: 'Whatsapp No.',\r\n    },\r\n    {\r\n      accessor: 'department',\r\n      Header: 'Department',\r\n      isVisible: false,\r\n    },\r\n    {\r\n      accessor: 'createdAt',\r\n      Header: 'Created At',\r\n      Filter: DateRangeColumnFilter,\r\n      filter: 'dateBetween',\r\n    },\r\n  ];\r\n  const columns = useMemo(() => headCells, []);\r\n  const Customer = [];\r\n  const notCustomer = [];\r\n\r\n  DATA.forEach((element) => {\r\n    if (element.isCustomer) {\r\n      Customer.push(element);\r\n    } else {\r\n      notCustomer.push(element);\r\n    }\r\n  });\r\n\r\n  const data = useMemo(() => DATA, [DATA]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-10 mx-4\">\r\n        <div className=\"bg-white flex justify-between rounded-lg items-center p-4 mb-4\">\r\n          <h2 className=\"text-xl font-bold m-0\">Contacts</h2>\r\n          <button\r\n            onClick={() => {\r\n              dispatch(\r\n                createcontactCard({\r\n                  show: true,\r\n                  phone: null,\r\n                  fromLead: false,\r\n                }),\r\n              );\r\n            }}\r\n            className=\"bg-green-500 hover:bg-green-600 text-white p-4 py-2 rounded-md\"\r\n          >\r\n            Create Contact\r\n          </button>\r\n        </div>\r\n        <Table\r\n          columns={columns}\r\n          data={data}\r\n          customer={Customer}\r\n          not_customer={notCustomer}\r\n          deleteFunc={deleteContact}\r\n          update={setupdatecontact}\r\n          path={'/updatecontact'}\r\n          refresh={getContact}\r\n          tablepath={'/contactdetail'}\r\n          text={`Are you sure you want to delete contact? \\n All leads will also be deleted.`}\r\n          isContact={true}\r\n          isOrg={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport Table from '../../Components/reactTable';\r\nimport {\r\n  createorgCard,\r\n  deleteContact,\r\n  getOrganization,\r\n  setupdatecontact,\r\n  setUpdateOrg,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport DateRangeColumnFilter from '../../utils/dateFilter';\r\n\r\nconst Organization = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const DATA = useSelector((state) => state.contact.organizations);\r\n\r\n  for (let elm of DATA) {\r\n    elm.createdAt = new Date(elm.createdAt).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      day: 'numeric',\r\n      month: 'numeric',\r\n    });\r\n  }\r\n\r\n  const headCells = [\r\n    {\r\n      accessor: 'name',\r\n      Header: 'Organization Name',\r\n    },\r\n    {\r\n      accessor: 'type',\r\n      Header: 'Type',\r\n    },\r\n    {\r\n      accessor: 'address',\r\n      Header: 'Address',\r\n    },\r\n    {\r\n      accessor: 'createdAt',\r\n      Header: 'Created At',\r\n      Filter: DateRangeColumnFilter,\r\n      filter: 'dateBetween',\r\n    },\r\n  ];\r\n  const columns = useMemo(() => headCells, []);\r\n\r\n  const data = useMemo(() => DATA, [DATA]);\r\n  const Customer = [];\r\n  const notCustomer = [];\r\n\r\n  DATA?.forEach((element) => {\r\n    if (element.isCustomer) {\r\n      Customer.push(element);\r\n    } else {\r\n      notCustomer.push(element);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-10 mx-4\">\r\n        <div className=\"bg-white flex justify-between items-center p-4 mb-4 rounded-lg\">\r\n          <h2 className=\"text-xl font-bold m-0\">Organizations</h2>\r\n          <button\r\n            onClick={() => {\r\n              dispatch(createorgCard({ show: true }));\r\n            }}\r\n            className=\"bg-green-500 hover:bg-green-600 text-white p-4 py-2 rounded-md\"\r\n          >\r\n            Create Organization\r\n          </button>\r\n        </div>\r\n        <Table\r\n          columns={columns}\r\n          data={data}\r\n          customer={Customer}\r\n          not_customer={notCustomer}\r\n          deleteFunc={deleteContact}\r\n          update={setUpdateOrg}\r\n          path={'/updatecontact'}\r\n          refresh={getOrganization}\r\n          tablepath={'/organizationdetail'}\r\n          text={`Are you sure you want to delete organization? \\n All leads will also be deleted.`}\r\n          isContact={true}\r\n          isOrg={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Organization;\r\n","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport Cookies from 'js-cookie';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst CreateOrg = ({ setCreateContact, setCreateOrg }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.type) {\r\n      errors.type = '*Required';\r\n    }\r\n    if (!values.name) {\r\n      errors.name = '*Required';\r\n    }\r\n    if (!values.street) {\r\n      errors.street = '*Required';\r\n    }\r\n    if (!values.country) {\r\n      errors.country = '*Required';\r\n    }\r\n    if (!values.state) {\r\n      errors.state = '*Required';\r\n    }\r\n    if (!values.city) {\r\n      errors.city = '*Required';\r\n    }\r\n    if (!values.zipcode) {\r\n      errors.zipcode = '*Required';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, values, resetForm } = useFormik({\r\n    initialValues: {\r\n      type: '',\r\n      name: '',\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      country: '',\r\n      zipcode: '',\r\n    },\r\n    validate,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0 && values.name !== '') {\r\n      const token = Cookies.get('JWT');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      axiosInstance\r\n        .post(\r\n          `/create-organization/${user._id}`,\r\n          {\r\n            name: values.name,\r\n            type: values.type,\r\n            address: `${values.street}, ${values.city}, ${values.state}, ${values.country}, ${values.zipcode}`,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          },\r\n        )\r\n        .then((res) => {\r\n          resetForm();\r\n          dispatch(\r\n            setAlert({\r\n              message: 'Organization Created Successfully',\r\n              error: false,\r\n            }),\r\n          );\r\n          setCreateContact(true);\r\n          setCreateOrg(false);\r\n        })\r\n        .catch((err) => {\r\n          dispatch(\r\n            setAlert({ message: 'Error creating organization', error: true }),\r\n          );\r\n        });\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center flex-col\">\r\n      <div className=\"flex flex-wrap w-full\">\r\n        <div className=\"bg-white px-4 pt-4 pb-2 flex-1 flex flex-col\">\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Organization Name\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              {...getFieldProps('name')}\r\n            />\r\n            {errors.name ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.name}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-4 flex-1 flex flex-col\">\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Organization Type\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter department\"\r\n              {...getFieldProps('type')}\r\n            />\r\n            {errors.type ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.type}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white px-4 pb-2 w-full flex flex-col mt-2\">\r\n          <h3 className=\"text-lg font-semibold pl-2\">Address</h3>\r\n          <div className=\"flex flex-wrap w-full\">\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Street\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter street\"\r\n                {...getFieldProps('street')}\r\n              />\r\n              {errors.street ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.street}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Country\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter country\"\r\n                {...getFieldProps('country')}\r\n              />\r\n              {errors.country ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.country}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                State\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter state\"\r\n                {...getFieldProps('state')}\r\n              />\r\n              {errors.state ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.state}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-wrap w-full\">\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">City</lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter city\"\r\n                {...getFieldProps('city')}\r\n              />\r\n              {errors.city ? (\r\n                <div className=\"w-full text-sm text-red-400\">{errors.city}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                ZIP code\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter zip code\"\r\n                {...getFieldProps('zipcode')}\r\n              />\r\n              {errors.zipcode ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.zipcode}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={(e) => handleSubmit(e)}\r\n        className=\"bg-green-600 w-max hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 mb-0 text-white\"\r\n      >\r\n        Save Organization\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateOrg;\r\n","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport Select from 'react-select';\r\nimport {\r\n  createContact,\r\n  createcontactCard,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport { Button } from '@material-ui/core';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst CreateContactDetails = ({ type, setType }) => {\r\n  const contactData = useSelector((state) => state.contact.contact);\r\n  const [id, setId] = useState(null);\r\n  const [orgList, setOrgList] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  let options = [];\r\n\r\n  useEffect(() => {\r\n    axiosInstance.get('/organizations').then((res) => {\r\n      setOrgList(res.data);\r\n    });\r\n  }, []);\r\n\r\n  orgList.forEach((element) => {\r\n    options.push({ value: element?._id, label: element?.name });\r\n  });\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = '*Required';\r\n    }\r\n    if (type === '2') {\r\n      delete errors.organization;\r\n    } else if (!values.organization) {\r\n      errors.organization = '*Required';\r\n    }\r\n\r\n    if (!values.phone) {\r\n      errors.phone = '*Required';\r\n    } else if (values.phone.toString().length !== 10) {\r\n      errors.phone = 'Length should be 10';\r\n    } else if (values.phone.toString().length === 10) {\r\n      let flag = false;\r\n      contactData.forEach((element) => {\r\n        if (element.phone === values.phone) {\r\n          flag = true;\r\n          setId(element._id);\r\n        }\r\n      });\r\n      if (flag) {\r\n        errors.phone = 'Contact already exists';\r\n      }\r\n    }\r\n    if (!values.email) {\r\n      errors.email = '*Required';\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n    if (values.whatsapp_no.toString().length === 0) {\r\n      delete errors.whatsapp_no;\r\n    } else if (values.whatsapp_no.toString().length !== 10) {\r\n      errors.whatsapp_no = 'Length should be 10';\r\n    }\r\n    if (!values.street) {\r\n      errors.street = '*Required';\r\n    }\r\n    if (!values.country) {\r\n      errors.country = '*Required';\r\n    }\r\n    if (!values.state) {\r\n      errors.state = '*Required';\r\n    }\r\n    if (!values.city) {\r\n      errors.city = '*Required';\r\n    }\r\n    if (!values.zipcode) {\r\n      errors.zipcode = '*Required';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, resetForm, values, setFieldValue } = useFormik(\r\n    {\r\n      initialValues: {\r\n        organization: '',\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        department: '',\r\n        title: '',\r\n        whatsapp_no: '',\r\n        description: '',\r\n        street: '',\r\n        city: '',\r\n        state: '',\r\n        country: '',\r\n        zipcode: '',\r\n        website: '',\r\n      },\r\n      validate,\r\n    },\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0 && values.name !== '') {\r\n      if (type === '2') {\r\n        dispatch(\r\n          createContact(\r\n            {\r\n              name: values.name,\r\n              phone: values.phone,\r\n              email: values.email,\r\n              whatsapp_no: values.whatsapp_no,\r\n              description: values.description,\r\n              street: values.street,\r\n              city: values.city,\r\n              state: values.state,\r\n              country: values.country,\r\n              zipcode: values.zipcode,\r\n              website: values.website,\r\n            },\r\n            resetForm,\r\n            history,\r\n            setType,\r\n          ),\r\n        );\r\n      } else {\r\n        dispatch(createContact(values, resetForm, history, setType));\r\n      }\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <div className=\"flex flex-wrap w-full\">\r\n        <div className=\"bg-white px-4 pt-4 pb-2 flex-1 flex flex-col\">\r\n          {type !== '2' ? (\r\n            <div className=\"px-2 mb-3 flex flex-col w-full\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Organization\r\n              </lable>\r\n              <Select\r\n                theme={(theme) => ({\r\n                  ...theme,\r\n                  borderRadius: 5,\r\n                  colors: {\r\n                    ...theme.colors,\r\n                    primary25: 'lightgray',\r\n                    primary: 'lightgray',\r\n                  },\r\n                })}\r\n                options={options}\r\n                onChange={(selectedOption) => {\r\n                  setFieldValue('organization', selectedOption.value);\r\n                }}\r\n              />\r\n              {errors.organization ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.organization}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Name</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              {...getFieldProps('name')}\r\n            />\r\n            {errors.name ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.name}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Phone number\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter phone number\"\r\n              {...getFieldProps('phone')}\r\n            />\r\n            {errors.phone ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.phone}</div>\r\n            ) : null}\r\n          </div>\r\n          {errors.phone === 'Contact already exists' ? (\r\n            <div className=\"flex justify-end\">\r\n              <Button\r\n                onClick={() => {\r\n                  history.push(`/contactdetail/${id}`);\r\n                  dispatch(\r\n                    createcontactCard({\r\n                      show: false,\r\n                      phone: null,\r\n                      fromLead: false,\r\n                    }),\r\n                  );\r\n                  setType('');\r\n                }}\r\n                className=\"w-max\"\r\n                style={{\r\n                  backgroundColor: '#54a3ff',\r\n                  color: 'white',\r\n                  textTransform: 'capitalize',\r\n                  marginTop: '10px',\r\n                }}\r\n              >\r\n                Go to contact\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Email</lable>\r\n            <input\r\n              className={`p-2  border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter email\"\r\n              {...getFieldProps('email')}\r\n            />\r\n            {errors.email ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.email}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-4 flex-1 flex flex-col\">\r\n          {type !== '2' ? (\r\n            <>\r\n              <div className=\"px-2 mb-3 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Department\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter department\"\r\n                  {...getFieldProps('department')}\r\n                />\r\n              </div>\r\n              <div className=\"px-2 mb-3 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Title\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter title\"\r\n                  {...getFieldProps('title')}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Whatsapp number\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter whatsapp number\"\r\n              {...getFieldProps('whatsapp_no')}\r\n            />\r\n            {errors.whatsapp_no ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.whatsapp_no}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"p-2 w-full mt-1 flex flex-col\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Description\r\n            </lable>\r\n            <textarea\r\n              className={` p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              {...getFieldProps('description')}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white px-4 pb-2 w-full flex flex-col mt-2\">\r\n          <h3 className=\"text-lg font-semibold pl-2\">Address</h3>\r\n          <div className=\"flex flex-wrap w-full\">\r\n            <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Street\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter street\"\r\n                {...getFieldProps('street')}\r\n              />\r\n              {errors.street ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.street}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Country\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter country\"\r\n                {...getFieldProps('country')}\r\n              />\r\n              {errors.country ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.country}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                State\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter state\"\r\n                {...getFieldProps('state')}\r\n              />\r\n              {errors.state ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.state}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-wrap w-full\">\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">City</lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter city\"\r\n                {...getFieldProps('city')}\r\n              />\r\n              {errors.city ? (\r\n                <div className=\"w-full text-sm text-red-400\">{errors.city}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                ZIP code\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter zip code\"\r\n                {...getFieldProps('zipcode')}\r\n              />\r\n              {errors.zipcode ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.zipcode}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={(e) => handleSubmit(e)}\r\n        className=\"bg-green-600 hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 mb-0 text-white\"\r\n      >\r\n        Save Contact\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateContactDetails;\r\n","import { useFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createcontactCard } from '../../context/actions/contactAction/contactAction';\r\nimport CreateOrg from './CreateOrg';\r\nimport CreateContactDetails from './CreateContactDetails';\r\n\r\nconst CreateContactCard = ({ phone, show, fromLead }) => {\r\n  const dispatch = useDispatch();\r\n  const [createOrg, setCreateOrg] = useState(false);\r\n  const [createContact, setCreateContact] = useState(false);\r\n  const [type, setType] = useState('');\r\n  useEffect(() => {\r\n    if (type === '1') {\r\n      setCreateOrg(true);\r\n    } else {\r\n      setCreateOrg(false);\r\n    }\r\n    if (type === '2' || type === '0') {\r\n      setCreateContact(true);\r\n    } else {\r\n      setCreateContact(false);\r\n    }\r\n  }, [type]);\r\n  return (\r\n    <div\r\n      className={`${\r\n        show ? 'block' : 'hidden'\r\n      } fixed top-1/2 right-1/2 transform translate-x-1/2 -translate-y-1/2 flex justify-center items-center w-full h-full bg-black bg-opacity-20 mt-10 mx-4  z-50 shadow-2xl`}\r\n    >\r\n      <div className=\"w-1/2 bg-white flex flex-col pb-4 items-center rounded-lg\">\r\n        {' '}\r\n        <div className=\"w-full flex justify-end\">\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(\r\n                createcontactCard({\r\n                  show: false,\r\n                  phone: null,\r\n                  fromLead: false,\r\n                }),\r\n              );\r\n              setType('');\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"p-4 w-full flex justify-center flex-col items-center\">\r\n          <h2 className=\"text-2xl font-semibold m-0\">Create Contact</h2>\r\n          <div className=\"px-6 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Type</lable>\r\n            <select\r\n              className={`p-2 w-full border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              name=\"\"\r\n              id=\"\"\r\n              value={type}\r\n              onChange={(e) => setType(e.target.value)}\r\n            >\r\n              <option value=\"\" selected style={{ color: 'lightgray' }}>\r\n                Select type\r\n              </option>\r\n              <option value=\"0\">Existing Organization</option>\r\n              <option value=\"1\">New Organization</option>\r\n              <option value=\"2\">Individual</option>\r\n            </select>\r\n            {/* {errors.type ? (\r\n          <div className=\"w-full text-sm text-red-400\">{errors.type}</div>\r\n        ) : null} */}\r\n          </div>\r\n          {type === '' ? null : (\r\n            <>\r\n              {createOrg ? (\r\n                <CreateOrg\r\n                  setCreateOrg={setCreateOrg}\r\n                  setCreateContact={setCreateContact}\r\n                />\r\n              ) : null}\r\n              {createContact ? (\r\n                <CreateContactDetails type={type} setType={setType} />\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateContactCard;\r\n","import { IconButton, Button } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { createLead } from '../../context/actions/leadAction/leadActions';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Select from 'react-select';\r\nimport CreateContactCard from '../Contact/CreateContactCard';\r\n\r\nconst CreateLead = () => {\r\n  const dispatch = useDispatch();\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n  const contactData = useSelector((state) => state.contact.contact);\r\n  const history = useHistory();\r\n  const [addContact, setAddContact] = useState(false);\r\n  const [contact, setContact] = useState('');\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.name) {\r\n      errors.name = '*Required';\r\n    }\r\n    if (!values.title) {\r\n      errors.title = '*Required';\r\n    }\r\n    if (!values.phone) {\r\n      errors.phone = '*Required';\r\n    } else if (values.phone.toString().length !== 10) {\r\n      errors.phone = 'Length should be 10';\r\n    } else if (values.phone.toString().length === 10) {\r\n      let flag = false;\r\n      contactData.forEach((element) => {\r\n        if (element.phone === values.phone) {\r\n          flag = true;\r\n        }\r\n      });\r\n      if (!flag) {\r\n        errors.phone = 'Contact does not exists create new';\r\n      }\r\n    }\r\n\r\n    if (values.items.length !== 0) {\r\n      values.items.forEach((element, index) => {\r\n        if (!element.item) {\r\n          errors.items = 'Select all items';\r\n        }\r\n      });\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  let options = [];\r\n\r\n  inventory.forEach((element) => {\r\n    options.push({\r\n      value: element._id,\r\n      label: element.item_name + '(' + element.article + ')',\r\n    });\r\n  });\r\n\r\n  const { getFieldProps, errors, values, setValues, setFieldValue, resetForm } =\r\n    useFormik({\r\n      initialValues: {\r\n        title: '',\r\n        phone: '',\r\n        items: [],\r\n        description: '',\r\n      },\r\n      validate,\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createLead(values, resetForm, history));\r\n  };\r\n\r\n  return (\r\n    <form className=\"m-10 flex flex-col items-center\">\r\n      <CreateContactCard\r\n        setAddContact={setAddContact}\r\n        addContact={addContact}\r\n        contact={contact}\r\n      />\r\n      <div className=\"bg-white flex justify-between items-center p-4 mb-4 w-full\">\r\n        <h2 className=\"text-xl font-bold m-0\">Create Lead</h2>\r\n      </div>\r\n      <div className=\"flex flex-wrap w-full\">\r\n        <div className=\"bg-white px-4 pt-4 pb-2 flex-1 flex flex-col mr-1\">\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Phone number\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter phone number\"\r\n              {...getFieldProps('phone')}\r\n            />\r\n            {errors.phone ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.phone}</div>\r\n            ) : null}\r\n            {errors.phone === 'Contact does not exists create new' ? (\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setAddContact(true);\r\n                    setContact(values.phone);\r\n                  }}\r\n                  className=\"w-max\"\r\n                  style={{\r\n                    backgroundColor: '#54a3ff',\r\n                    color: 'white',\r\n                    textTransform: 'capitalize',\r\n                    marginTop: '10px',\r\n                  }}\r\n                >\r\n                  Add Contact\r\n                </Button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"px-2 mt-3 mb-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Title</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter title\"\r\n              {...getFieldProps('title')}\r\n            />\r\n            {errors.title ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.title}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-4 flex-1 flex flex-col\">\r\n          <div className=\"p-2 w-full mb-3 flex flex-col\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Description\r\n            </lable>\r\n            <textarea\r\n              className={` p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              {...getFieldProps('description')}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white px-4 pt-4 pb-2 w-full flex flex-col mt-4\">\r\n        <div className=\"flex items-center\">\r\n          <p className=\"text-lg font-semibold\">Add Items:</p>\r\n          <IconButton\r\n            onClick={() => {\r\n              setValues({\r\n                ...values,\r\n                items: [\r\n                  ...values.items,\r\n                  { _id: '', quantity: '', updatedSalePrice: '0' },\r\n                ],\r\n              });\r\n            }}\r\n          >\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n        </div>\r\n        {errors.items ? (\r\n          <div className=\"w-full text-sm text-red-400\">{errors.items}</div>\r\n        ) : null}\r\n\r\n        <div>\r\n          <div className=\" flex flex-col w-full mb-2\">\r\n            {values.items.map((item, index) => {\r\n              return (\r\n                <div className=\"flex w-1/2 p-2 items-center\">\r\n                  <div className=\"w-1/2\">\r\n                    <lable className=\"text-gray-2 text-md font-semibold \">\r\n                      Item\r\n                    </lable>\r\n                    <Select\r\n                      theme={(theme) => ({\r\n                        ...theme,\r\n                        borderRadius: 5,\r\n                        colors: {\r\n                          ...theme.colors,\r\n                          primary25: 'lightgray',\r\n                          primary: 'lightgray',\r\n                        },\r\n                      })}\r\n                      options={options}\r\n                      onChange={(selectedOption) => {\r\n                        setFieldValue(\r\n                          `items[${index}].item`,\r\n                          selectedOption.value,\r\n                        );\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"ml-2 w-1/2\">\r\n                    <lable className=\"text-gray-2 text-md font-semibold \">\r\n                      Quantity\r\n                    </lable>\r\n                    <input\r\n                      className={`p-2 w-full border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter quantity\"\r\n                      {...getFieldProps(`items[${index}].quantity`)}\r\n                    />\r\n                  </div>\r\n                  <IconButton\r\n                    style={{\r\n                      marginTop: '14px',\r\n                      marginLeft: '5px',\r\n                      padding: '5px',\r\n                    }}\r\n                    onClick={() => {\r\n                      setValues({\r\n                        ...values,\r\n                        items: values.items.filter((f, i) => i !== index),\r\n                      });\r\n                    }}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n        className=\"bg-green-600 mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 text-white\"\r\n      >\r\n        Save Lead\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateLead;\r\n","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { createLead } from '../../context/actions/leadAction/leadActions';\r\n\r\nconst CreateLead = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.user);\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n  const update = useSelector((state) => state.lead.updatelead);\r\n  const history = useHistory();\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.owner) {\r\n      errors.owner = '*Required';\r\n    }\r\n    if (!values.name) {\r\n      errors.name = '*Required';\r\n    }\r\n    if (!values.title) {\r\n      errors.title = '*Required';\r\n    }\r\n    if (!values.phone) {\r\n      errors.phone = '*Required';\r\n    } else if (values.phone.toString().length !== 10) {\r\n      errors.phone = 'Length should be 10';\r\n    }\r\n\r\n    if (!values.industry) {\r\n      errors.industry = '*Required';\r\n    }\r\n    if (!values.item) {\r\n      errors.item = '*Required';\r\n    }\r\n    if (!values.status) {\r\n      errors.status = '*Required';\r\n    }\r\n    if (!values.company) {\r\n      errors.company = '*Required';\r\n    }\r\n    if (!values.email) {\r\n      errors.email = '*Required';\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n    if (!values.rating) {\r\n      errors.rating = '*Required';\r\n    }\r\n    if (!values.whatsapp_number) {\r\n      errors.whatsapp_number = '*Required';\r\n    } else if (values.whatsapp_number.toString().length !== 10) {\r\n      errors.whatsapp_number = 'Length should be 10';\r\n    }\r\n\r\n    if (!values.street) {\r\n      errors.street = '*Required';\r\n    }\r\n    if (!values.country) {\r\n      errors.country = '*Required';\r\n    }\r\n    if (!values.state) {\r\n      errors.state = '*Required';\r\n    }\r\n    if (!values.city) {\r\n      errors.city = '*Required';\r\n    }\r\n    if (!values.zipcode) {\r\n      errors.zipcode = '*Required';\r\n    }\r\n    if (!values.description) {\r\n      errors.description = '*Required';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, handleSubmit, errors, values } = useFormik({\r\n    initialValues: update,\r\n    validate,\r\n    onSubmit: async (values, { resetForm }) => {},\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"m-10 flex flex-col items-center\">\r\n      <div className=\"bg-white flex justify-between items-center p-4 mb-4 w-full\">\r\n        <h2 className=\"text-xl font-bold m-0\">Create Lead</h2>\r\n      </div>\r\n      <div className=\"flex flex-wrap w-full\">\r\n        <div className=\"bg-white px-4 pt-4 pb-2 flex-1 flex flex-col\">\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Lead Owner\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter lead owner\"\r\n              {...getFieldProps('owner')}\r\n            />\r\n            {errors.owner ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.owner}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Name</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              {...getFieldProps('name')}\r\n            />\r\n            {errors.name ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.name}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Title</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter title\"\r\n              {...getFieldProps('title')}\r\n            />\r\n            {errors.title ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.title}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Phone number\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter phone number\"\r\n              {...getFieldProps('phone')}\r\n            />\r\n            {errors.phone ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.phone}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Industry\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter industry\"\r\n              {...getFieldProps('industry')}\r\n            />\r\n            {errors.industry ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.industry}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Item</lable>\r\n            <select\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              name=\"\"\r\n              id=\"\"\r\n              {...getFieldProps('item')}\r\n            >\r\n              <option value=\"\" selected hidden style={{ color: 'lightgray' }}>\r\n                Select Item\r\n              </option>\r\n              <option value=\"615c5b3b5fa55e21fc0d7a6b\">\r\n                Attempted to Contact\r\n              </option>\r\n              {inventory.map((i, index) => {\r\n                return (\r\n                  <option key={index} value={i._id}>\r\n                    {i.item_name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            {errors.item ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.item}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Lead Status\r\n            </lable>\r\n            <select\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              name=\"\"\r\n              id=\"\"\r\n              {...getFieldProps('status')}\r\n            >\r\n              <option value=\"\" selected hidden style={{ color: 'lightgray' }}>\r\n                Select lead status\r\n              </option>\r\n              <option value=\"Attempted to Contact\">Attempted to Contact</option>\r\n              <option value=\"Contact in Future\">Contact in Future</option>\r\n              <option value=\"Contacted\">Contacted</option>\r\n              <option value=\"Junk Lead\">Junk Lead</option>\r\n              <option value=\"Lost Lead\">Lost Lead</option>\r\n              <option value=\"Not Contacted\">Not Contacted</option>\r\n              <option value=\"Pre-Qualified\">Pre-Qualified</option>\r\n              <option value=\"Not Qualified\">Not Qualified</option>\r\n            </select>\r\n            {errors.status ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.status}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 mb-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Annual Income\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter annual income\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-4 flex-1 flex flex-col\">\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Company\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter company name\"\r\n              {...getFieldProps('company')}\r\n            />\r\n            {errors.company ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.company}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Email</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              {...getFieldProps('email')}\r\n            />\r\n            {errors.email ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.email}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Website\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter website\"\r\n            />\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Total Employees\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter number of employees\"\r\n            />\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Rating</lable>\r\n            <select\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              name=\"\"\r\n              id=\"\"\r\n              {...getFieldProps('rating')}\r\n            >\r\n              <option value=\"\" selected style={{ color: 'lightgray' }}>\r\n                Select rating\r\n              </option>\r\n              <option value=\"Acquired\">Acquired</option>\r\n              <option value=\"Active\">Active</option>\r\n              <option value=\"Market Failed\">Market Failed</option>\r\n              <option value=\"Project Cancelled\">Project Cancelled</option>\r\n              <option value=\"Shut Down\">Shut Down</option>\r\n            </select>\r\n            {errors.rating ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.rating}</div>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"px-2 mt-3 mb-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Whatsapp Number\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter whatsapp number\"\r\n              {...getFieldProps('whatsapp_number')}\r\n            />\r\n            {errors.whatsapp_number ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.whatsapp_number}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white px-4 pt-4 pb-2 w-full flex flex-col mt-4\">\r\n        <h3 className=\"text-lg font-semibold pl-2\">Address</h3>\r\n        <div className=\"flex flex-wrap w-full\">\r\n          <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Street</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter street\"\r\n              {...getFieldProps('street')}\r\n            />\r\n            {errors.street ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.street}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Country\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter country\"\r\n              {...getFieldProps('country')}\r\n            />\r\n            {errors.country ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.country}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">State</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter state\"\r\n              {...getFieldProps('state')}\r\n            />\r\n            {errors.state ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.state}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-wrap w-full\">\r\n          <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">City</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter city\"\r\n              {...getFieldProps('city')}\r\n            />\r\n            {errors.city ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.city}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              ZIP code\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter zip code\"\r\n              {...getFieldProps('zipcode')}\r\n            />\r\n            {errors.zipcode ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.zipcode}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"p-2 w-full mt-3 mb-3 flex flex-col\">\r\n          <lable className=\"text-gray-2 text-md font-semibold \">\r\n            Description\r\n          </lable>\r\n          <textarea\r\n            className={` p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n            type=\"text\"\r\n            placeholder=\"Enter description\"\r\n            {...getFieldProps('description')}\r\n          />\r\n          {errors.description ? (\r\n            <div className=\"w-full text-sm text-red-400\">\r\n              {errors.description}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-green-600 mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 text-white\"\r\n      >\r\n        Save Lead\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateLead;\r\n","import { useFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport {\r\n  refreshContact,\r\n  updateContact,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport Select from 'react-select';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst CreateContact = () => {\r\n  const dispatch = useDispatch();\r\n  const update = useSelector((state) => state.contact.update);\r\n  const history = useHistory();\r\n  const contactData = useSelector((state) => state.contact.contact);\r\n  const data = useSelector((state) => state.contact.update);\r\n  const [orgList, setOrgList] = useState([]);\r\n  let options = [];\r\n\r\n  useEffect(() => {\r\n    axiosInstance.get('/organizations').then((res) => {\r\n      setOrgList(res.data);\r\n    });\r\n  }, []);\r\n\r\n  orgList.forEach((element) => {\r\n    options.push({ value: element?._id, label: element?.name });\r\n  });\r\n\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(refreshContact(id));\r\n  }, [dispatch, id]);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (values.phone.toString().length === 0) {\r\n      errors.phone = '';\r\n    } else if (values.phone.toString().length !== 10) {\r\n      errors.phone = 'Length should be 10';\r\n    } else if (values.phone.toString().length === 10) {\r\n      let flag = false;\r\n      contactData.forEach((element) => {\r\n        if (element.phone === values.phone && values.phone !== update.phone) {\r\n          flag = true;\r\n        }\r\n      });\r\n      if (flag) {\r\n        errors.phone = 'Contact already exists';\r\n      }\r\n    }\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n    if (!values?.whatsapp_no) {\r\n      errors.whatsapp_no = '';\r\n    } else if (values?.whatsapp_no?.toString().length !== 10) {\r\n      errors.whatsapp_no = 'Length should be 10';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, resetForm, values, setValues, setFieldValue } =\r\n    useFormik({\r\n      initialValues: {},\r\n      validate,\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0) {\r\n      dispatch(updateContact(update._id, values, resetForm, history));\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.organization) {\r\n      setValues({\r\n        organization: data?.organization?._id,\r\n        department: data?.department,\r\n        title: data?.title,\r\n        name: data?.name,\r\n        phone: data?.phone,\r\n        email: data?.email,\r\n        whatsapp_no: data?.whatsapp_no,\r\n        description: data?.description,\r\n        website: data?.website,\r\n        street: data?.street,\r\n        city: data?.city,\r\n        state: data?.state,\r\n        country: data?.country,\r\n        zipcode: data?.zipcode,\r\n      });\r\n    } else {\r\n      setValues({\r\n        name: data?.name,\r\n        phone: data?.phone,\r\n        email: data?.email,\r\n        whatsapp_no: data?.whatsapp_no,\r\n        description: data?.description,\r\n        website: data?.website,\r\n        street: data?.street,\r\n        city: data?.city,\r\n        state: data?.state,\r\n        country: data?.country,\r\n        zipcode: data?.zipcode,\r\n      });\r\n    }\r\n  }, [data, setValues]);\r\n\r\n  return (\r\n    <div className=\"mt-10 mx-4 flex flex-col items-center\">\r\n      <div className=\"bg-white flex justify-between items-center p-4 mb-4 w-full rounded-lg\">\r\n        <h2 className=\"text-xl font-bold m-0\">Update Contact</h2>\r\n      </div>\r\n      <div className=\"flex flex-wrap w-full\">\r\n        <div className=\"bg-white px-4 pt-4 pb-2 flex-1 flex flex-col rounded-l-lg\">\r\n          {data.organization ? (\r\n            <div className=\"px-2 mb-3 flex flex-col w-full\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Organization\r\n              </lable>\r\n              <Select\r\n                theme={(theme) => ({\r\n                  ...theme,\r\n                  borderRadius: 5,\r\n                  colors: {\r\n                    ...theme.colors,\r\n                    primary25: 'lightgray',\r\n                    primary: 'lightgray',\r\n                  },\r\n                })}\r\n                defaultValue={{\r\n                  label: data?.organization?.name,\r\n                  value: data?.organization?._id,\r\n                }}\r\n                options={options}\r\n                onChange={(selectedOption) => {\r\n                  setFieldValue('organization', selectedOption.value);\r\n                }}\r\n              />\r\n              {errors.organization ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.organization}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Name</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              {...getFieldProps('name')}\r\n            />\r\n            {errors.name ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.name}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Phone number\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter phone number\"\r\n              {...getFieldProps('phone')}\r\n            />\r\n            {errors.phone ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.phone}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Email</lable>\r\n            <input\r\n              className={`p-2  border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter email\"\r\n              {...getFieldProps('email')}\r\n            />\r\n            {errors.email ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.email}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-4 flex-1 flex flex-col rounded-r-lg\">\r\n          {data.organization ? (\r\n            <>\r\n              <div className=\"px-2 mb-3 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Department\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter department\"\r\n                  {...getFieldProps('department')}\r\n                />\r\n              </div>\r\n              <div className=\"px-2 mb-3 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Title\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter title\"\r\n                  {...getFieldProps('title')}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Whatsapp number\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter whatsapp number\"\r\n              {...getFieldProps('whatsapp_no')}\r\n            />\r\n            {errors.whatsapp_no ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.whatsapp_no}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Website\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter whatsapp number\"\r\n              {...getFieldProps('website')}\r\n            />\r\n          </div>\r\n          <div className=\"p-2 w-full mt-3 mb-3 flex flex-col\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Description\r\n            </lable>\r\n            <textarea\r\n              className={` p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              {...getFieldProps('description')}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white px-4 pt-4 pb-2 w-full flex flex-col mt-4 rounded-lg\">\r\n          <h3 className=\"text-lg font-semibold pl-2\">Address</h3>\r\n          <div className=\"flex flex-wrap w-full\">\r\n            <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Street\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter street\"\r\n                {...getFieldProps('street')}\r\n              />\r\n              {errors.street ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.street}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Country\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter country\"\r\n                {...getFieldProps('country')}\r\n              />\r\n              {errors.country ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.country}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col mt-3 flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                State\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter state\"\r\n                {...getFieldProps('state')}\r\n              />\r\n              {errors.state ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.state}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-wrap w-full\">\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">City</lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter city\"\r\n                {...getFieldProps('city')}\r\n              />\r\n              {errors.city ? (\r\n                <div className=\"w-full text-sm text-red-400\">{errors.city}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 p-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                ZIP code\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter zip code\"\r\n                {...getFieldProps('zipcode')}\r\n              />\r\n              {errors.zipcode ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.zipcode}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={(e) => handleSubmit(e)}\r\n        className=\"bg-green-600 mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 text-white\"\r\n      >\r\n        Update Contact\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateContact;\r\n","import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport Cookies from 'js-cookie';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { refreshContact } from '../../context/actions/contactAction/contactAction';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport { setConfirmation } from '../../context/actions/confirmationAction';\r\nimport { selectedlead } from '../../context/actions/leadAction/leadActions';\r\nimport { getInventory } from '../../context/actions/inventoryAction/inventoryAction';\r\n\r\nconst LeadList = ({ setShow, lead, id }) => {\r\n  const dispatch = useDispatch();\r\n  const { getFieldProps, values, resetForm } = useFormik({\r\n    initialValues: {\r\n      stage: '',\r\n    },\r\n  });\r\n  const token = Cookies.get('JWT');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const data = useSelector((state) => state.contact.update);\r\n\r\n  const dispatchOrder = () => {\r\n    axiosInstance\r\n      .patch(\r\n        `/dispatch-order/${lead._id}/${user._id}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        },\r\n      )\r\n      .then((res) => {\r\n        axiosInstance\r\n          .patch(\r\n            `/update-stage/${lead._id}/${user._id}`,\r\n            { stage: 'Dispatched' },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            },\r\n          )\r\n          .then((res) => {\r\n            resetForm();\r\n            dispatch(refreshContact(data._id));\r\n            dispatch(setAlert({ message: 'Order dispatched', error: false }));\r\n            dispatch(getInventory());\r\n          })\r\n          .catch((err) => {\r\n            dispatch(\r\n              setAlert({ message: 'Error dispatching order', error: true }),\r\n            );\r\n          });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-gray-100 w-full px-4 py-2 rounded-md flex justify-between items-center mb-2 cursor-pointer\">\r\n        <div\r\n          onClick={() => {\r\n            setShow(true);\r\n            dispatch(selectedlead(lead));\r\n          }}\r\n          className=\"flex items-center justify-between w-4/6 \"\r\n        >\r\n          <div\r\n            className={`${\r\n              lead?.status === 'Active'\r\n                ? 'text-green-500'\r\n                : lead?.status === 'Cancelled'\r\n                ? 'text-red-500'\r\n                : 'text-blue-500'\r\n            } flex flex-col`}\r\n          >\r\n            <p className=\"text-base font-semibold\">\r\n              Title:\r\n              <span className=\"pl-2 font-medium\">{lead?.title}</span>\r\n            </p>\r\n            <p className=\"text-base font-semibold\">\r\n              Date:\r\n              <span className=\"pl-2 font-medium\">\r\n                {new Date(lead?.createdAt).toLocaleString('en-US', {\r\n                  day: '2-digit',\r\n                  month: 'short',\r\n                  year: 'numeric',\r\n                })}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <p className=\"text-lg font-semibold mr-4\">\r\n            Stage:\r\n            <span className=\"pl-2 font-medium\">{lead?.stage}</span>\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <select\r\n            className={`p-3 py-1 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n            name=\"\"\r\n            id=\"\"\r\n            {...getFieldProps('stage')}\r\n          >\r\n            <option value=\"\" selected style={{ color: 'lightgray' }}>\r\n              Select stage\r\n            </option>\r\n            <option value=\"Preliminary\">Preliminary</option>\r\n            <option value=\"Qualified\">Qualified</option>\r\n            <option value=\"Converted\">Converted</option>\r\n            <option value=\"Quotation\">Quotation</option>\r\n            <option value=\"Negotiation\">Negotiation</option>\r\n            <option value=\"Order Form\">Order Form</option>\r\n            <option value=\"Dispatched\">Dispatched</option>\r\n            <option value=\"Invoice\">Invoice</option>\r\n          </select>\r\n          {!values.stage ? null : (\r\n            <IconButton\r\n              onClick={() => {\r\n                const token = Cookies.get('JWT');\r\n                const user = JSON.parse(localStorage.getItem('user'));\r\n                if (values.stage === 'Dispatched') {\r\n                  dispatch(\r\n                    setConfirmation({\r\n                      show: true,\r\n                      func: dispatchOrder,\r\n                      text: 'Are you sure you want to dispatch order?',\r\n                    }),\r\n                  );\r\n                } else if (\r\n                  values.stage === 'Invoice' &&\r\n                  lead?.stage !== 'Dispatched'\r\n                ) {\r\n                  dispatch(\r\n                    setAlert({\r\n                      message: 'Order not dispatched yet!!!',\r\n                      error: true,\r\n                    }),\r\n                  );\r\n                } else {\r\n                  axiosInstance\r\n                    .patch(\r\n                      `/update-stage/${lead._id}/${user._id}`,\r\n                      { stage: values.stage },\r\n                      {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      },\r\n                    )\r\n                    .then((res) => {\r\n                      resetForm();\r\n\r\n                      if (res.data.stage === 'Invoice') {\r\n                        axiosInstance\r\n                          .patch(\r\n                            `/update-status/${lead._id}/${user._id}`,\r\n                            { status: 'Completed' },\r\n                            {\r\n                              headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                              },\r\n                            },\r\n                          )\r\n                          .then((res) => {\r\n                            dispatch(refreshContact(data._id));\r\n                          });\r\n                      }\r\n                    });\r\n                }\r\n              }}\r\n            >\r\n              <CheckIcon />\r\n            </IconButton>\r\n          )}\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(\r\n                setConfirmation({\r\n                  text: 'Are you sure, you want to delete lead?',\r\n                  func: () => {\r\n                    axiosInstance\r\n                      .delete(`delete-lead/${lead._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Lead deleted successfully',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch(() => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting lead',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  },\r\n                  show: true,\r\n                }),\r\n              );\r\n            }}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeadList;\r\n","const DetailCard = ({ title, detail }) => {\r\n  return (\r\n    <div className=\"flex w-full\">\r\n      <p className=\"flex text-lg font-semibold mr-2\">{title}:</p>\r\n      <p className=\"text-lg\">{detail}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailCard;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport logo from '../assets/logo.png';\r\n\r\nconst Ouotation = ({ componentRef, lead }) => {\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n  const DATA = useSelector((state) => state.contact.update);\r\n  var inventorySku = [];\r\n\r\n  lead?.items?.forEach((element) => {\r\n    var inventoryItem = inventory.filter(\r\n      (f) => f?._id === element?.item?._id,\r\n    )[0];\r\n    inventorySku.push({\r\n      _id: inventoryItem?._id,\r\n      sku: inventoryItem?.sku,\r\n      item_name: inventoryItem?.item_name,\r\n      article: inventoryItem?.article,\r\n      sale_price: inventoryItem?.sale_price,\r\n    });\r\n  });\r\n\r\n  let totalAmt = 0;\r\n\r\n  const item = inventory.filter((f) => f?._id === lead?.item?._id);\r\n  return (\r\n    <div className=\"hidden\">\r\n      <div ref={componentRef}>\r\n        <div className=\"my-2 px-2 flex justify-between relative \">\r\n          <img className=\"w-26 absolute\" src={logo} alt=\"\" />\r\n          <div className=\"bg-gradient-to-l from-logo-pink ... w-full text-right text-white p-2\">\r\n            <p className=\"text-xl font-semibold\">Nuovo Furnitures</p>\r\n            <p>\r\n              b-17/251, Near State Bank of India, Bus Stand Rd, Bharat Nagar,\r\n            </p>\r\n            <p>Ludhiana, India</p>\r\n            <p>Ph: 9915699052</p>\r\n          </div>\r\n        </div>\r\n        <h1 className=\"text-center mt-6 text-5xl font-semibold\">Quote</h1>\r\n        <p className=\"px-2 pt-4 text-2xl font-semibold text-logo-pink\">\r\n          Quotation for\r\n        </p>\r\n        <div className=\"flex justify-between w-3/4 my-2 px-2\">\r\n          <div className=\"text-lg\">\r\n            <p className=\"font-semibold\">{DATA?.company}</p>\r\n            <p>{DATA?.city}</p>\r\n            <p>{DATA?.state}</p>\r\n          </div>\r\n          <div className=\"text-lg\">\r\n            <p>\r\n              <span className=\"font-semibold mr-2\">Date:</span>\r\n              {new Date().toLocaleString('en-US', {\r\n                month: 'short',\r\n                year: 'numeric',\r\n                day: '2-digit',\r\n              })}\r\n            </p>\r\n            <p>\r\n              <span className=\"font-semibold mr-2\">Quote No.:</span>\r\n              {lead?._id}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"px-2 mb-4 mt-4\">\r\n          <p className=\"text-xl font-semibold\">Representative Contacted:</p>\r\n          <p className=\"text-lg\">{DATA?.name}</p>\r\n          <p className=\"text-lg\">Mob.:- {DATA?.phone}</p>\r\n        </div>\r\n        <div className=\"\">\r\n          <table>\r\n            <tbody>\r\n              <tr className=\"bg-logo-pink text-white\">\r\n                <th>S.No.</th>\r\n                <th>Item Name</th>\r\n                <th>Item description</th>\r\n                <th>Remarks</th>\r\n                <th>HSN No.</th>\r\n                <th>MRP</th>\r\n                <th>Qty</th>\r\n                <th>Quotation Price</th>\r\n                <th>GST @18%</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n              {lead?.items.map((item, index) => {\r\n                let inven = inventory.filter(\r\n                  (f) => f._id === item?.item?._id,\r\n                )[0];\r\n                let amt =\r\n                  item?.quantity *\r\n                  item?.item?.sale_price *\r\n                  (1 + inven?.gst / 100);\r\n                totalAmt += amt;\r\n                return (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{inven?.item_name}</td>\r\n                    <td>{inven?.description}</td>\r\n                    <td width=\"10\">\r\n                      Size:{' '}\r\n                      {inven?.length + '*' + inven?.width + '*' + inven?.height}\r\n                    </td>\r\n                    <td>{inven?.hsn_code}</td>\r\n                    <td>\r\n                      ₹\r\n                      {item?.updatedSalePrice > 0\r\n                        ? item?.updatedSalePrice\r\n                        : item?.item?.sale_price}\r\n                    </td>\r\n                    <td>{item?.quantity}</td>\r\n                    <td>\r\n                      ₹\r\n                      {item?.quantity *\r\n                        (item?.updatedSalePrice > 0\r\n                          ? item?.updatedSalePrice\r\n                          : item?.item?.sale_price)}\r\n                    </td>\r\n                    <td>{inven?.gst}</td>\r\n                    <td>₹{amt}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n              <tr>\r\n                <th colSpan=\"9\">Total</th>\r\n                <td>₹{totalAmt}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"p-2\">\r\n          <p>Notes:-</p>\r\n          <p>\r\n            # Transportation charges to client premises shall be borne by client\r\n            on actual basis.\r\n          </p>\r\n          <p># Quotation is valid for 30 days from the date of quotation</p>\r\n          <p>\r\n            # 50% advance Rest 50% at the time of inspection / before dispatch\r\n            of material.\r\n          </p>\r\n          <p>\r\n            # Picture given above are for representation. However, actual\r\n            product may have slight variation. Colors can be chosen according to\r\n            requriement from the shade card.\r\n          </p>\r\n          <p>\r\n            # Our all products carry one year standard warranty against any\r\n            manufacturing defect.\r\n          </p>\r\n          <p>For Nuovo Furnitures</p>\r\n          <p>Nuovo Furnitures</p>\r\n          <p>9915699052</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ouotation;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport logo from '../assets/logo.png';\r\n\r\nconst OrderForm = ({ componentRef, lead }) => {\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n  const DATA = useSelector((state) => state.contact.update);\r\n  var inventorySku = [];\r\n\r\n  lead?.items?.forEach((element) => {\r\n    var inventoryItem = inventory.filter(\r\n      (f) => f?._id === element?.item?._id,\r\n    )[0];\r\n    inventorySku.push({\r\n      _id: inventoryItem?._id,\r\n      sku: inventoryItem?.sku,\r\n      item_name: inventoryItem?.item_name,\r\n      article: inventoryItem?.article,\r\n      sale_price: inventoryItem?.sale_price,\r\n    });\r\n  });\r\n\r\n  let totalAmt = 0;\r\n\r\n  const item = inventory.filter((f) => f?._id === lead?.item?._id);\r\n  return (\r\n    <div className=\"hidden\">\r\n      <div ref={componentRef}>\r\n        <div className=\"my-2 px-2 flex justify-between relative \">\r\n          <img className=\"w-26 absolute\" src={logo} alt=\"\" />\r\n          <div className=\"bg-gradient-to-l from-logo-pink ... w-full text-right text-white p-2\">\r\n            <p className=\"text-lg font-semibold\">Nuovo Furnitures</p>\r\n            <p>\r\n              b-17/251, Near State Bank of India, <br /> Bus Stand Rd, Bharat\r\n              Nagar,\r\n            </p>\r\n            <p>Ludhiana, India</p>\r\n            <p>Ph: 9915699052</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-md text-right p-2\">\r\n          <p>\r\n            <span className=\"font-semibold mr-2\">Date:</span>\r\n            {new Date().toLocaleString('en-US', {\r\n              month: 'short',\r\n              year: 'numeric',\r\n              day: '2-digit',\r\n            })}\r\n          </p>\r\n          <p>\r\n            <span className=\"font-semibold mr-2\">Deal No.:</span>\r\n            {lead?._id}\r\n          </p>\r\n          <h1 className=\"text-center mt-6 text-3xl font-semibold\">\r\n            Order Form\r\n          </h1>\r\n        </div>\r\n        <div className=\"px-2 mb-4 mt-4\">\r\n          <p className=\"font-semibold text-lg\">{DATA?.company}</p>\r\n          <p className=\"text-lg\">{DATA?.name}</p>\r\n          <p className=\"text-lg\">\r\n            {DATA?.street +\r\n              ', ' +\r\n              DATA?.city +\r\n              ', ' +\r\n              DATA?.state +\r\n              ', ' +\r\n              DATA?.country +\r\n              ', ' +\r\n              DATA?.zipcode}\r\n          </p>\r\n          <p className=\"text-lg\">Mob.:- {DATA?.phone}</p>\r\n        </div>\r\n        <div className=\"\">\r\n          <table>\r\n            <tbody>\r\n              <tr className=\"bg-logo-pink text-white\">\r\n                <th>Article No.</th>\r\n                <th>Colour</th>\r\n                <th>Size</th>\r\n                <th>Qty</th>\r\n                <th>Unit Price</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n              {lead?.items?.map((item, index) => {\r\n                let inven = inventory.filter(\r\n                  (f) => f._id === item?.item?._id,\r\n                )[0];\r\n                let amt =\r\n                  item?.quantity *\r\n                  item?.item?.sale_price *\r\n                  (1 + inven?.gst / 100);\r\n                totalAmt += amt;\r\n                return (\r\n                  <tr>\r\n                    <td>{inven?.article}</td>\r\n                    <td>{inven?.colour}</td>\r\n                    <td>\r\n                      {inven?.length + '*' + inven?.width + '*' + inven?.height}\r\n                    </td>\r\n                    <td>{item?.quantity}</td>\r\n                    <td>\r\n                      ₹\r\n                      {item?.updatedSalePrice > 0\r\n                        ? item?.updatedSalePrice\r\n                        : item?.item?.sale_price}\r\n                    </td>\r\n                    <td>₹{amt}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n              <tr>\r\n                <td colSpan=\"4\">Payment Details: Cash/Cheque</td>\r\n                <th>Total</th>\r\n                <td>₹{totalAmt}</td>\r\n              </tr>\r\n              <tr>\r\n                <th colSpan=\"5\">\r\n                  <p className=\"text-right\">Advance</p>\r\n                </th>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <th colSpan=\"5\">\r\n                  <p className=\"text-right\">Balance</p>\r\n                </th>\r\n                <td></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <span>Terms & Condition: </span>Order once confirmed can not be\r\n            cancelled. <br />\r\n            Transportation changes to client premises shall be borne by client\r\n            on actual basis\r\n          </p>\r\n          <p>\r\n            <span>Payment Terms: </span>50% advance balance 50% at the time of\r\n            delivery\r\n          </p>\r\n        </div>\r\n        <div className=\"p-2 mt-16 flex justify-between\">\r\n          <div className=\"p-2 text-lg\">\r\n            <p>Signature of Representative</p>\r\n          </div>\r\n          <div className=\"p-2 text-lg\">\r\n            <p>Signature of Purchaser</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n","import { useFormik } from 'formik';\r\nimport Cookies from 'js-cookie';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport { refreshLead } from '../../context/actions/leadAction/leadActions';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport Select from 'react-select';\r\n\r\nconst UpdatePrice = ({ inventorySku, leadId }) => {\r\n  const token = Cookies.get('JWT');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const dispatch = useDispatch();\r\n  const lead = useSelector((state) => state.lead.selectedlead);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values._id) {\r\n      errors._id = '*Required';\r\n    }\r\n    if (!values.sale_price) {\r\n      errors.sale_price = '*Required';\r\n    }\r\n    if (!values.quantity) {\r\n      errors.quantity = '*Required';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, setFieldValue, resetForm, values, setValues } =\r\n    useFormik({\r\n      initialValues: {\r\n        _id: '',\r\n        sale_price: '',\r\n        quantity: '',\r\n      },\r\n      validate,\r\n    });\r\n\r\n  let options = [];\r\n\r\n  inventorySku.forEach((element) => {\r\n    options.push({\r\n      value: element._id,\r\n      label: element.item_name + '(' + element.article + ')',\r\n    });\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0) {\r\n      axiosInstance\r\n        .patch(`/update-item/${leadId}/${user._id}`, values, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          resetForm();\r\n          dispatch(refreshLead(leadId));\r\n          dispatch(\r\n            setAlert({ message: 'Item updated successfully', error: false }),\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          dispatch(setAlert({ message: 'Error updating item', error: true }));\r\n        });\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-3 flex flex-col w-full\">\r\n        <lable className=\"text-gray-2 text-md font-semibold \">Item</lable>\r\n        <Select\r\n          className=\"w-1/2\"\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: 5,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: 'lightgray',\r\n              primary: 'lightgray',\r\n            },\r\n          })}\r\n          options={options}\r\n          onChange={(selectedOption) => {\r\n            let salesPrice = lead?.items?.filter(\r\n              (i) => i?.item?._id === selectedOption?.value,\r\n            )[0]?.item?.sale_price;\r\n            let updatedPrice = lead?.items?.filter(\r\n              (i) => i?.item?._id === selectedOption?.value,\r\n            )[0]?.updatedSalePrice;\r\n            let quantity = lead?.items?.filter(\r\n              (i) => i?.item?._id === selectedOption?.value,\r\n            )[0]?.quantity;\r\n            setValues({\r\n              ...values,\r\n              sale_price: updatedPrice === 0 ? salesPrice : updatedPrice,\r\n              quantity: quantity,\r\n            });\r\n            setFieldValue(`_id`, selectedOption.value);\r\n          }}\r\n        />\r\n\r\n        {errors._id ? (\r\n          <div className=\"w-full text-sm text-red-400\">{errors._id}</div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div>\r\n        {values?._id ? (\r\n          <div className=\"mt-2\">\r\n            <p>\r\n              Item:{' '}\r\n              <span>\r\n                {inventorySku.filter((f) => f._id === values._id)[0].item_name}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              Article No.:{' '}\r\n              <span>\r\n                {inventorySku.filter((f) => f._id === values._id)[0].article}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              Original Sales Price:{' '}\r\n              <span>\r\n                {inventorySku.filter((f) => f._id === values._id)[0].sale_price}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\" mt-2 flex flex-col\">\r\n          <lable className=\"text-gray-2 text-md font-semibold \">Price</lable>\r\n          <input\r\n            type=\"number\"\r\n            className={`p-2 border w-1/2 border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n            placeholder=\"Enter price\"\r\n            {...getFieldProps('sale_price')}\r\n          />\r\n          {errors.sale_price ? (\r\n            <div className=\"w-full text-sm text-red-400\">\r\n              {errors.sale_price}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\" mt-2 flex flex-col\">\r\n          <lable className=\"text-gray-2 text-md font-semibold \">Quantity</lable>\r\n          <input\r\n            type=\"number\"\r\n            className={`p-2 border w-1/2 border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n            placeholder=\"Enter quantity\"\r\n            {...getFieldProps('quantity')}\r\n          />\r\n          {errors.quantity ? (\r\n            <div className=\"w-full text-sm text-red-400\">{errors.quantity}</div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n        className=\"bg-green-600 w-max mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md text-white\"\r\n      >\r\n        Update Item\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePrice;\r\n","import React, { useState } from 'react';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport Cookies from 'js-cookie';\r\nimport { useFormik } from 'formik';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport UpdatePrice from './UpdatePrice';\r\nimport Select from 'react-select';\r\nimport { refreshLead } from '../../context/actions/leadAction/leadActions';\r\n\r\nconst LeadItems = ({ leadId }) => {\r\n  const [itemButton, setitemButton] = useState({\r\n    item: true,\r\n    add: false,\r\n    price: false,\r\n  });\r\n  const token = Cookies.get('JWT');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n  const lead = useSelector((state) => state.lead.selectedlead);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  var inventorySku = [];\r\n\r\n  lead?.items?.forEach((element) => {\r\n    let inventoryItem = inventory.filter(\r\n      (f) => f?._id === element?.item?._id,\r\n    )[0];\r\n    inventorySku.push({\r\n      _id: inventoryItem?._id,\r\n      sku: inventoryItem?.sku,\r\n      item_name: inventoryItem?.item_name,\r\n      article: inventoryItem?.article,\r\n      sale_price: inventoryItem?.sale_price,\r\n      gst: inventoryItem?.gst,\r\n    });\r\n  });\r\n\r\n  let options = [];\r\n\r\n  inventory?.forEach((element) => {\r\n    options.push({\r\n      value: element._id,\r\n      label: element.item_name + '(' + element.article + ')',\r\n    });\r\n  });\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    let inven = inventory?.filter((f) => f._id === values?._id)[0]?.sku;\r\n    if (!values._id) {\r\n      errors._id = '*Required';\r\n    }\r\n    if (!values.quantity) {\r\n      errors.quantity = '*Required';\r\n    } else if (values.quantity > inven) {\r\n      errors.quantity = `Only ${inven} units available`;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, setFieldValue, resetForm, values } = useFormik(\r\n    {\r\n      initialValues: { _id: '', quantity: '' },\r\n      validate,\r\n    },\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0) {\r\n      axiosInstance\r\n        .post(`/add-item/${lead._id}/${user._id}`, values, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          resetForm();\r\n          dispatch(refreshLead(lead._id));\r\n          dispatch(\r\n            setAlert({ message: 'Item Added successfully', error: false }),\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          dispatch(setAlert({ message: 'Error adding item', error: true }));\r\n        });\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"m-10 ml-20\">\r\n        <div>\r\n          <Button\r\n            onClick={() => {\r\n              setitemButton({\r\n                item: true,\r\n                add: false,\r\n                price: false,\r\n              });\r\n            }}\r\n            style={{\r\n              backgroundColor: `${itemButton.item ? 'gray' : '#54a3ff'}`,\r\n              color: 'white',\r\n              textTransform: 'capitalize',\r\n              marginBottom: '10px',\r\n              marginRight: '10px',\r\n            }}\r\n          >\r\n            All Items\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setitemButton({\r\n                item: false,\r\n                add: true,\r\n                price: false,\r\n              });\r\n            }}\r\n            style={{\r\n              backgroundColor: `${itemButton.add ? 'gray' : '#54a3ff'}`,\r\n              color: 'white',\r\n              textTransform: 'capitalize',\r\n              marginBottom: '10px',\r\n            }}\r\n          >\r\n            Add Item\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setitemButton({\r\n                item: false,\r\n                add: false,\r\n                price: true,\r\n              });\r\n            }}\r\n            style={{\r\n              backgroundColor: `${itemButton.price ? 'gray' : '#54a3ff'}`,\r\n              color: 'white',\r\n              textTransform: 'capitalize',\r\n              marginBottom: '10px',\r\n              marginLeft: '10px',\r\n            }}\r\n          >\r\n            Updated Item\r\n          </Button>\r\n        </div>\r\n        {itemButton?.item ? (\r\n          <div className=\"mt-4\">\r\n            {lead?.items?.length === 0 ? (\r\n              <p\r\n                onClick={() => {\r\n                  setitemButton({\r\n                    item: false,\r\n                    add: true,\r\n                    price: false,\r\n                  });\r\n                }}\r\n                className=\"cursor-pointer hover:text-blue-400\"\r\n              >\r\n                No items available add items\r\n              </p>\r\n            ) : (\r\n              <>\r\n                {lead?.items?.map((item, index) => {\r\n                  return (\r\n                    <div className=\"flex w-1/2 items-center\">\r\n                      <div className=\"bg-gray-100 p-1 w-full rounded-lg pl-4 mb-2\">\r\n                        <p>\r\n                          Item: <span>{inventorySku[index]?.item_name}</span>\r\n                        </p>\r\n                        <p>\r\n                          Article No:{' '}\r\n                          <span>{inventorySku[index]?.article}</span>\r\n                        </p>\r\n                        <p>\r\n                          Quantity <span>{item?.quantity}</span>\r\n                        </p>\r\n                        <p>\r\n                          Sale Price:\r\n                          <span>\r\n                            {item?.updatedSalePrice === 0\r\n                              ? inventorySku[index]?.sale_price\r\n                              : item?.updatedSalePrice}\r\n                          </span>\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            axiosInstance\r\n                              .delete(\r\n                                `/remove-item/${item?.item?._id}/${lead._id}/${user._id}`,\r\n                                {\r\n                                  headers: {\r\n                                    Authorization: `Bearer ${token}`,\r\n                                  },\r\n                                },\r\n                              )\r\n                              .then((res) => {\r\n                                dispatch(refreshLead(leadId));\r\n                              })\r\n                              .catch((err) => {});\r\n                          }}\r\n                        >\r\n                          <CloseIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n        {itemButton?.add ? (\r\n          <div>\r\n            <div className=\"bg-white pb-2 w-full flex flex-col mt-4\">\r\n              <div className=\"px-2 my-3 flex flex-col w-full\">\r\n                <div className=\"w-full flex\">\r\n                  <div className=\"w-1/4\">\r\n                    <lable className=\"text-gray-2 text-md font-semibold \">\r\n                      Item\r\n                    </lable>\r\n                    <Select\r\n                      theme={(theme) => ({\r\n                        ...theme,\r\n                        borderRadius: 5,\r\n                        colors: {\r\n                          ...theme.colors,\r\n                          primary25: 'lightgray',\r\n                          primary: 'lightgray',\r\n                        },\r\n                      })}\r\n                      options={options}\r\n                      onChange={(selectedOption) => {\r\n                        setFieldValue(`_id`, selectedOption.value);\r\n                      }}\r\n                    />\r\n                    {errors._id ? (\r\n                      <div className=\"ml-1 w-full text-sm text-red-400\">\r\n                        {errors._id}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"w-1/4\">\r\n                    <lable className=\"text-gray-2 text-md font-semibold \">\r\n                      Quantity\r\n                    </lable>\r\n                    <input\r\n                      type=\"number\"\r\n                      className={`p-2 border w-full ml-2 border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                      {...getFieldProps('quantity')}\r\n                    />\r\n                    {errors.quantity ? (\r\n                      <div className=\"ml-1 w-full text-sm text-red-400\">\r\n                        {errors.quantity}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                onClick={(e) => {\r\n                  handleSubmit(e);\r\n                }}\r\n                className=\"bg-green-600 w-max mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md mx-2 text-white\"\r\n              >\r\n                Add items\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {itemButton?.price ? (\r\n          <UpdatePrice\r\n            lead={lead}\r\n            inventorySku={inventorySku}\r\n            leadId={lead._id}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeadItems;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport logo from '../assets/logo.png';\r\n\r\nconst Invoice = ({ componentRef, lead }) => {\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n  const DATA = useSelector((state) => state.contact.update);\r\n  var inventorySku = [];\r\n\r\n  lead?.items?.forEach((element) => {\r\n    var inventoryItem = inventory.filter(\r\n      (f) => f?._id === element?.item?._id,\r\n    )[0];\r\n    inventorySku.push({\r\n      _id: inventoryItem?._id,\r\n      sku: inventoryItem?.sku,\r\n      item_name: inventoryItem?.item_name,\r\n      article: inventoryItem?.article,\r\n      sale_price: inventoryItem?.sale_price,\r\n    });\r\n  });\r\n\r\n  let totalAmt = 0;\r\n\r\n  return (\r\n    <div className=\"hidden\">\r\n      <div ref={componentRef}>\r\n        <div className=\"my-2 px-2 flex justify-between relative \">\r\n          <img className=\"w-26 absolute\" src={logo} alt=\"\" />\r\n          <div className=\"bg-gradient-to-l from-logo-pink ... w-full text-right text-white p-2\">\r\n            <p className=\"text-xl font-semibold\">Nuovo Furnitures</p>\r\n            <p>\r\n              b-17/251, Near State Bank of India, <br /> Bus Stand Rd, Bharat\r\n              Nagar,\r\n            </p>\r\n            <p>Ludhiana, India</p>\r\n            <p>Ph: 9915699052</p>\r\n          </div>\r\n        </div>\r\n        <h1 className=\"text-center mt-6 text-4xl font-semibold\">Invoice</h1>\r\n        <p className=\"px-2 pt-4 text-xl font-semibold text-logo-pink\">\r\n          Ordered by\r\n        </p>\r\n        <div className=\"flex justify-between w-3/4 my-2 px-2\">\r\n          <div className=\"text-md\">\r\n            <p className=\"font-semibold\">{DATA?.company}</p>\r\n            <p>{DATA?.city}</p>\r\n            <p>{DATA?.state}</p>\r\n          </div>\r\n          <div className=\"text-md\">\r\n            <p>\r\n              <span className=\"font-semibold mr-2\">Date:</span>\r\n              {new Date().toLocaleString('en-US', {\r\n                month: 'short',\r\n                year: 'numeric',\r\n                day: '2-digit',\r\n              })}\r\n            </p>\r\n            <p>\r\n              <span className=\"font-semibold mr-2\">Invoice No.:</span>\r\n              {lead?._id}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"px-2 mb-4 mt-4\">\r\n          <p className=\"text-lg font-semibold\">Representative Contacted:</p>\r\n          <p className=\"text-md\">{DATA?.name}</p>\r\n          <p className=\"text-md\">Mob.:- {DATA?.phone}</p>\r\n        </div>\r\n        <div className=\"\">\r\n          <table>\r\n            <tbody>\r\n              <tr className=\"bg-logo-pink text-white text-md\">\r\n                <th>S.No.</th>\r\n                <th>Item Name</th>\r\n                <th>Remarks</th>\r\n                <th>HSN No.</th>\r\n                <th>Qty</th>\r\n                <th>Price</th>\r\n                <th>GST @18%</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n              {lead?.items.map((item, index) => {\r\n                let inven = inventory.filter(\r\n                  (f) => f._id === item?.item?._id,\r\n                )[0];\r\n                let amt =\r\n                  item?.quantity *\r\n                  item?.item?.sale_price *\r\n                  (1 + inven?.gst / 100);\r\n                totalAmt += amt;\r\n                return (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{inven?.item_name}</td>\r\n                    <td width=\"10\">\r\n                      Size:{' '}\r\n                      {inven?.length + '*' + inven?.width + '*' + inven?.height}\r\n                    </td>\r\n                    <td>{inven?.hsn_code}</td>\r\n                    <td>{item?.quantity}</td>\r\n                    <td>\r\n                      ₹\r\n                      {item?.quantity *\r\n                        (item?.updatedSalePrice > 0\r\n                          ? item?.updatedSalePrice\r\n                          : item?.item?.sale_price)}\r\n                    </td>\r\n                    <td>{inven?.gst}</td>\r\n                    <td>₹{amt}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n              <tr>\r\n                <th colSpan=\"7\">Total</th>\r\n                <td>₹{totalAmt}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"p-2\">\r\n          <p>For Nuovo Furnitures</p>\r\n          <p>Nuovo Furnitures</p>\r\n          <p>9915699052</p>\r\n        </div>\r\n        <div className=\"p-2 mt-16 flex justify-between\">\r\n          <div className=\"p-2 text-lg\">\r\n            <p>Signature of Representative</p>\r\n          </div>\r\n          <div className=\"p-2 text-lg\">\r\n            <p>Signature of Purchaser</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport DetailCard from '../../Components/DetailCard';\r\nimport Quotation from '../../printable/Ouotation';\r\nimport { useSelector } from 'react-redux';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ReactToPrint from 'react-to-print';\r\nimport OrderForm from '../../printable/OrderForm';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport Cookies from 'js-cookie';\r\nimport { useDispatch } from 'react-redux';\r\nimport LeadItems from './LeadItems';\r\nimport { refreshContact } from '../../context/actions/contactAction/contactAction';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport { setConfirmation } from '../../context/actions/confirmationAction';\r\nimport { getInventory } from '../../context/actions/inventoryAction/inventoryAction';\r\nimport Invoice from '../../printable/Invoice';\r\nimport { useEffect } from 'react';\r\nimport { refreshLead } from '../../context/actions/leadAction/leadActions';\r\n\r\nconst LeadDetails = ({ setShow, show, data }) => {\r\n  const [button, setbutton] = useState({\r\n    details: true,\r\n    items: false,\r\n    quotation: false,\r\n    order: false,\r\n    invoice: false,\r\n  });\r\n\r\n  const token = Cookies.get('JWT');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const dispatch = useDispatch();\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n  const DATA = useSelector((state) => state.contact.update);\r\n  const lead = useSelector((state) => state.lead.selectedlead);\r\n  const [status, setStatus] = useState({ status: '', error: '' });\r\n  const [stage, setStage] = useState({\r\n    stage: '',\r\n    error: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshLead(lead?._id));\r\n  }, [dispatch, lead._id]);\r\n\r\n  var inventorySku = [];\r\n\r\n  lead?.items?.forEach((element) => {\r\n    var inventoryItem = inventory.filter(\r\n      (f) => f?._id === element?.item?._id,\r\n    )[0];\r\n    inventorySku.push({\r\n      _id: inventoryItem?._id,\r\n      sku: inventoryItem?.sku,\r\n      item_name: inventoryItem?.item_name,\r\n      article: inventoryItem?.article,\r\n      sale_price: inventoryItem?.sale_price,\r\n      gst: inventoryItem?.gst,\r\n    });\r\n  });\r\n\r\n  let totalAmt = 0;\r\n  const quotationRef = useRef();\r\n  const orderFormRef = useRef();\r\n  const invoiceRef = useRef();\r\n\r\n  const pageStyle = `@media all {\r\n    .page-break {\r\n      display: none;\r\n    }\r\n  }\r\n  \r\n  @media print {\r\n    html, body {\r\n      height: initial !important;\r\n      overflow: initial !important;\r\n      -webkit-print-color-adjust: exact;\r\n    }\r\n  }\r\n  \r\n  @media print {\r\n    .page-break {\r\n      margin-top: 1rem;\r\n      display: block;\r\n      page-break-before: auto;\r\n    }\r\n  }\r\n  \r\n  @page {\r\n    size: auto;\r\n    margin: 10mm;\r\n  }`;\r\n\r\n  const dispatchOrder = () => {\r\n    axiosInstance\r\n      .patch(\r\n        `/dispatch-order/${lead._id}/${user._id}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        },\r\n      )\r\n      .then((res) => {\r\n        axiosInstance\r\n          .patch(\r\n            `/update-stage/${lead._id}/${user._id}`,\r\n            { stage: 'Dispatched' },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            },\r\n          )\r\n          .then((res) => {\r\n            dispatch(refreshLead(lead._id));\r\n            dispatch(setAlert({ message: 'Order dispatched', error: false }));\r\n            dispatch(getInventory());\r\n          })\r\n          .catch((err) => {\r\n            dispatch(\r\n              setAlert({ message: 'Error dispatching order', error: true }),\r\n            );\r\n          });\r\n        setStage({ stage: '', error: '' });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        show ? 'block' : 'hidden'\r\n      } fixed top-1/2 right-1/2 transform translate-x-1/2 -translate-y-1/2 z-40 shadow-2xl flex justify-center items-center w-full h-full bg-black bg-opacity-20 drop-shadow-2xl p-4`}\r\n    >\r\n      <div className=\"bg-white w-3/4 h-3/4 rounded-t-lg\">\r\n        <div className=\"h-full\">\r\n          <div className=\"w-full flex justify-end \">\r\n            <IconButton\r\n              onClick={() => {\r\n                setShow(false);\r\n                setbutton({\r\n                  details: true,\r\n                  items: false,\r\n                  quotation: false,\r\n                  order: false,\r\n                  invoice: false,\r\n                });\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"flex justify-center flex-col\">\r\n            <div className=\"w-full flex justify-center\">\r\n              <div className=\"p-2 border-b-2 w-max border-blue-300\">\r\n                <Button\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontSize: '20px',\r\n                    color: `${button.details ? '#54a3ff' : 'black'}`,\r\n                    fontWeight: `${button.details ? '600' : '500'}`,\r\n                  }}\r\n                  onClick={() => {\r\n                    setbutton({\r\n                      details: true,\r\n                      items: false,\r\n                      quotation: false,\r\n                      order: false,\r\n                      invoice: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  Details\r\n                </Button>\r\n                <Button\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontSize: '20px',\r\n                    color: `${button.items ? '#54a3ff' : 'black'}`,\r\n                    fontWeight: `${button.items ? '600' : '500'}`,\r\n                  }}\r\n                  onClick={() => {\r\n                    setbutton({\r\n                      details: false,\r\n                      items: true,\r\n                      quotation: false,\r\n                      order: false,\r\n                      invoice: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  Items\r\n                </Button>\r\n                <Button\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontSize: '20px',\r\n                    color: `${button.quotation ? '#54a3ff' : 'black'}`,\r\n                    fontWeight: `${button.quotation ? '600' : '500'}`,\r\n                  }}\r\n                  onClick={() => {\r\n                    setbutton({\r\n                      details: false,\r\n                      items: false,\r\n                      quotation: true,\r\n                      order: false,\r\n                      invoice: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  Quotation\r\n                </Button>\r\n                <Button\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontSize: '20px',\r\n                    color: `${button.order ? '#54a3ff' : 'black'}`,\r\n                    fontWeight: `${button.order ? '600' : '500'}`,\r\n                  }}\r\n                  onClick={() => {\r\n                    setbutton({\r\n                      details: false,\r\n                      quotation: false,\r\n                      items: false,\r\n                      order: true,\r\n                      invoice: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  Order Form\r\n                </Button>\r\n                <Button\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontSize: '20px',\r\n                    color: `${button.invoice ? '#54a3ff' : 'black'}`,\r\n                    fontWeight: `${button.invoice ? '600' : '500'}`,\r\n                  }}\r\n                  onClick={() => {\r\n                    setbutton({\r\n                      details: false,\r\n                      quotation: false,\r\n                      items: false,\r\n                      order: false,\r\n                      invoice: true,\r\n                    });\r\n                  }}\r\n                >\r\n                  Invoice\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full h-5/6 overflow-auto\">\r\n            {button.details ? (\r\n              <div className=\"ml-20 m-4\">\r\n                <div>\r\n                  <DetailCard title=\"Title\" detail={lead?.title} />\r\n                  <DetailCard\r\n                    title=\"No. of items\"\r\n                    detail={lead?.items?.length}\r\n                  />\r\n                  <DetailCard title=\"Description\" detail={data?.description} />\r\n                  <DetailCard\r\n                    title=\"Created At\"\r\n                    detail={new Date(lead?.createdAt).toLocaleString('en-US', {\r\n                      day: '2-digit',\r\n                      month: 'short',\r\n                      year: 'numeric',\r\n                    })}\r\n                  />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                  <div className=\"flex place-items-end\">\r\n                    <div className=\"flex flex-col w-1/2\">\r\n                      <lable className=\"text-gray-2 text-md font-semibold \">\r\n                        Update stage\r\n                      </lable>\r\n                      <div className=\"flex items-center w-full\">\r\n                        <select\r\n                          className={`p-2 w-3/4 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          value={stage.stage}\r\n                          onChange={(e) =>\r\n                            setStage({ stage: e.target.value, error: '' })\r\n                          }\r\n                        >\r\n                          <option\r\n                            value=\"\"\r\n                            selected\r\n                            style={{ color: 'lightgray' }}\r\n                          >\r\n                            Select stage\r\n                          </option>\r\n                          <option value=\"Preliminary\">Preliminary</option>\r\n                          <option value=\"Qualified\">Qualified</option>\r\n                          <option value=\"Converted\">Converted</option>\r\n                          <option value=\"Quotation\">Quotation</option>\r\n                          <option value=\"Negotiation\">Negotiation</option>\r\n                          <option value=\"Order Form\">Order Form</option>\r\n                          <option value=\"Dispatched\">Dispatched</option>\r\n                          <option value=\"Invoice\">Invoice</option>\r\n                        </select>\r\n                        <Button\r\n                          onClick={() => {\r\n                            if (stage.stage === '') {\r\n                              setStage({ stage: '', error: '*Required' });\r\n                            } else {\r\n                              if (stage.stage === 'Dispatched') {\r\n                                dispatch(\r\n                                  setConfirmation({\r\n                                    show: true,\r\n                                    func: dispatchOrder,\r\n                                    text: 'Are you sure you want to dispatch order?',\r\n                                  }),\r\n                                );\r\n                              } else if (\r\n                                stage.stage === 'Invoice' &&\r\n                                lead?.stage !== 'Dispatched'\r\n                              ) {\r\n                                dispatch(\r\n                                  setAlert({\r\n                                    message: 'Order not dispatched yet!!!',\r\n                                    error: true,\r\n                                  }),\r\n                                );\r\n                              } else {\r\n                                axiosInstance\r\n                                  .patch(\r\n                                    `/update-stage/${lead._id}/${user._id}`,\r\n                                    { stage: stage.stage },\r\n                                    {\r\n                                      headers: {\r\n                                        Authorization: `Bearer ${token}`,\r\n                                      },\r\n                                    },\r\n                                  )\r\n                                  .then((res) => {\r\n                                    dispatch(refreshLead(lead._id));\r\n                                    setStage({ stage: '', error: '' });\r\n                                  });\r\n                              }\r\n                            }\r\n                          }}\r\n                          style={{\r\n                            backgroundColor: '#54a3ff',\r\n                            color: 'white',\r\n                            textTransform: 'capitalize',\r\n                            marginBottom: '2px',\r\n                            marginLeft: '8px',\r\n                          }}\r\n                        >\r\n                          Update Stage\r\n                        </Button>\r\n                      </div>\r\n                      {stage.error ? (\r\n                        <div className=\"w-full text-sm text-red-400\">\r\n                          {stage.error}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex place-items-end\">\r\n                    <div className=\"flex mt-3 flex-col w-1/2\">\r\n                      <lable className=\"text-gray-2 text-md font-semibold \">\r\n                        Update status\r\n                      </lable>\r\n                      <div className=\"flex items-center w-full\">\r\n                        <select\r\n                          className={`p-2 w-3/4 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          value={status.status}\r\n                          onChange={(e) =>\r\n                            setStatus({ status: e.target.value, error: '' })\r\n                          }\r\n                        >\r\n                          <option\r\n                            value=\"\"\r\n                            selected\r\n                            style={{ color: 'lightgray' }}\r\n                          >\r\n                            Select status\r\n                          </option>\r\n                          <option value=\"Active\">Active</option>\r\n                          <option value=\"Completed\">Completed</option>\r\n                          <option value=\"Cancelled\">Cancelled</option>\r\n                        </select>\r\n                        <Button\r\n                          onClick={() => {\r\n                            if (status.status === '') {\r\n                              setStatus({ status: '', error: '*Required' });\r\n                            } else {\r\n                              axiosInstance\r\n                                .patch(\r\n                                  `/update-status/${lead._id}/${user._id}`,\r\n                                  { status: status.status },\r\n                                  {\r\n                                    headers: {\r\n                                      Authorization: `Bearer ${token}`,\r\n                                    },\r\n                                  },\r\n                                )\r\n                                .then((res) => {\r\n                                  dispatch(refreshLead(lead._id));\r\n                                  setStatus({ status: '', error: '' });\r\n                                });\r\n                            }\r\n                          }}\r\n                          style={{\r\n                            backgroundColor: '#54a3ff',\r\n                            color: 'white',\r\n                            textTransform: 'capitalize',\r\n                            marginBottom: '2px',\r\n                            marginLeft: '8px',\r\n                          }}\r\n                        >\r\n                          Update Status\r\n                        </Button>\r\n                      </div>\r\n                      {status.error ? (\r\n                        <div className=\"w-full text-sm text-red-400\">\r\n                          {status.error}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {button.items ? <LeadItems data={lead} leadId={lead._id} /> : null}\r\n            {button.quotation ? (\r\n              <div className=\"m-4\">\r\n                {lead?.stage === 'Preliminary' ||\r\n                lead?.stage === 'Qualified' ||\r\n                lead?.stage === 'Converted' ? (\r\n                  <div className=\"w-full justify-center flex\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        axiosInstance\r\n                          .patch(\r\n                            `/update-stage/${lead._id}/${user._id}`,\r\n                            { stage: 'Quotation' },\r\n                            {\r\n                              headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                              },\r\n                            },\r\n                          )\r\n                          .then((res) => {\r\n                            dispatch(refreshLead(lead._id));\r\n                          });\r\n                      }}\r\n                      style={{\r\n                        backgroundColor: '#54a3ff',\r\n                        color: 'white',\r\n                        textTransform: 'capitalize',\r\n                        marginBottom: '10px',\r\n                      }}\r\n                    >\r\n                      Create Quotation\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <ReactToPrint\r\n                      pageStyle={pageStyle}\r\n                      trigger={() => (\r\n                        <Button\r\n                          style={{\r\n                            backgroundColor: '#54a3ff',\r\n                            color: 'white',\r\n                            textTransform: 'capitalize',\r\n                            marginBottom: '10px',\r\n                          }}\r\n                        >\r\n                          Print PDF\r\n                        </Button>\r\n                      )}\r\n                      content={() => quotationRef.current}\r\n                    />\r\n\r\n                    <Quotation componentRef={quotationRef} lead={lead} />\r\n                    <div>\r\n                      <table>\r\n                        <tr>\r\n                          <th colSpan=\"5\">User Information</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <td colSpan=\"3\">\r\n                            Name: <span>{DATA?.name}</span>\r\n                          </td>\r\n                          <td colSpan=\"3\">\r\n                            Phone No: <span>{DATA?.phone}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td colSpan=\"5\">\r\n                            Address:{' '}\r\n                            <span>\r\n                              {DATA?.street +\r\n                                ', ' +\r\n                                DATA?.city +\r\n                                ', ' +\r\n                                DATA?.state +\r\n                                ', ' +\r\n                                DATA?.country +\r\n                                ', ' +\r\n                                DATA?.zipcode}\r\n                            </span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td colSpan=\"5\">\r\n                            Email: <span>{DATA?.email}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <th colSpan=\"5\">Order Information</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th>Item</th>\r\n                          <th>Quantity</th>\r\n                          <th>Price</th>\r\n                          <th>GST</th>\r\n                          <th>Amount</th>\r\n                        </tr>\r\n                        {lead?.items?.map((item) => {\r\n                          let gst = inventory.filter(\r\n                            (f) => f._id === item?.item?._id,\r\n                          )[0]?.gst;\r\n                          let amt =\r\n                            item?.quantity *\r\n                            item?.item?.sale_price *\r\n                            (1 + gst / 100);\r\n                          totalAmt += amt;\r\n                          return (\r\n                            <tr>\r\n                              <td>{item?.item?.item_name}</td>\r\n                              <td>{item?.quantity}</td>\r\n                              <td>\r\n                                ₹\r\n                                {item?.updatedSalePrice > 0\r\n                                  ? item?.updatedSalePrice\r\n                                  : item?.item?.sale_price}\r\n                              </td>\r\n                              <td>{gst}%</td>\r\n                              <td>₹{amt}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                        <tr>\r\n                          <th colSpan=\"4\">Total</th>\r\n                          <td>₹{totalAmt}</td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : null}\r\n            {button.order ? (\r\n              <div className=\"m-4\">\r\n                {!(\r\n                  lead?.stage === 'Preliminary' ||\r\n                  lead?.stage === 'Qualified' ||\r\n                  lead?.stage === 'Converted' ||\r\n                  lead?.stage === 'Quotation' ||\r\n                  lead?.stage === 'Negotiation'\r\n                ) ? (\r\n                  <>\r\n                    <ReactToPrint\r\n                      pageStyle={pageStyle}\r\n                      trigger={() => (\r\n                        <Button\r\n                          style={{\r\n                            backgroundColor: '#54a3ff',\r\n                            color: 'white',\r\n                            textTransform: 'capitalize',\r\n                            marginBottom: '10px',\r\n                          }}\r\n                        >\r\n                          Print PDF\r\n                        </Button>\r\n                      )}\r\n                      content={() => orderFormRef.current}\r\n                    />\r\n                    <OrderForm componentRef={orderFormRef} lead={lead} />\r\n                    <table>\r\n                      <tbody>\r\n                        <tr>\r\n                          <th>Article No.</th>\r\n                          <th>Colour</th>\r\n                          <th>Size</th>\r\n                          <th>Qty</th>\r\n                          <th>Unit Price</th>\r\n                          <th>Amount</th>\r\n                        </tr>\r\n                        {lead?.items?.map((item, index) => {\r\n                          let inven = inventory.filter(\r\n                            (f) => f._id === item?.item?._id,\r\n                          )[0];\r\n                          let amt =\r\n                            item?.quantity *\r\n                            item?.item?.sale_price *\r\n                            (1 + inven?.gst / 100);\r\n                          totalAmt += amt;\r\n                          return (\r\n                            <tr>\r\n                              <td>{inven?.article}</td>\r\n                              <td>{inven?.colour}</td>\r\n                              <td>\r\n                                {inven?.length +\r\n                                  '*' +\r\n                                  inven?.width +\r\n                                  '*' +\r\n                                  inven?.height}\r\n                              </td>\r\n                              <td>{item?.quantity}</td>\r\n                              <td>\r\n                                ₹\r\n                                {item?.updatedSalePrice > 0\r\n                                  ? item?.updatedSalePrice\r\n                                  : item?.item?.sale_price}\r\n                              </td>\r\n                              <td>₹{amt}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                        <tr>\r\n                          <th colSpan=\"5\">\r\n                            <p className=\"text-right\">Total</p>\r\n                          </th>\r\n                          <td>₹{totalAmt}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"w-full flex justify-center\">\r\n                      <Button\r\n                        onClick={() => {\r\n                          axiosInstance\r\n                            .patch(\r\n                              `/update-stage/${lead._id}/${user._id}`,\r\n                              { stage: 'Order Form' },\r\n                              {\r\n                                headers: {\r\n                                  Authorization: `Bearer ${token}`,\r\n                                },\r\n                              },\r\n                            )\r\n                            .then((res) => {\r\n                              dispatch(refreshLead(lead._id));\r\n                            });\r\n                        }}\r\n                        style={{\r\n                          backgroundColor: '#54a3ff',\r\n                          color: 'white',\r\n                          textTransform: 'capitalize',\r\n                          marginBottom: '10px',\r\n                        }}\r\n                      >\r\n                        Generate order form\r\n                      </Button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ) : null}\r\n            {button.invoice ? (\r\n              <div className=\"m-4\">\r\n                {lead?.stage !== 'Invoice' ? (\r\n                  <div className=\"w-full justify-center flex\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        if (lead?.stage === 'Dispatched') {\r\n                          axiosInstance\r\n                            .patch(\r\n                              `/update-stage/${lead?._id}/${user._id}`,\r\n                              { stage: 'Invoice' },\r\n                              {\r\n                                headers: {\r\n                                  Authorization: `Bearer ${token}`,\r\n                                },\r\n                              },\r\n                            )\r\n                            .then((res) => {\r\n                              dispatch(refreshLead(lead._id));\r\n                            });\r\n                          axiosInstance\r\n                            .patch(\r\n                              `/update-status/${lead._id}/${user._id}`,\r\n                              { status: 'Completed' },\r\n                              {\r\n                                headers: {\r\n                                  Authorization: `Bearer ${token}`,\r\n                                },\r\n                              },\r\n                            )\r\n                            .then((res) => {\r\n                              dispatch(refreshLead(lead._id));\r\n                            });\r\n                        } else {\r\n                          dispatch(\r\n                            setConfirmation({\r\n                              text: 'Order not dispatched yet. Dispatch and generate invoice',\r\n                              show: true,\r\n                              func: () => {\r\n                                axiosInstance\r\n                                  .patch(\r\n                                    `/dispatch-order/${lead._id}/${user._id}`,\r\n                                    {},\r\n                                    {\r\n                                      headers: {\r\n                                        Authorization: `Bearer ${token}`,\r\n                                      },\r\n                                    },\r\n                                  )\r\n                                  .then((res) => {\r\n                                    dispatch(refreshLead(lead._id));\r\n                                    axiosInstance\r\n                                      .patch(\r\n                                        `/update-stage/${lead._id}/${user._id}`,\r\n                                        { stage: 'Invoice' },\r\n                                        {\r\n                                          headers: {\r\n                                            Authorization: `Bearer ${token}`,\r\n                                          },\r\n                                        },\r\n                                      )\r\n                                      .then((res) => {\r\n                                        dispatch(refreshLead(lead._id));\r\n                                      });\r\n                                    axiosInstance\r\n                                      .patch(\r\n                                        `/update-status/${lead._id}/${user._id}`,\r\n                                        { status: 'Completed' },\r\n                                        {\r\n                                          headers: {\r\n                                            Authorization: `Bearer ${token}`,\r\n                                          },\r\n                                        },\r\n                                      )\r\n                                      .then((res) => {\r\n                                        dispatch(refreshLead(lead._id));\r\n                                      });\r\n                                    dispatch(\r\n                                      setAlert({\r\n                                        message: 'Order dispatched',\r\n                                        error: false,\r\n                                      }),\r\n                                    );\r\n                                    dispatch(getInventory());\r\n                                  })\r\n                                  .catch((err) => {\r\n                                    dispatch(\r\n                                      setAlert({\r\n                                        message: 'Error dispatching order',\r\n                                        error: true,\r\n                                      }),\r\n                                    );\r\n                                  });\r\n                              },\r\n                            }),\r\n                          );\r\n                        }\r\n                      }}\r\n                      style={{\r\n                        backgroundColor: '#54a3ff',\r\n                        color: 'white',\r\n                        textTransform: 'capitalize',\r\n                        marginBottom: '10px',\r\n                      }}\r\n                    >\r\n                      Create Invoice\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {/* <ReactToPrint\r\n                      pageStyle={pageStyle}\r\n                      trigger={() => (\r\n                        <Button\r\n                          style={{\r\n                            backgroundColor: '#54a3ff',\r\n                            color: 'white',\r\n                            textTransform: 'capitalize',\r\n                            marginBottom: '10px',\r\n                          }}\r\n                        >\r\n                          Print PDF\r\n                        </Button>\r\n                      )}\r\n                      content={() => invoiceRef.current}\r\n                    /> */}\r\n\r\n                    <Invoice componentRef={invoiceRef} lead={lead} />\r\n                    <div>\r\n                      <table>\r\n                        <tr>\r\n                          <th colSpan=\"5\">User Information</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <td colSpan=\"3\">\r\n                            Name: <span>{DATA?.name}</span>\r\n                          </td>\r\n                          <td colSpan=\"3\">\r\n                            Phone No: <span>{DATA?.phone}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td colSpan=\"5\">\r\n                            Address:{' '}\r\n                            <span>\r\n                              {DATA?.street +\r\n                                ', ' +\r\n                                DATA?.city +\r\n                                ', ' +\r\n                                DATA?.state +\r\n                                ', ' +\r\n                                DATA?.country +\r\n                                ', ' +\r\n                                DATA?.zipcode}\r\n                            </span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td colSpan=\"5\">\r\n                            Email: <span>{DATA?.email}</span>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <th colSpan=\"5\">Order Information</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th>Item</th>\r\n                          <th>Quantity</th>\r\n                          <th>Price</th>\r\n                          <th>GST</th>\r\n                          <th>Amount</th>\r\n                        </tr>\r\n                        {lead?.items?.map((item) => {\r\n                          let gst = inventory.filter(\r\n                            (f) => f._id === item?.item?._id,\r\n                          )[0]?.gst;\r\n                          let amt =\r\n                            item?.quantity *\r\n                            item?.item?.sale_price *\r\n                            (1 + gst / 100);\r\n                          totalAmt += amt;\r\n                          return (\r\n                            <tr>\r\n                              <td>{item?.item?.item_name}</td>\r\n                              <td>{item?.quantity}</td>\r\n                              <td>\r\n                                ₹\r\n                                {item?.updatedSalePrice > 0\r\n                                  ? item?.updatedSalePrice\r\n                                  : item?.item?.sale_price}\r\n                              </td>\r\n                              <td>{gst}%</td>\r\n                              <td>₹{amt}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                        <tr>\r\n                          <th colSpan=\"4\">Total</th>\r\n                          <td>₹{totalAmt}</td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`${\r\n            lead?.status === 'Active'\r\n              ? 'bg-green-500'\r\n              : lead?.status === 'Cancelled'\r\n              ? 'bg-red-500'\r\n              : 'bg-blue-500'\r\n          } bg-gray-200 p-2 rounded-b-lg flex`}\r\n        >\r\n          <p className=\"text-lg font-semibold mr-6 ml-2 \">\r\n            Stage: <span className=\"font-medium\">{lead?.stage}</span>\r\n          </p>\r\n          <p className=\"text-lg font-semibold\">\r\n            Status: <span className=\"font-medium\">{lead?.status}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeadDetails;\r\n","import React, { useState } from 'react';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  createFollowUp,\r\n  refreshContact,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport Cookies from 'js-cookie';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst FollowUpList = ({ fupFilter, fup }) => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.contact.update);\r\n  const token = Cookies.get('JWT');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const [remark, setRemark] = useState('');\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .post(\r\n        `/add-remarks-in-followup/${fup._id}/${user._id}`,\r\n        {\r\n          remarks: remark,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        },\r\n      )\r\n      .then((res) => {\r\n        dispatch(refreshContact(data._id));\r\n        dispatch(setAlert({ message: 'FollowUp Completed', error: false }));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          setAlert({ message: 'Error converting followup', error: true }),\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {fupFilter === 'Upcoming' ? (\r\n        <>\r\n          {new Date(fup?.date).toLocaleDateString() >=\r\n            new Date().toLocaleDateString() && !fup?.isAttended ? (\r\n            <div\r\n              key={fup?._id}\r\n              className=\"bg-gray-100 w-full p-4 py-1 rounded-md flex justify-between items-center mb-2 cursor-pointer\"\r\n            >\r\n              <div className=\"text-base\">\r\n                <p className=\"border-b-2 py-1 pr-4\">\r\n                  <span className=\"font-light mr-2\">Opening Remark:</span>\r\n                  {fup?.text}\r\n                </p>\r\n                <p>\r\n                  {new Date(fup?.date).toLocaleString('en-US', {\r\n                    timeZone: 'UTC',\r\n                    day: '2-digit',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                  })}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={`px-2 py-1 ml-4 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  placeholder=\"Enter closing remark\"\r\n                  value={remark}\r\n                  onChange={(e) => setRemark(e.target.value)}\r\n                />\r\n                <IconButton\r\n                  onClick={handleSubmit}\r\n                  style={{ padding: '8px', marginLeft: '10px' }}\r\n                >\r\n                  <CheckIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    axiosInstance\r\n                      .delete(`/delete-followup/${fup?._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(data._id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'FollowUp deleted',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch((err) => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting followup',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  }}\r\n                  style={{ padding: '8px' }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n      {fupFilter === 'Today' ? (\r\n        <>\r\n          {new Date(fup?.date).toLocaleDateString() ===\r\n            new Date().toLocaleDateString() && !fup?.isAttended ? (\r\n            <div\r\n              key={fup?._id}\r\n              className=\"bg-gray-100 w-full p-4 py-1 rounded-md flex justify-between items-center mb-2 cursor-pointer\"\r\n            >\r\n              <div className=\"text-base\">\r\n                <p className=\"border-b-2 py-1 pr-4\">\r\n                  <span className=\"font-light mr-2\">Opening Remark:</span>\r\n                  {fup?.text}\r\n                </p>\r\n                <p>\r\n                  {new Date(fup?.date).toLocaleString('en-US', {\r\n                    timeZone: 'UTC',\r\n                    day: '2-digit',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                  })}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={`px-2 py-1 ml-4 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  placeholder=\"Enter closing remark\"\r\n                  value={remark}\r\n                  onChange={(e) => setRemark(e.target.value)}\r\n                />\r\n                <IconButton\r\n                  onClick={handleSubmit}\r\n                  style={{ padding: '8px', marginLeft: '10px' }}\r\n                >\r\n                  <CheckIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    axiosInstance\r\n                      .delete(`/delete-followup/${fup?._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(data._id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'FollowUp deleted',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch((err) => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting followup',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  }}\r\n                  style={{ padding: '8px' }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n\r\n      {fupFilter === 'Missed' ? (\r\n        <>\r\n          {new Date(fup?.date).toLocaleDateString() <\r\n          new Date().toLocaleDateString() ? (\r\n            <div\r\n              key={fup?._id}\r\n              className=\"bg-gray-100 w-full p-4 py-1 rounded-md flex justify-between items-center mb-2 cursor-pointer\"\r\n            >\r\n              <div className=\"text-base\">\r\n                <p>\r\n                  <span className=\"font-light mr-2\">Opening Remark:</span>\r\n                  {fup?.text}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <p>\r\n                  {new Date(fup?.date).toLocaleString('en-US', {\r\n                    timeZone: 'UTC',\r\n                    day: '2-digit',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                  })}\r\n                </p>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    axiosInstance\r\n                      .delete(`/delete-followup/${fup?._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(data._id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'FollowUp deleted',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch((err) => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting followup',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  }}\r\n                  style={{ padding: '8px' }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n      {fupFilter === 'Completed' ? (\r\n        <>\r\n          {fup?.isAttended ? (\r\n            <div\r\n              key={fup?._id}\r\n              className=\"bg-gray-100 w-full p-4 py-1 rounded-md flex justify-between items-center mb-2 cursor-pointer\"\r\n            >\r\n              <div className=\"text-base\">\r\n                <p>\r\n                  <span className=\"font-light mr-2\">Opening Remark:</span>\r\n                  {fup?.text}\r\n                </p>\r\n                <p>\r\n                  <span className=\"font-light mr-2\">Closing Remark:</span>\r\n                  {fup?.remarks}\r\n                </p>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <p>\r\n                  {new Date(fup?.date).toLocaleString('en-US', {\r\n                    timeZone: 'UTC',\r\n                    day: '2-digit',\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                  })}\r\n                </p>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    axiosInstance\r\n                      .delete(`/delete-followup/${fup?._id}/${user._id}`, {\r\n                        headers: {\r\n                          Authorization: `Bearer ${token}`,\r\n                        },\r\n                      })\r\n                      .then((res) => {\r\n                        dispatch(refreshContact(data._id));\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'FollowUp deleted',\r\n                            error: false,\r\n                          }),\r\n                        );\r\n                      })\r\n                      .catch((err) => {\r\n                        dispatch(\r\n                          setAlert({\r\n                            message: 'Error deleting followup',\r\n                            error: true,\r\n                          }),\r\n                        );\r\n                      });\r\n                  }}\r\n                  style={{ padding: '8px' }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowUpList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport {\r\n  createFollowUp,\r\n  createleadCard,\r\n  refreshContact,\r\n  setupdatecontact,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport { deleteContact } from '../../context/actions/contactAction/contactAction';\r\nimport LeadList from '../Leads/LeadList';\r\nimport LeadDetails from '../Leads/LeadDetails';\r\nimport { setConfirmation } from '../../context/actions/confirmationAction';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport FollowUpList from './FollowUpList';\r\nimport ContactPageIcon from '@mui/icons-material/ContactPage';\r\n\r\nconst DetailCard = ({ title, detail }) => {\r\n  return (\r\n    <div className=\"flex w-full\">\r\n      <p className=\"flex text-lg font-semibold mr-2\">{title}:</p>\r\n      <p className=\"text-lg\">{detail}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ContactDetails = () => {\r\n  const history = useHistory();\r\n  const data = useSelector((state) => state.contact.update);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const [showLeadDetails, setShowLeadDetails] = useState(false);\r\n  const [filter, setFilter] = useState('All');\r\n  const [button, setButton] = useState({\r\n    lead: true,\r\n    fup: false,\r\n  });\r\n  const [fupFilter, setFupFilter] = useState('Upcoming');\r\n\r\n  const actions = [\r\n    {\r\n      icon: <SpeedDialIcon />,\r\n      name: 'Lead',\r\n      task: () => {\r\n        dispatch(\r\n          createleadCard({\r\n            show: true,\r\n            phone: data.phone,\r\n            fromContact: true,\r\n          }),\r\n        );\r\n      },\r\n    },\r\n    {\r\n      icon: <SpeedDialIcon />,\r\n      name: 'FollowUp',\r\n      task: () => {\r\n        dispatch(\r\n          createFollowUp({\r\n            show: true,\r\n            phone: data.phone,\r\n            fromContact: true,\r\n          }),\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshContact(id));\r\n  }, [dispatch, id]);\r\n\r\n  const componentRef = useRef();\r\n  const pageStyle = `@media all {\r\n      .page-break {\r\n        display: none;\r\n      }\r\n    }\r\n    \r\n    @media print {\r\n      html, body {\r\n        height: initial !important;\r\n        overflow: initial !important;\r\n        -webkit-print-color-adjust: exact;\r\n      }\r\n    }\r\n    \r\n    @media print {\r\n      .page-break {\r\n        margin-top: 1rem;\r\n        display: block;\r\n        page-break-before: auto;\r\n      }\r\n    }\r\n    \r\n    @page {\r\n      size: auto;\r\n      margin: 15mm;\r\n    }`;\r\n\r\n  let quotation = 0,\r\n    invoice = 0,\r\n    orderForm = 0;\r\n\r\n  data?.allLeads?.forEach((element) => {\r\n    if (\r\n      element.stage !== 'Preliminary' &&\r\n      element.stage !== 'Qualified' &&\r\n      element.stage !== 'Converted'\r\n    ) {\r\n      quotation++;\r\n    }\r\n    if (\r\n      element.stage === 'Order Form' ||\r\n      element.stage === 'Dispatched' ||\r\n      element.stage === 'Invoice'\r\n    ) {\r\n      orderForm++;\r\n    }\r\n    if (element.stage === 'Invoice') {\r\n      invoice++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex w-full\">\r\n      <LeadDetails\r\n        setShow={setShowLeadDetails}\r\n        show={showLeadDetails}\r\n        data={data}\r\n      />\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial basic example\"\r\n        sx={{ position: 'absolute', bottom: 40, right: 40 }}\r\n        icon={<SpeedDialIcon />}\r\n      >\r\n        {actions.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            tooltipOpen\r\n            onClick={action.task}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n      <div className=\"w-100\">\r\n        {/* <div className=\"m-10 mt-7 mr-5 p-3 rounded-lg mb-1 flex justify-end items-center\">\r\n          <Button\r\n            onClick={() => {\r\n              setAddLead(true);\r\n              setPhone(data.phone);\r\n            }}\r\n            style={{\r\n              backgroundColor: '#54a3ff',\r\n              color: 'white',\r\n              textTransform: 'capitalize',\r\n              marginRight: '10px',\r\n            }}\r\n          >\r\n            Add lead\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(\r\n                createFollowUp({\r\n                  show: true,\r\n                  phone: data.phone,\r\n                  fromContact: true,\r\n                }),\r\n              );\r\n            }}\r\n            style={{\r\n              backgroundColor: '#54a3ff',\r\n              color: 'white',\r\n              textTransform: 'capitalize',\r\n            }}\r\n          >\r\n            Create FollowUp\r\n          </Button>\r\n        </div> */}\r\n        <div className=\"m-10 mr-5 p-7 py-10 bg-white rounded-lg mb-4\">\r\n          <div className=\"w-full mb-6 flex justify-between items-center\">\r\n            <h1 className=\"text-3xl font-semibold\">\r\n              <span>\r\n                <ContactPageIcon fontSize=\"large\" />\r\n              </span>{' '}\r\n              Details\r\n            </h1>\r\n            <div className=\"transform scale-110\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  dispatch(setupdatecontact(data));\r\n                  history.push(`/updatecontact/${data._id}`);\r\n                }}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => {\r\n                  dispatch(\r\n                    setConfirmation({\r\n                      show: true,\r\n                      text: 'Are you sure you want to delete?\\n All leads will be deleted.',\r\n                      func: () => {\r\n                        dispatch(deleteContact(data._id));\r\n                        history.push('/contacts');\r\n                      },\r\n                    }),\r\n                  );\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center w-full justify-between\">\r\n            {/* <ReactToPrint\r\n            pageStyle={pageStyle}\r\n            trigger={() => (\r\n              <Button\r\n                style={{\r\n                  backgroundColor: '#54a3ff',\r\n                  color: 'white',\r\n                  textTransform: 'capitalize',\r\n                  marginBottom: '10px',\r\n                }}\r\n              >\r\n                Print PDF\r\n              </Button>\r\n            )}\r\n            content={() => componentRef.current}\r\n          /> */}\r\n          </div>\r\n\r\n          <div>\r\n            <DetailCard title=\"Name\" detail={data.name} />\r\n            <DetailCard title=\"Email\" detail={data.email} />\r\n            <DetailCard title=\"Phone\" detail={data.phone} />\r\n            <DetailCard title=\"Whatsapp\" detail={data.whatsapp_no} />\r\n            <DetailCard title=\"Title\" detail={data.title} />\r\n            {data?.organization ? (\r\n              <DetailCard\r\n                title=\"Organization\"\r\n                detail={data?.organization?.name}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}\r\n            <DetailCard\r\n              title=\"Address\"\r\n              detail={\r\n                data?.street +\r\n                ', ' +\r\n                data?.city +\r\n                ', ' +\r\n                data?.state +\r\n                ', ' +\r\n                data?.country +\r\n                ', ' +\r\n                data?.zipcode\r\n              }\r\n            />\r\n            <DetailCard title=\"Department\" detail={data?.department} />\r\n            <DetailCard\r\n              title=\"Created At\"\r\n              detail={new Date(data?.createdAt).toLocaleString('en-US', {\r\n                year: 'numeric',\r\n                day: 'numeric',\r\n                month: 'numeric',\r\n              })}\r\n            />\r\n            <DetailCard title=\"Description\" detail={data?.description} />\r\n          </div>\r\n        </div>\r\n        <div className=\"m-10 mr-5 p-7 bg-white rounded-lg mt-0\">\r\n          <div className=\"flex justify-between text-xl border-b-2 pb-1 mb-1\">\r\n            <p>Quotation</p>\r\n            <p>{quotation}</p>\r\n          </div>\r\n          <div className=\"flex justify-between text-xl border-b-2 pb-1 mb-1\">\r\n            <p>Order Form</p>\r\n            <p>{orderForm}</p>\r\n          </div>\r\n          <div className=\"flex justify-between text-xl \">\r\n            <p>Invoices</p>\r\n            <p>{invoice}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"m-10 ml-2 py-5 px-10 flex-1 rounded-lg bg-white\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <div className=\"border-b-2 w-max border-blue-300 flex\">\r\n            <Button\r\n              style={{\r\n                width: 'max-content',\r\n                textTransform: 'capitalize',\r\n                fontSize: '20px',\r\n                color: `${button.lead ? '#54a3ff' : 'black'}`,\r\n                fontWeight: `${button.lead ? '600' : '500'}`,\r\n              }}\r\n              onClick={() => {\r\n                setButton({\r\n                  lead: true,\r\n                  fup: false,\r\n                });\r\n              }}\r\n            >\r\n              Leads\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                width: 'max-content',\r\n                textTransform: 'capitalize',\r\n                fontSize: '20px',\r\n                color: `${button.fup ? '#54a3ff' : 'black'}`,\r\n                fontWeight: `${button.fup ? '600' : '500'}`,\r\n              }}\r\n              onClick={() => {\r\n                setButton({\r\n                  lead: false,\r\n                  fup: true,\r\n                });\r\n              }}\r\n            >\r\n              Follow Ups\r\n            </Button>\r\n          </div>\r\n          {button.lead ? (\r\n            <div className=\"w-full flex items-center justify-end\">\r\n              <select\r\n                className={`p-2 py-1 w-1/4 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                name=\"\"\r\n                id=\"\"\r\n                value={filter}\r\n                onChange={(e) => setFilter(e.target.value)}\r\n              >\r\n                <option value=\"All\" selected>\r\n                  All\r\n                </option>\r\n                <option value=\"Active\">Active</option>\r\n                <option value=\"Completed\">Completed</option>\r\n                <option value=\"Cancelled\">Cancelled</option>\r\n                <option value=\"Preliminary\">Preliminary</option>\r\n                <option value=\"Qualified\">Qualified</option>\r\n                <option value=\"Converted\">Converted</option>\r\n                <option value=\"Quotation\">Quotation</option>\r\n                <option value=\"Negotiation\">Negotiation</option>\r\n                <option value=\"Order Form\">Order Form</option>\r\n                <option value=\"Dispatched\">Dispatched</option>\r\n                <option value=\"Invoice\">Invoice</option>\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n          {button.fup ? (\r\n            <div className=\"w-full flex items-center justify-end\">\r\n              <select\r\n                className={`p-2 py-1 w-1/4 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                name=\"\"\r\n                id=\"\"\r\n                value={fupFilter}\r\n                onChange={(e) => setFupFilter(e.target.value)}\r\n              >\r\n                <option value=\"Upcoming\" selected>\r\n                  Upcoming\r\n                </option>\r\n                <option value=\"Today\">Today</option>\r\n                <option value=\"Completed\">Completed</option>\r\n                <option value=\"Missed\">Missed</option>\r\n              </select>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {button.lead ? (\r\n          <div className=\"mt-4\">\r\n            <div className=\"overflow-auto max-h-lead\">\r\n              {data?.allLeads?.length === 0 ? (\r\n                <p className=\"text-2xl mt-4 text-gray-600 ml-2\">\r\n                  No leads available\r\n                </p>\r\n              ) : (\r\n                <>\r\n                  {' '}\r\n                  {data?.allLeads?.map((lead) => {\r\n                    return (\r\n                      <>\r\n                        {lead?.stage === filter ? (\r\n                          <LeadList\r\n                            setShow={setShowLeadDetails}\r\n                            lead={lead}\r\n                            id={data._id}\r\n                          />\r\n                        ) : null}\r\n                        {lead?.status === filter ? (\r\n                          <LeadList\r\n                            setShow={setShowLeadDetails}\r\n                            lead={lead}\r\n                            id={data._id}\r\n                          />\r\n                        ) : null}\r\n                        {filter === 'All' ? (\r\n                          <LeadList\r\n                            setShow={setShowLeadDetails}\r\n                            lead={lead}\r\n                            id={data._id}\r\n                          />\r\n                        ) : null}\r\n                      </>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {button.fup ? (\r\n          <div className=\"mt-4\">\r\n            <div className=\"overflow-auto max-h-lead\">\r\n              {data.allFollowups?.map((fup) => {\r\n                return (\r\n                  <>\r\n                    <FollowUpList fupFilter={fupFilter} fup={fup} />\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactDetails;\r\n","import { useFormik } from 'formik';\r\nimport React, { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport { createInventory } from '../../context/actions/inventoryAction/inventoryAction';\r\n\r\nconst CreateInventory = () => {\r\n  const dispatch = useDispatch();\r\n  const imgRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.type) {\r\n      errors.type = '*Required';\r\n    }\r\n    if (!values.item_name) {\r\n      errors.item_name = '*Required';\r\n    }\r\n    if (!values.sku) {\r\n      errors.sku = '*Required';\r\n    }\r\n\r\n    if (!values.article) {\r\n      errors.article = '*Required';\r\n    }\r\n    if (!values.item) {\r\n      errors.item = '*Required';\r\n    }\r\n    if (!values.length) {\r\n      errors.length = '*Required';\r\n    }\r\n    if (!values.width) {\r\n      errors.width = '*Required';\r\n    }\r\n    if (!values.height) {\r\n      errors.height = '*Required';\r\n    }\r\n\r\n    if (!values.brand) {\r\n      errors.brand = '*Required';\r\n    }\r\n    if (!values.manufacturer) {\r\n      errors.manufacturer = '*Required';\r\n    }\r\n    if (!values.hsn_code) {\r\n      errors.hsn_code = '*Required';\r\n    }\r\n    if (!values.sale_price) {\r\n      errors.sale_price = '*Required';\r\n    }\r\n    if (!values.purchase_price) {\r\n      errors.purchase_price = '*Required';\r\n    }\r\n    if (!values.mpn_code) {\r\n      errors.mpn_code = '*Required';\r\n    }\r\n    if (!values.isbn_code) {\r\n      errors.isbn_code = '*Required';\r\n    }\r\n    if (!values.gst) {\r\n      errors.gst = '*Required';\r\n    }\r\n    if (!values.description) {\r\n      errors.description = '*Required';\r\n    }\r\n    if (!values.colour) {\r\n      errors.colour = '*Required';\r\n    }\r\n    if (values.image === null) {\r\n      errors.image = '*Required';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, values, setFieldValue, resetForm } = useFormik(\r\n    {\r\n      initialValues: {\r\n        gst: '',\r\n        type: '',\r\n        item_name: '',\r\n        sku: '',\r\n        article: '',\r\n        length: '',\r\n        width: '',\r\n        height: '',\r\n        brand: '',\r\n        manufacturer: '',\r\n        hsn_code: '',\r\n        sale_price: '',\r\n        purchase_price: '',\r\n        mpn_code: '',\r\n        isbn_code: '',\r\n        description: '',\r\n        colour: '',\r\n        image: null,\r\n      },\r\n      validate,\r\n    },\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0) {\r\n      const formdata = new FormData();\r\n      var todayDate = new Date().toISOString().slice(0, 10);\r\n      formdata.append('type', values.type);\r\n      formdata.append('item_name', values.item_name);\r\n      formdata.append('sku', values.sku);\r\n      formdata.append('article', values.article);\r\n      formdata.append('length', values.length);\r\n      formdata.append('width', values.width);\r\n      formdata.append('height', values.height);\r\n      formdata.append('brand', values.brand);\r\n      formdata.append('manufacturer', values.manufacturer);\r\n      formdata.append('hsn_code', values.hsn_code);\r\n      formdata.append('sale_price', values.sale_price);\r\n      formdata.append('purchase_price', values.purchase_price);\r\n      formdata.append('mpn_code', values.mpn_code);\r\n      formdata.append('isbn_code', values.isbn_code);\r\n      formdata.append('image', values.image);\r\n      formdata.append('gst', values.gst);\r\n      formdata.append('colour', values.colour);\r\n      formdata.append('date', todayDate);\r\n      dispatch(createInventory(formdata, resetForm, history));\r\n      imgRef.current.value = '';\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"mt-10 mx-4 flex flex-col items-center\">\r\n      <div className=\"bg-white flex justify-between items-center p-4 mb-4 w-full rounded-lg\">\r\n        <h2 className=\"text-xl font-bold m-0\">Create Inventory</h2>\r\n      </div>\r\n      <div className=\"flex flex-wrap w-full\">\r\n        <div className=\"bg-white p-4 flex-1 flex flex-col rounded-l-lg\">\r\n          <lable className=\" px-2 text-gray-2 mt-4 text-md font-semibold  \">\r\n            Type:\r\n          </lable>\r\n          <div className=\"flex\">\r\n            <div className=\"px-2 flex items-center \">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Goods\r\n              </lable>\r\n              <input\r\n                name=\"type\"\r\n                className={`ml-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"radio\"\r\n                checked={values.type === 'Goods'}\r\n                onChange={() => setFieldValue('type', 'Goods')}\r\n              />\r\n            </div>\r\n            <div className=\"px-2 flex items-center\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Service\r\n              </lable>\r\n              <input\r\n                name=\"type\"\r\n                className={`ml-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"radio\"\r\n                checked={values.type === 'Service'}\r\n                onChange={() => setFieldValue('type', 'Service')}\r\n              />\r\n            </div>\r\n          </div>\r\n          {errors.type ? (\r\n            <div className=\"w-full text-sm text-red-400\">{errors.type}</div>\r\n          ) : null}\r\n\r\n          <div className=\"px-2 mt-4 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Item Name\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              {...getFieldProps('item_name')}\r\n            />\r\n            {errors.item_name ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.item_name}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">SKU</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter sku\"\r\n              {...getFieldProps('sku')}\r\n            />\r\n            {errors.sku ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.sku}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 flex mt-3 flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Article\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter article\"\r\n              {...getFieldProps('article')}\r\n            />\r\n            {errors.article ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.article}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"flex mt-3 flex-wrap w-full\">\r\n            <div className=\"flex-col flex flex-1 px-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Length\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter length\"\r\n                {...getFieldProps('length')}\r\n              />\r\n              {errors.length ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.length}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 px-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Width\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter width\"\r\n                {...getFieldProps('width')}\r\n              />\r\n              {errors.width ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.width}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 px-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Height\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter height\"\r\n                {...getFieldProps('height')}\r\n              />\r\n              {errors.height ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.height}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Image</lable>\r\n            <input\r\n              className={`p-2 w-full border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpeg\"\r\n              ref={imgRef}\r\n              onChange={(e) => setFieldValue('image', e.target.files[0])}\r\n            />\r\n            {errors.image ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.image}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 pt-1 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">GST</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter gst\"\r\n              {...getFieldProps('gst')}\r\n            />\r\n            {errors.gst ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.gst}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 pt-1 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Colour</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"Text\"\r\n              placeholder=\"Enter gst\"\r\n              {...getFieldProps('colour')}\r\n            />\r\n            {errors.colour ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.colour}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-4 flex-1 flex flex-col rounded-r-lg\">\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Brand</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter brand name\"\r\n              {...getFieldProps('brand')}\r\n            />\r\n            {errors.brand ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.brand}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Manufacturer\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter manufaturer\"\r\n              {...getFieldProps('manufacturer')}\r\n            />\r\n            {errors.manufacturer ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.manufacturer}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              HSN Code\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter HSN code\"\r\n              {...getFieldProps('hsn_code')}\r\n            />\r\n            {errors.hsn_code ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.hsn_code}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Sales Price\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter sales price\"\r\n              {...getFieldProps('sale_price')}\r\n            />\r\n            {errors.sale_price ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.sale_price}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Purchase Price\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter purchase price\"\r\n              {...getFieldProps('purchase_price')}\r\n            />\r\n            {errors.purchase_price ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.purchase_price}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">MPN</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter MPN\"\r\n              {...getFieldProps('mpn_code')}\r\n            />\r\n            {errors.mpn_code ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.mpn_code}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 flex mt-3 flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">ISBN</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter ISBN\"\r\n              {...getFieldProps('isbn_code')}\r\n            />\r\n            {errors.isbn_code ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.isbn_code}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full mt-3 mb-3 flex flex-col bg-white p-4 rounded-lg\">\r\n          <lable className=\"text-gray-2 text-md font-semibold \">\r\n            Description\r\n          </lable>\r\n          <textarea\r\n            className={` p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n            type=\"text\"\r\n            placeholder=\"Enter description\"\r\n            {...getFieldProps('description')}\r\n          />\r\n          {errors.description ? (\r\n            <div className=\"w-full text-sm text-red-400\">\r\n              {errors.description}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        onClick={(e) => handleSubmit(e)}\r\n        className=\"bg-green-600 mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 text-white\"\r\n      >\r\n        Save Inventory\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateInventory;\r\n","import { useFormik } from 'formik';\r\nimport React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\nimport {\r\n  createInventory,\r\n  updateInventory,\r\n} from '../../context/actions/inventoryAction/inventoryAction';\r\n\r\nconst CreateInventory = () => {\r\n  const dispatch = useDispatch();\r\n  const imgRef = useRef();\r\n  const update = useSelector((state) => state.inventory.update);\r\n  const history = useHistory();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.type) {\r\n      errors.type = '*Required';\r\n    }\r\n    if (!values.item_name) {\r\n      errors.item_name = '*Required';\r\n    }\r\n    if (!values.sku) {\r\n      errors.sku = '*Required';\r\n    }\r\n\r\n    if (!values.article) {\r\n      errors.article = '*Required';\r\n    }\r\n    if (!values.item) {\r\n      errors.item = '*Required';\r\n    }\r\n    if (!values.length) {\r\n      errors.length = '*Required';\r\n    }\r\n    if (!values.width) {\r\n      errors.width = '*Required';\r\n    }\r\n    if (!values.height) {\r\n      errors.height = '*Required';\r\n    }\r\n\r\n    if (!values.brand) {\r\n      errors.brand = '*Required';\r\n    }\r\n    if (!values.manufacturer) {\r\n      errors.manufacturer = '*Required';\r\n    }\r\n    if (!values.hsn_code) {\r\n      errors.hsn_code = '*Required';\r\n    }\r\n    if (!values.sale_price) {\r\n      errors.sale_price = '*Required';\r\n    }\r\n    if (!values.purchase_price) {\r\n      errors.purchase_price = '*Required';\r\n    }\r\n    if (!values.mpn_code) {\r\n      errors.mpn_code = '*Required';\r\n    }\r\n    if (!values.isbn_code) {\r\n      errors.isbn_code = '*Required';\r\n    }\r\n    if (!values.gst) {\r\n      errors.gst = '*Required';\r\n    }\r\n    if (!values.description) {\r\n      errors.description = '*Required';\r\n    }\r\n    if (!values.colour) {\r\n      errors.colour = '*Required';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const {\r\n    getFieldProps,\r\n    errors,\r\n    values,\r\n    handleChange,\r\n    setFieldValue,\r\n    resetForm,\r\n  } = useFormik({\r\n    initialValues: Object.assign(update, { image: null }),\r\n    validate,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      var todayDate = new Date().toISOString().slice(0, 10);\r\n      var newdata = {\r\n        type: values.type,\r\n        item_name: values.item_name,\r\n        sku: values.sku,\r\n        article: values.article,\r\n        length: values.length,\r\n        width: values.width,\r\n        height: values.height,\r\n        brand: values.brand,\r\n        manufacturer: values.manufacturer,\r\n        hsn_code: values.hsn_code,\r\n        mpn_code: values.mpn_code,\r\n        isbn_code: values.isbn_code,\r\n        description: values.description,\r\n        colour: values.colour,\r\n        gst: values.gst,\r\n        date: todayDate,\r\n      };\r\n      dispatch(updateInventory(update._id, newdata, resetForm, history));\r\n      imgRef.current.value = '';\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"mt-10 mx-4 flex flex-col items-center\">\r\n      <div className=\"bg-white flex justify-between items-center p-4 mb-4 w-full rounded-lg\">\r\n        <h2 className=\"text-xl font-bold m-0\">Update Inventory</h2>\r\n      </div>\r\n      <div className=\"flex flex-wrap w-full\">\r\n        <div className=\"bg-white px-4 pt-4  pb-2 flex-1 flex flex-col rounded-l-lg\">\r\n          <lable className=\" px-2 text-gray-2 mt-4 text-md font-semibold \">\r\n            Type:\r\n          </lable>\r\n          <div className=\"flex w-full\">\r\n            <div className=\"px-2 flex items-center \">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Goods\r\n              </lable>\r\n              <input\r\n                name=\"type\"\r\n                className={`ml-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"radio\"\r\n                checked={values.type === 'Goods'}\r\n                onChange={() => setFieldValue('type', 'Goods')}\r\n              />\r\n            </div>\r\n            <div className=\"px-2 flex items-center\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Service\r\n              </lable>\r\n              <input\r\n                name=\"type\"\r\n                className={`ml-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"radio\"\r\n                checked={values.type === 'Service'}\r\n                onChange={() => setFieldValue('type', 'Service')}\r\n              />\r\n            </div>\r\n          </div>\r\n          {errors.type ? (\r\n            <div className=\"w-full text-sm text-red-400\">{errors.type}</div>\r\n          ) : null}\r\n\r\n          <div className=\"px-2 mt-4 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Item Name\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              {...getFieldProps('item_name')}\r\n            />\r\n            {errors.item_name ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.item_name}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">SKU</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter sku\"\r\n              {...getFieldProps('sku')}\r\n            />\r\n            {errors.sku ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.sku}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 flex mt-3 flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Article\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter article\"\r\n              {...getFieldProps('article')}\r\n            />\r\n            {errors.article ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.article}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"flex mt-3 flex-wrap w-full\">\r\n            <div className=\"flex-col flex flex-1 px-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Length\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter length\"\r\n                {...getFieldProps('length')}\r\n              />\r\n              {errors.length ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.length}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 px-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Width\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter width\"\r\n                {...getFieldProps('width')}\r\n              />\r\n              {errors.width ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.width}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"flex-col flex flex-1 px-2\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Height\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"number\"\r\n                placeholder=\"Enter height\"\r\n                {...getFieldProps('height')}\r\n              />\r\n              {errors.height ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.height}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Image</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpeg\"\r\n              ref={imgRef}\r\n              onChange={(e) => setFieldValue('image', e.target.files[0])}\r\n            />\r\n            {errors.image ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.image}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 pt-1 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">GST</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter gst\"\r\n              {...getFieldProps('gst')}\r\n            />\r\n            {errors.gst ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.gst}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 pt-1 mb-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Colour</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"Text\"\r\n              placeholder=\"Enter gst\"\r\n              {...getFieldProps('colour')}\r\n            />\r\n            {errors.colour ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.colour}</div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-4 flex-1 flex flex-col rounded-r-lg\">\r\n          <div className=\"px-2 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">Brand</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter brand name\"\r\n              {...getFieldProps('brand')}\r\n            />\r\n            {errors.brand ? (\r\n              <div className=\"w-full text-sm text-red-400\">{errors.brand}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Manufacturer\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"text\"\r\n              placeholder=\"Enter manufaturer\"\r\n              {...getFieldProps('manufacturer')}\r\n            />\r\n            {errors.manufacturer ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.manufacturer}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              HSN Code\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter HSN code\"\r\n              {...getFieldProps('hsn_code')}\r\n            />\r\n            {errors.hsn_code ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.hsn_code}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Sales Price\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter sales price\"\r\n              {...getFieldProps('sale_price')}\r\n            />\r\n            {errors.sale_price ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.sale_price}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">\r\n              Purchase Price\r\n            </lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter purchase price\"\r\n              {...getFieldProps('purchase_price')}\r\n            />\r\n            {errors.purchase_price ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.purchase_price}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">MPN</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter MPN\"\r\n              {...getFieldProps('mpn_code')}\r\n            />\r\n            {errors.mpn_code ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.mpn_code}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"px-2 flex mt-3 flex-col w-full\">\r\n            <lable className=\"text-gray-2 text-md font-semibold \">ISBN</lable>\r\n            <input\r\n              className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n              type=\"number\"\r\n              placeholder=\"Enter ISBN\"\r\n              {...getFieldProps('isbn_code')}\r\n            />\r\n            {errors.isbn_code ? (\r\n              <div className=\"w-full text-sm text-red-400\">\r\n                {errors.isbn_code}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full mt-3 mb-3 flex flex-col bg-white p-4 rounded-lg\">\r\n          <lable className=\"text-gray-2 text-md font-semibold \">\r\n            Description\r\n          </lable>\r\n          <textarea\r\n            className={` p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n            type=\"text\"\r\n            placeholder=\"Enter description\"\r\n            {...getFieldProps('description')}\r\n          />\r\n          {errors.description ? (\r\n            <div className=\"w-full text-sm text-red-400\">\r\n              {errors.description}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        onClick={(e) => handleSubmit(e)}\r\n        className=\"bg-green-600 mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 text-white\"\r\n      >\r\n        Update Inventory\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateInventory;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DetailCard from '../../Components/DetailCard';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport {\r\n  deleteInventory,\r\n  refreshInventory,\r\n  setupdateinventory,\r\n} from '../../context/actions/inventoryAction/inventoryAction';\r\nimport { setConfirmation } from '../../context/actions/confirmationAction';\r\nimport InventoryIcon from '@mui/icons-material/Inventory';\r\n\r\nconst InventoryDetails = () => {\r\n  const data = useSelector((state) => state.inventory.update);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshInventory(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <div className=\"flex w-full\">\r\n      <div className=\" m-10 mr-2 w-1/4 py-10 px-20 bg-white rounded-lg\"></div>\r\n      <div className=\" m-10 py-10 px-20 bg-white flex-1 rounded-lg\">\r\n        <div className=\"flex mb-6 items-center w-full justify-between\">\r\n          <h1 className=\"text-3xl font-semibold \">\r\n            {' '}\r\n            <span>\r\n              <InventoryIcon fontSize=\"large\" />\r\n            </span>{' '}\r\n            Inventory Details\r\n          </h1>\r\n          <div className=\"transform scale-125\">\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(setupdateinventory(data));\r\n                history.push(`/updateinventory/${data._id}`);\r\n              }}\r\n            >\r\n              <EditIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(\r\n                  setConfirmation({\r\n                    show: true,\r\n                    text: 'Are you sure you want to delete?',\r\n                    func: () => {\r\n                      dispatch(deleteInventory(data._id));\r\n                      history.push('/inventory');\r\n                    },\r\n                  }),\r\n                );\r\n              }}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <div className=\"w-1/2\">\r\n            <DetailCard title=\"Type\" detail={data.type} />\r\n            <DetailCard title=\"Item Name\" detail={data.item_name} />\r\n            <DetailCard title=\"SKU\" detail={data.sku} />\r\n            <DetailCard title=\"Article\" detail={data.article} />\r\n            <DetailCard\r\n              title=\"Dimension\"\r\n              detail={`${data.length}*${data.width}*${data.height}`}\r\n            />\r\n            <DetailCard title=\"Colour\" detail={data.colour} />\r\n            <DetailCard title=\"Brand\" detail={data.brand} />\r\n            <DetailCard title=\"Manufacturer\" detail={data.manufacturer} />\r\n          </div>\r\n          <div className=\"w-1/2\">\r\n            <DetailCard title=\"Sales Price\" detail={data.sale_price} />\r\n            <DetailCard title=\"GST\" detail={data.gst + '%'} />\r\n            <DetailCard title=\"Purchase Price\" detail={data.purchase_price} />\r\n            <DetailCard title=\"MPN Code\" detail={data.mpn_code} />\r\n            <DetailCard title=\"ISBN Code\" detail={data.isbn_code} />\r\n            <DetailCard title=\"HSN Code\" detail={data.hsn_code} />\r\n            <DetailCard title=\"Description\" detail={data.description} />\r\n            <DetailCard\r\n              title=\"Date\"\r\n              detail={new Date(data.date).toDateString()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryDetails;\r\n","import { SET_USER } from '../../actionTypes';\r\n\r\nconst setUser = (data) => ({\r\n  type: SET_USER,\r\n  payload: data,\r\n});\r\n\r\nconst getFromStorage = () => {\r\n  return (dispatch) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    dispatch(setUser(user));\r\n  };\r\n};\r\n\r\nexport { setUser, getFromStorage };\r\n","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { setUser } from '../../context/actions/authActions/authActions';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport Cookies from 'js-cookie';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.password) {\r\n      errors.password = '*Required';\r\n    }\r\n\r\n    if (!values.email) {\r\n      errors.email = '*Required';\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, handleSubmit, errors } = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validate,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      axiosInstance\r\n        .post('/login', values)\r\n        .then((res) => {\r\n          dispatch(setUser(res.data.admin));\r\n          Cookies.set('JWT', res.data.token);\r\n          localStorage.setItem('user', JSON.stringify(res.data.admin));\r\n          history.push('/');\r\n          resetForm();\r\n          dispatch(\r\n            setAlert({ message: 'Logged in successfully', error: false }),\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          resetForm();\r\n          dispatch(setAlert({ message: 'Error logging in', error: true }));\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"h-screen w-screen flex justify-center items-center\">\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"bg-white mx-4 w-full sm:w-1/2 lg:w-1/4 p-6 flex flex-col justify-center items-center \"\r\n      >\r\n        <h2 className=\"text-4xl pb-4\">Login</h2>\r\n        <div className=\"px-2 flex flex-col w-full\">\r\n          <lable className=\"text-gray-2 text-md font-semibold \">\r\n            Enter email\r\n          </lable>\r\n          <input\r\n            className={`p-2  border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            {...getFieldProps('email')}\r\n          />\r\n          {errors.email ? (\r\n            <div className=\"w-full text-sm text-red-400\">{errors.email}</div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n          <lable className=\"text-gray-2 text-md font-semibold \">\r\n            Enter password\r\n          </lable>\r\n          <input\r\n            className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            {...getFieldProps('password')}\r\n          />\r\n          {errors.password ? (\r\n            <div className=\"w-full text-sm text-red-400\">{errors.password}</div>\r\n          ) : null}\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-green-600 mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md my-2 mr-4 text-white\"\r\n        >\r\n          Login\r\n        </button>\r\n        {/* <button\r\n          onClick={() => {\r\n            history.push('/register');\r\n          }}\r\n          className=\"bg-green-600 hover:bg-green-700 px-5 py-2 text-lg rounded-md my-2 mr-4 text-white\"\r\n        >\r\n          Register\r\n        </button> */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setConfirmation } from '../context/actions/confirmationAction';\r\n\r\nconst Confirmation = ({ func, show, text }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className={`${\r\n        show ? 'block' : 'hidden'\r\n      }  fixed top-1/2 right-1/2 transform translate-x-1/2 z-50 -translate-y-1/2 flex justify-center items-center w-full h-full bg-black bg-opacity-20`}\r\n    >\r\n      <div className=\"bg-white rounded-md shadow-2xl\">\r\n        <div className=\"w-full flex justify-end\">\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(setConfirmation({ show: false, func: () => {} }));\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"px-6 pb-6\">\r\n          <p className=\"text-xl pb-10 whitespace-pre-line\">{text}</p>\r\n          <Button\r\n            onClick={() => {\r\n              func();\r\n              dispatch(setConfirmation({ show: false, func: () => {} }));\r\n            }}\r\n            style={{\r\n              backgroundColor: 'rgba(16, 185, 129, var(--tw-bg-opacity))',\r\n              marginRight: '8px',\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(setConfirmation({ show: false, func: () => {} }));\r\n            }}\r\n            style={{\r\n              backgroundColor: 'rgba(239, 68, 68, var(--tw-bg-opacity))',\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React from 'react';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  createFollowUp,\r\n  refreshContact,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport Cookies from 'js-cookie';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst CreateFollowUpCard = ({ phone, show, fromContact }) => {\r\n  const contact = useSelector((state) => state.contact.contact);\r\n  const data = useSelector((state) => state.contact.update);\r\n  const dispatch = useDispatch();\r\n  const token = Cookies.get('JWT');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.phone) {\r\n      errors.phone = '*Required';\r\n    }\r\n    if (!values.date) {\r\n      errors.date = '*Required';\r\n    }\r\n    if (!values.text) {\r\n      errors.text = '*Required';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, values, setFieldValue, resetForm, setValues } =\r\n    useFormik({\r\n      initialValues: {\r\n        phone: phone,\r\n        date: '',\r\n        text: '',\r\n      },\r\n      validate,\r\n      onSubmit: {},\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Object.keys(errors).length === 0 && values.date !== '') {\r\n      if (fromContact) {\r\n        axiosInstance\r\n          .post(\r\n            `/create-followup/${user._id}`,\r\n            { phone: phone, date: values.date, text: values.text },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            },\r\n          )\r\n          .then((res) => {\r\n            resetForm();\r\n            if (data._id !== undefined) {\r\n              dispatch(refreshContact(data._id));\r\n            }\r\n            dispatch(\r\n              createFollowUp({ show: false, phone: null, fromContact: false }),\r\n            );\r\n            dispatch(setAlert({ message: 'FollowUp created', error: false }));\r\n          })\r\n          .catch((err) => {\r\n            dispatch(\r\n              setAlert({ message: 'Error creating followup', error: true }),\r\n            );\r\n          });\r\n      } else {\r\n        axiosInstance\r\n          .post(`/create-followup/${user._id}`, values, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n            resetForm();\r\n            dispatch(refreshContact(data._id));\r\n            dispatch(\r\n              createFollowUp({ show: false, phone: null, fromContact: false }),\r\n            );\r\n            dispatch(setAlert({ message: 'FollowUp created', error: false }));\r\n          })\r\n          .catch((err) => {\r\n            dispatch(\r\n              setAlert({ message: 'Error creating followup', error: true }),\r\n            );\r\n          });\r\n      }\r\n    } else {\r\n      dispatch(setAlert({ message: 'FIll fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  let options = [];\r\n\r\n  contact.forEach((element) => {\r\n    options.push({\r\n      value: element.phone,\r\n      label:\r\n        element.name +\r\n        '(' +\r\n        element.phone +\r\n        ')' +\r\n        (element.company !== 'NA' ? `(${element.company})` : ''),\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        show ? 'block' : 'hidden'\r\n      }  shadow-2xl fixed top-1/2 right-1/2 transform flex justify-center items-center w-full h-full bg-black bg-opacity-20 translate-x-1/2 z-50 -translate-y-1/2`}\r\n    >\r\n      <div className=\"bg-white w-1/4 pb-2 rounded-t-lg items-center\">\r\n        <div className=\"w-full flex justify-end\">\r\n          <IconButton\r\n            onClick={() => {\r\n              resetForm();\r\n              dispatch(\r\n                createFollowUp({\r\n                  show: false,\r\n                  phone: null,\r\n                  fromContact: false,\r\n                }),\r\n              );\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <h3 className=\"text-center text-xl font-semibold\">Create FollowUp</h3>\r\n        <div className=\"px-6 pb-6\">\r\n          <div>\r\n            {!fromContact ? (\r\n              <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Select contact\r\n                </lable>\r\n\r\n                <Select\r\n                  theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 5,\r\n                    colors: {\r\n                      ...theme.colors,\r\n                      primary25: 'lightgray',\r\n                      primary: 'lightgray',\r\n                    },\r\n                  })}\r\n                  options={options}\r\n                  onChange={(selectedOption) => {\r\n                    setFieldValue(`phone`, selectedOption.value);\r\n                  }}\r\n                />\r\n                {errors.phone ? (\r\n                  <div className=\"w-full text-sm text-red-400\">\r\n                    {errors.phone}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            ) : null}\r\n            <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Opening remark\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter opening remark\"\r\n                {...getFieldProps('text')}\r\n              />\r\n              {errors.text ? (\r\n                <div className=\"w-full text-sm text-red-400\">{errors.text}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Date&Time\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"datetime-local\"\r\n                min={new Date().toISOString().slice(0, -5)}\r\n                placeholder=\"Select date\"\r\n                {...getFieldProps('date')}\r\n              />\r\n              {errors.date ? (\r\n                <div className=\"w-full text-sm text-red-400\">{errors.date}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"px-2 mt-6 flex flex-col w-full\">\r\n            <Button\r\n              onClick={(e) => {\r\n                handleSubmit(e);\r\n              }}\r\n              style={{\r\n                backgroundColor: 'rgba(16, 185, 129, var(--tw-bg-opacity))',\r\n              }}\r\n            >\r\n              Create followup\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateFollowUpCard;\r\n","import { IconButton, Button } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Select from 'react-select';\r\nimport {\r\n  createLead,\r\n  refreshLead,\r\n} from '../../context/actions/leadAction/leadActions';\r\nimport {\r\n  createleadCard,\r\n  refreshContact,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport Cookies from 'js-cookie';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst CreateLeadCard = ({ phone, show, fromContact }) => {\r\n  const dispatch = useDispatch();\r\n  const inventory = useSelector((state) => state.inventory.inventory);\r\n  const contactData = useSelector((state) => state.contact.contact);\r\n  const currentContact = useSelector((state) => state.contact.update);\r\n  const history = useHistory();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.title) {\r\n      errors.title = '*Required';\r\n    }\r\n    if (values.items.length !== 0) {\r\n      values.items.forEach((element, index) => {\r\n        if (!element.item) {\r\n          errors.items = 'Select all items';\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!fromContact) {\r\n      if (!values.phone) {\r\n        errors.phone = '*Required';\r\n      } else if (values.phone.toString().length !== 10) {\r\n        errors.phone = 'Length should be 10';\r\n      } else if (values.phone.toString().length === 10) {\r\n        let flag = false;\r\n        contactData.forEach((element) => {\r\n          if (element.phone === values.phone) {\r\n            flag = true;\r\n          }\r\n        });\r\n        if (!flag) {\r\n          errors.phone = 'Contact does not exists create new';\r\n        }\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  let options = [];\r\n\r\n  inventory.forEach((element) => {\r\n    options.push({\r\n      value: element._id,\r\n      label: element.item_name + '(' + element.article + ')',\r\n    });\r\n  });\r\n\r\n  const { getFieldProps, errors, values, setValues, setFieldValue, resetForm } =\r\n    useFormik({\r\n      initialValues: {\r\n        title: '',\r\n        phone: '',\r\n        items: [],\r\n        description: '',\r\n      },\r\n      validate,\r\n    });\r\n\r\n  const createLead = (data) => {\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    axiosInstance\r\n      .post(`/create-lead/${user._id}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(\r\n          createleadCard({\r\n            show: false,\r\n            phone: null,\r\n            fromContact: false,\r\n          }),\r\n        );\r\n        resetForm();\r\n        dispatch(refreshContact(currentContact?._id));\r\n        dispatch(\r\n          setAlert({ message: 'Lead created successfully', error: false }),\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setAlert({ message: 'Error creating lead', error: true }));\r\n        resetForm();\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0 && values.title !== '') {\r\n      if (fromContact) {\r\n        createLead({\r\n          title: values.title,\r\n          phone: phone,\r\n          items: values.items,\r\n          description: values.description,\r\n        });\r\n      } else {\r\n        createLead(values);\r\n      }\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`${\r\n        show ? 'block' : 'hidden'\r\n      } fixed top-1/2 right-1/2 transform translate-x-1/2 -translate-y-1/2 flex justify-center items-center w-full h-full bg-black bg-opacity-20  z-50 shadow-2xl`}\r\n    >\r\n      <div className=\"bg-white w-1/3 pb-2 rounded-t-lg flex flex-col items-center\">\r\n        <div className=\"w-full flex justify-end\">\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(\r\n                createleadCard({\r\n                  show: false,\r\n                  phone: null,\r\n                  fromContact: false,\r\n                }),\r\n              );\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <div className=\"bg-white flex items-center justify-center pb-0 w-full\">\r\n          <h2 className=\"text-center text-2xl font-semibold\">Create Lead</h2>\r\n        </div>\r\n        <div className=\"flex flex-wrap w-full\">\r\n          <div className=\"bg-white px-4 pb-2 flex-1 flex flex-col mr-1\">\r\n            {!fromContact ? (\r\n              <div className=\"px-2 mt-3 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Phone number\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter phone number\"\r\n                  {...getFieldProps('phone')}\r\n                />\r\n                {errors.phone ? (\r\n                  <div className=\"w-full text-sm text-red-400\">\r\n                    {errors.phone}\r\n                  </div>\r\n                ) : null}\r\n                {errors.phone === 'Contact does not exists create new' ? (\r\n                  <div className=\"flex justify-end\">\r\n                    <Button\r\n                      onClick={() => {}}\r\n                      className=\"w-max\"\r\n                      style={{\r\n                        backgroundColor: '#54a3ff',\r\n                        color: 'white',\r\n                        textTransform: 'capitalize',\r\n                        marginTop: '10px',\r\n                      }}\r\n                    >\r\n                      Add Contact\r\n                    </Button>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            ) : null}\r\n            <div className=\"px-2 mt-3 mb-3 flex flex-col w-full\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Title\r\n              </lable>\r\n              <input\r\n                className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter title\"\r\n                {...getFieldProps('title')}\r\n              />\r\n              {errors.title ? (\r\n                <div className=\"w-full text-sm text-red-400\">\r\n                  {errors.title}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"p-2 w-full flex flex-col\">\r\n              <lable className=\"text-gray-2 text-md font-semibold \">\r\n                Description\r\n              </lable>\r\n              <textarea\r\n                className={` p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                {...getFieldProps('description')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white px-4 pb-2 w-full flex flex-col mt-4\">\r\n          <div className=\"flex items-center\">\r\n            <p className=\"text-lg font-semibold ml-3\">Add Items:</p>\r\n            <IconButton\r\n              onClick={() => {\r\n                setValues({\r\n                  ...values,\r\n                  items: [\r\n                    ...values.items,\r\n                    { item: '', quantity: '', updatedSalePrice: 0 },\r\n                  ],\r\n                });\r\n              }}\r\n            >\r\n              <AddCircleOutlineIcon />\r\n            </IconButton>\r\n          </div>\r\n          {errors.items ? (\r\n            <div className=\"w-full text-sm text-red-400 ml-3\">\r\n              {errors.items}\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className=\"w-full\">\r\n            <div className=\" flex flex-col w-full max-h-60 overflow-auto mb-2\">\r\n              {values.items.map((item, index) => {\r\n                return (\r\n                  <div className=\"flex w-full p-2 items-center\">\r\n                    <div className=\"w-full\">\r\n                      <lable className=\"text-gray-2 text-md font-semibold \">\r\n                        Item\r\n                      </lable>\r\n                      <Select\r\n                        theme={(theme) => ({\r\n                          ...theme,\r\n                          borderRadius: 5,\r\n                          colors: {\r\n                            ...theme.colors,\r\n                            primary25: 'lightgray',\r\n                            primary: 'lightgray',\r\n                          },\r\n                        })}\r\n                        options={options}\r\n                        onChange={(selectedOption) => {\r\n                          setFieldValue(\r\n                            `items[${index}].item`,\r\n                            selectedOption.value,\r\n                          );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"ml-2 w-full\">\r\n                      <lable className=\"text-gray-2 text-md font-semibold \">\r\n                        Quantity\r\n                      </lable>\r\n                      <input\r\n                        className={`p-2 w-full border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter quantity\"\r\n                        {...getFieldProps(`items[${index}].quantity`)}\r\n                      />\r\n                    </div>\r\n                    <IconButton\r\n                      style={{\r\n                        marginTop: '14px',\r\n                        marginLeft: '5px',\r\n                        padding: '5px',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValues({\r\n                          ...values,\r\n                          items: values.items.filter((f, i) => i !== index),\r\n                        });\r\n                      }}\r\n                    >\r\n                      <CloseIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          onClick={(e) => handleSubmit(e)}\r\n          className=\"bg-green-600 mt-3 hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 text-white\"\r\n        >\r\n          Save Lead\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateLeadCard;\r\n","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getOrganization,\r\n  refreshOrg,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport Cookies from 'js-cookie';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst UpdateOrgCard = ({ show, setShow }) => {\r\n  const dispatch = useDispatch();\r\n  const DATA = useSelector((state) => state.contact.selectedOrg);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.type) {\r\n      errors.type = '*Required';\r\n    }\r\n    if (!values.name) {\r\n      errors.name = '*Required';\r\n    }\r\n    if (!values.address) {\r\n      errors.address = '*Required';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, values, resetForm } = useFormik({\r\n    initialValues: {\r\n      type: DATA.type,\r\n      name: DATA.name,\r\n      address: DATA.address,\r\n    },\r\n    validate,\r\n  });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const token = Cookies.get('JWT');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    axiosInstance\r\n      .patch(`/update-organization/${DATA._id}/${user._id}`, values, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setShow(false);\r\n        resetForm();\r\n        dispatch(refreshOrg(DATA._id));\r\n        dispatch(\r\n          setAlert({\r\n            message: 'Organization Updated Successfully',\r\n            error: false,\r\n          }),\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          setAlert({ message: 'Error updating organization', error: true }),\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        show ? 'block' : 'hidden'\r\n      } fixed top-1/2 right-1/2 transform translate-x-1/2 -translate-y-1/2 flex justify-center items-center w-full h-full bg-black bg-opacity-20 mt-10 mx-4  z-50 shadow-2xl`}\r\n    >\r\n      <div className=\"w-1/3 bg-white flex flex-col pb-4 items-center rounded-lg\">\r\n        <div className=\"w-full flex justify-end\">\r\n          <IconButton\r\n            onClick={() => {\r\n              setShow(false);\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <h3 className=\"text-center text-2xl font-semibold\">\r\n          Update Organization\r\n        </h3>\r\n        <div className=\"p-4 w-full flex justify-center flex-col items-center\">\r\n          <div className=\"flex flex-wrap w-full\">\r\n            <div className=\"bg-white px-4 pt-4 pb-2 flex-1 flex flex-col\">\r\n              <div className=\"px-2 mb-3 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Organization Name\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  {...getFieldProps('name')}\r\n                />\r\n                {errors.name ? (\r\n                  <div className=\"w-full text-sm text-red-400\">\r\n                    {errors.name}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n\r\n              <div className=\"px-2 mb-3 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Organization Type\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter department\"\r\n                  {...getFieldProps('type')}\r\n                />\r\n                {errors.type ? (\r\n                  <div className=\"w-full text-sm text-red-400\">\r\n                    {errors.type}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"px-2 flex mb-3 flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Address\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter department\"\r\n                  {...getFieldProps('address')}\r\n                />\r\n                {errors.address ? (\r\n                  <div className=\"w-full text-sm text-red-400\">\r\n                    {errors.address}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={(e) => handleSubmit(e)}\r\n            className=\"bg-green-600 w-max hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 mb-0 text-white\"\r\n          >\r\n            Update Organization\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateOrgCard;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DetailCard from '../../Components/DetailCard';\r\nimport {\r\n  deleteContact,\r\n  refreshOrg,\r\n  setupdatecontact,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport DomainIcon from '@mui/icons-material/Domain';\r\nimport Table from '../../Components/reactTable';\r\nimport { useParams } from 'react-router';\r\nimport UpdateOrgCard from './UpdateOrgCard';\r\nimport { IconButton } from '@material-ui/core';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst OrganizationDetails = () => {\r\n  const [show, setShow] = useState(false);\r\n  const DATA = useSelector((state) => state.contact.selectedOrg);\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshOrg(id));\r\n  }, [dispatch, id]);\r\n\r\n  const headCells = [\r\n    {\r\n      accessor: 'name',\r\n      Header: 'Name',\r\n    },\r\n    {\r\n      accessor: 'phone',\r\n      Header: 'Phone Number',\r\n    },\r\n    {\r\n      accessor: 'email',\r\n      Header: 'Email',\r\n    },\r\n    {\r\n      accessor: 'department',\r\n      Header: 'Department',\r\n    },\r\n    {\r\n      accessor: 'title',\r\n      Header: 'Title',\r\n    },\r\n  ];\r\n  const columns = useMemo(() => headCells, []);\r\n  const Customer = [];\r\n  const notCustomer = [];\r\n\r\n  DATA?.employees?.forEach((element) => {\r\n    if (element.isCustomer) {\r\n      Customer.push(element);\r\n    } else {\r\n      notCustomer.push(element);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <UpdateOrgCard show={show} setShow={setShow} />\r\n      <div\r\n        className=\"m-10 mr-5 p-7 py-10 bg-white rounded-lg mb-4 w-95 \"\r\n        style={{ height: 'max-content' }}\r\n      >\r\n        <div className=\"mb-10  flex justify-between items-center\">\r\n          <h1 className=\"text-3xl font-semibold text-center flex items-center justify-center\">\r\n            <span className=\"mr-3\">\r\n              <DomainIcon fontSize=\"large\" />\r\n            </span>\r\n            Organization\r\n          </h1>\r\n          <IconButton\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n        </div>\r\n        <h2 className=\"text-2xl font-semibold text-left mb-6\">{DATA?.name}</h2>\r\n        <DetailCard title=\"Type\" detail={DATA?.type} />\r\n        <DetailCard title=\"Address\" detail={DATA?.address} />\r\n      </div>\r\n      <div\r\n        className=\"m-10 ml-2 p-7 bg-white rounded-lg mb-4 flex-1 \"\r\n        style={{ height: 'max-content' }}\r\n      >\r\n        {DATA?.employees?.length === 0 ? (\r\n          <p className=\"text-2xl\">No contact available</p>\r\n        ) : (\r\n          <Table\r\n            columns={columns}\r\n            data={DATA.employees ? DATA.employees : []}\r\n            customer={Customer}\r\n            not_customer={notCustomer}\r\n            deleteFunc={deleteContact}\r\n            update={setupdatecontact}\r\n            path={'/updatecontact'}\r\n            tablepath={'/contactdetail'}\r\n            text={`Are you sure you want to delete contact? \\n All leads will also be deleted.`}\r\n            isContact={true}\r\n            isOrg={true}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrganizationDetails;\r\n","import { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  createorgCard,\r\n  getOrganization,\r\n} from '../../context/actions/contactAction/contactAction';\r\nimport Cookies from 'js-cookie';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport { setAlert } from '../../context/actions/errorActions';\r\n\r\nconst CreateOrgCard = ({ show }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.type) {\r\n      errors.type = '*Required';\r\n    }\r\n    if (!values.name) {\r\n      errors.name = '*Required';\r\n    }\r\n    if (!values.street) {\r\n      errors.street = '*Required';\r\n    }\r\n    if (!values.country) {\r\n      errors.country = '*Required';\r\n    }\r\n    if (!values.state) {\r\n      errors.state = '*Required';\r\n    }\r\n    if (!values.city) {\r\n      errors.city = '*Required';\r\n    }\r\n    if (!values.zipcode) {\r\n      errors.zipcode = '*Required';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const { getFieldProps, errors, values, resetForm } = useFormik({\r\n    initialValues: {\r\n      type: '',\r\n      name: '',\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      country: '',\r\n      zipcode: '',\r\n    },\r\n    validate,\r\n  });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(errors).length === 0 && values.name !== '') {\r\n      const token = Cookies.get('JWT');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      axiosInstance\r\n        .post(\r\n          `/create-organization/${user._id}`,\r\n          {\r\n            name: values.name,\r\n            type: values.type,\r\n            address: `${values.street}, ${values.city}, ${values.state}, ${values.country}, ${values.zipcode}`,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          },\r\n        )\r\n        .then((res) => {\r\n          resetForm();\r\n          dispatch(createorgCard({ show: false }));\r\n          dispatch(getOrganization());\r\n          dispatch(\r\n            setAlert({\r\n              message: 'Organization Created Successfully',\r\n              error: false,\r\n            }),\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          dispatch(\r\n            setAlert({ message: 'Error creating organization', error: true }),\r\n          );\r\n        });\r\n    } else {\r\n      dispatch(setAlert({ message: 'Fill fields properly', error: true }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        show ? 'block' : 'hidden'\r\n      } fixed top-1/2 right-1/2 transform translate-x-1/2 -translate-y-1/2 flex justify-center items-center w-full h-full bg-black bg-opacity-20 mt-10 mx-4  z-50 shadow-2xl`}\r\n    >\r\n      <div className=\"w-1/2 bg-white flex flex-col pb-4 items-center rounded-lg\">\r\n        <div className=\"w-full flex justify-end\">\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(createorgCard({ show: false }));\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <h3 className=\"text-center text-2xl font-semibold\">\r\n          Create Organization\r\n        </h3>\r\n        <div className=\"p-4 w-full flex justify-center flex-col items-center\">\r\n          <div className=\"flex flex-wrap w-full\">\r\n            <div className=\"bg-white px-4 pt-4 pb-2 flex-1 flex flex-col\">\r\n              <div className=\"px-2 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Organization Name\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  {...getFieldProps('name')}\r\n                />\r\n                {errors.name ? (\r\n                  <div className=\"w-full text-sm text-red-400\">\r\n                    {errors.name}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-white p-4 flex-1 flex flex-col\">\r\n              <div className=\"px-2 flex flex-col w-full\">\r\n                <lable className=\"text-gray-2 text-md font-semibold \">\r\n                  Organization Type\r\n                </lable>\r\n                <input\r\n                  className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter department\"\r\n                  {...getFieldProps('type')}\r\n                />\r\n                {errors.type ? (\r\n                  <div className=\"w-full text-sm text-red-400\">\r\n                    {errors.type}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-white px-4 pb-2 w-full flex flex-col mt-2\">\r\n              <h3 className=\"text-lg font-semibold pl-2\">Address</h3>\r\n              <div className=\"flex flex-wrap w-full\">\r\n                <div className=\"flex-col flex flex-1 p-2\">\r\n                  <lable className=\"text-gray-2 text-md font-semibold \">\r\n                    Street\r\n                  </lable>\r\n                  <input\r\n                    className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter street\"\r\n                    {...getFieldProps('street')}\r\n                  />\r\n                  {errors.street ? (\r\n                    <div className=\"w-full text-sm text-red-400\">\r\n                      {errors.street}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"flex-col flex flex-1 p-2\">\r\n                  <lable className=\"text-gray-2 text-md font-semibold \">\r\n                    Country\r\n                  </lable>\r\n                  <input\r\n                    className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter country\"\r\n                    {...getFieldProps('country')}\r\n                  />\r\n                  {errors.country ? (\r\n                    <div className=\"w-full text-sm text-red-400\">\r\n                      {errors.country}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"flex-col flex flex-1 p-2\">\r\n                  <lable className=\"text-gray-2 text-md font-semibold \">\r\n                    State\r\n                  </lable>\r\n                  <input\r\n                    className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter state\"\r\n                    {...getFieldProps('state')}\r\n                  />\r\n                  {errors.state ? (\r\n                    <div className=\"w-full text-sm text-red-400\">\r\n                      {errors.state}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-wrap w-full\">\r\n                <div className=\"flex-col flex flex-1 p-2\">\r\n                  <lable className=\"text-gray-2 text-md font-semibold \">\r\n                    City\r\n                  </lable>\r\n                  <input\r\n                    className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter city\"\r\n                    {...getFieldProps('city')}\r\n                  />\r\n                  {errors.city ? (\r\n                    <div className=\"w-full text-sm text-red-400\">\r\n                      {errors.city}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"flex-col flex flex-1 p-2\">\r\n                  <lable className=\"text-gray-2 text-md font-semibold \">\r\n                    ZIP code\r\n                  </lable>\r\n                  <input\r\n                    className={`p-2 border border-gray-400 focus:outline-none rounded-md focus:ring-1 ring-red-1`}\r\n                    type=\"number\"\r\n                    placeholder=\"Enter zip code\"\r\n                    {...getFieldProps('zipcode')}\r\n                  />\r\n                  {errors.zipcode ? (\r\n                    <div className=\"w-full text-sm text-red-400\">\r\n                      {errors.zipcode}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={(e) => handleSubmit(e)}\r\n            className=\"bg-green-600 w-max hover:bg-green-700 px-5 py-2 text-lg rounded-md m-4 mb-0 text-white\"\r\n          >\r\n            Save Organization\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateOrgCard;\r\n","import './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomeRoute from './Routes/HomeRoute';\nimport Dashboard from './Views/Dashboard/Dashboard';\nimport Leads from './Views/Leads/Leads';\nimport Message from './Views/Message/Message';\nimport Inventory from './Views/Inventory/Inventory';\nimport Contacts from './Views/Contact/Contacts';\nimport Organization from './Views/Organization/Organization';\nimport CreateLead from './Views/Leads/CreateLead';\nimport UpdateLead from './Views/Leads/UpdateLead';\nimport UpdateContact from './Views/Contact/UpdateContact';\nimport ContactDetail from './Views/Contact/ContactDetail';\nimport CreateInventory from './Views/Inventory/CreateInventory';\nimport UpdateInventory from './Views/Inventory/UpdateInventory';\nimport InventoryDetails from './Views/Inventory/InventoryDetails';\nimport Login from './Views/Auth/Login';\nimport Signup from './Views/Auth/Signup';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFromStorage } from './context/actions/authActions/authActions';\nimport { getInventory } from './context/actions/inventoryAction/inventoryAction';\nimport {\n  getContact,\n  getOrganization,\n} from './context/actions/contactAction/contactAction';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Confirmation from './Components/Confirmation';\nimport CreateFollowUpCard from './Views/Contact/CreateFollowUpCard';\nimport CreateLeadCard from './Views/Leads/CreateLeadCard';\nimport CreateContactCard from './Views/Contact/CreateContactCard';\nimport OrganizationDetails from './Views/Organization/OrganizationDetails';\nimport CreateOrgCard from './Views/Organization/CreateOrgCard';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getFromStorage());\n    dispatch(getOrganization());\n    dispatch(getInventory());\n    dispatch(getContact());\n  }, [dispatch]);\n\n  const alert = useSelector((state) => state.alert.alert);\n\n  useEffect(() => {\n    if (alert.error === false) {\n      toast.success(alert.message, {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else if (alert.error === true) {\n      toast.error(alert.message, {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }, [alert]);\n\n  const { show, func, text } = useSelector(\n    (state) => state.confirmation.confirmation,\n  );\n\n  const followUp = useSelector((state) => state.contact.followUp);\n  const leadCreate = useSelector((state) => state.contact.leadCreate);\n  const contactCreate = useSelector((state) => state.contact.contactCreate);\n  const orgCreate = useSelector((state) => state.contact.orgCreate);\n\n  return (\n    <div className=\"\">\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n      <Confirmation show={show} func={func} text={text} />\n      <CreateFollowUpCard\n        phone={followUp.phone}\n        show={followUp.show}\n        fromContact={followUp.fromContact}\n      />\n      <CreateLeadCard\n        phone={leadCreate.phone}\n        show={leadCreate.show}\n        fromContact={leadCreate.fromContact}\n      />\n      <CreateContactCard\n        phone={contactCreate.phone}\n        show={contactCreate.show}\n        fromLead={contactCreate.fromContact}\n      />\n      <CreateOrgCard show={orgCreate.show} />\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        {/* <Route path=\"/register\" component={Signup} /> */}\n        <HomeRoute path=\"/\" exact component={Dashboard} />\n        <HomeRoute path=\"/leads\" exact component={Leads} />\n        <HomeRoute path=\"/inventory\" exact component={Inventory} />\n        <HomeRoute path=\"/contacts\" exact component={Contacts} />\n        <HomeRoute path=\"/organizations\" exact component={Organization} />\n        <HomeRoute path=\"/message\" exact component={Message} />\n\n        <HomeRoute path=\"/createlead\" exact component={CreateLead} />\n        <HomeRoute path=\"/createinventory\" exact component={CreateInventory} />\n\n        <HomeRoute path=\"/updatelead\" exact component={UpdateLead} />\n        <HomeRoute\n          path=\"/updateinventory/:id\"\n          exact\n          component={UpdateInventory}\n        />\n        <HomeRoute path=\"/updatecontact/:id\" exact component={UpdateContact} />\n\n        <HomeRoute\n          path=\"/inventorydetails/:id\"\n          exact\n          component={InventoryDetails}\n        />\n        <HomeRoute path=\"/contactdetail/:id\" exact component={ContactDetail} />\n        <HomeRoute\n          path=\"/organizationdetail/:id\"\n          exact\n          component={OrganizationDetails}\n        />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_USER } from '../../actionTypes';\r\n\r\nconst initialState = {\r\n  user: {},\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { authReducer };\r\n","import { SET_CONFIRMATION } from '../actionTypes';\r\n\r\nconst initialState = {\r\n  confirmation: {\r\n    text: '',\r\n    show: false,\r\n    func: () => {},\r\n  },\r\n};\r\n\r\nconst confirmationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CONFIRMATION:\r\n      return {\r\n        ...state,\r\n        confirmation: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { confirmationReducer };\r\n","import {\r\n  ADD_CONTACT,\r\n  ADD_LEAD,\r\n  DELETE_CONTACT,\r\n  DELETE_ORGANIZATION,\r\n  SET_CONTACT,\r\n  SET_ORGANIZATION,\r\n  SET_UPDATECONTACT,\r\n  SET_UPDATEORG,\r\n  SHOW_CONTACTCREATE,\r\n  SHOW_FOLLOWUP,\r\n  SHOW_LEADCREATE,\r\n  SHOW_ORGCREATE,\r\n} from '../../actionTypes';\r\n\r\nconst initialState = {\r\n  contact: [],\r\n  organizations: [],\r\n  update: {},\r\n  selectedOrg: {},\r\n  followUp: {\r\n    show: false,\r\n    phone: '',\r\n    fromContact: false,\r\n  },\r\n  leadCreate: {\r\n    show: false,\r\n    phone: '',\r\n    fromContact: false,\r\n  },\r\n  contactCreate: {\r\n    show: false,\r\n    phone: '',\r\n    fromLead: false,\r\n  },\r\n  orgCreate: {\r\n    show: false,\r\n  },\r\n};\r\n\r\nconst contactReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: action.payload,\r\n      };\r\n    case SET_ORGANIZATION:\r\n      return {\r\n        ...state,\r\n        organizations: action.payload,\r\n      };\r\n\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: [...state.contact.filter((c) => c._id !== action.payload)],\r\n      };\r\n    case DELETE_ORGANIZATION:\r\n      return {\r\n        ...state,\r\n        organizations: [\r\n          ...state?.organizations?.filter((c) => c?._id !== action?.payload),\r\n        ],\r\n      };\r\n    case SET_UPDATECONTACT:\r\n      return {\r\n        ...state,\r\n        update: action.payload,\r\n      };\r\n    case ADD_LEAD:\r\n      return {\r\n        ...state,\r\n        contact: state?.contact?.map((c) => {\r\n          if (c._id === action.payload.contactId) {\r\n            return {\r\n              ...c,\r\n              allLeads: [...c.allLeads, action.payload],\r\n            };\r\n          } else {\r\n            return c;\r\n          }\r\n        }),\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: [action.payload, ...state.contact],\r\n      };\r\n    case SHOW_FOLLOWUP:\r\n      return {\r\n        ...state,\r\n        followUp: action.payload,\r\n      };\r\n    case SHOW_LEADCREATE:\r\n      return {\r\n        ...state,\r\n        leadCreate: action.payload,\r\n      };\r\n    case SHOW_CONTACTCREATE:\r\n      return {\r\n        ...state,\r\n        contactCreate: action.payload,\r\n      };\r\n    case SHOW_ORGCREATE:\r\n      return {\r\n        ...state,\r\n        orgCreate: action.payload,\r\n      };\r\n    case SET_UPDATEORG:\r\n      return {\r\n        ...state,\r\n        selectedOrg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { contactReducer };\r\n","import { SET_ALERT } from '../actionTypes';\r\n\r\nconst initialState = {\r\n  alert: {\r\n    message: '',\r\n    error: null,\r\n  },\r\n};\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { errorReducer };\r\n","import {\r\n  DELETE_INVENTORY,\r\n  SET_INVENTORY,\r\n  SET_UPDATEINVENTORY,\r\n} from '../../actionTypes';\r\n\r\nconst initialState = {\r\n  inventory: [],\r\n  update: {},\r\n};\r\n\r\nconst inventoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INVENTORY:\r\n      return {\r\n        ...state,\r\n        inventory: action.payload,\r\n      };\r\n    case DELETE_INVENTORY:\r\n      return {\r\n        ...state,\r\n        inventory: [...state.inventory.filter((c) => c._id !== action.payload)],\r\n      };\r\n    case SET_UPDATEINVENTORY:\r\n      return {\r\n        ...state,\r\n        update: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { inventoryReducer };\r\n","import {\r\n  DELETE_LEAD,\r\n  REFRESH_LEAD,\r\n  SELECTED_LEAD,\r\n  SET_LEADS,\r\n  SET_UPDATELEAD,\r\n  UPDATE_LEAD,\r\n} from '../../actionTypes';\r\n\r\nconst initialState = {\r\n  leads: [],\r\n  updatelead: {},\r\n  selectedlead: {},\r\n};\r\n\r\nconst leadsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LEADS:\r\n      return {\r\n        ...state,\r\n        leads: action.payload,\r\n      };\r\n    case DELETE_LEAD:\r\n      return {\r\n        ...state,\r\n        leads: [...state.leads.filter((c) => c._id !== action.payload)],\r\n      };\r\n    case SET_UPDATELEAD:\r\n      return {\r\n        ...state,\r\n        updatelead: action.payload,\r\n      };\r\n    case UPDATE_LEAD:\r\n      return {\r\n        ...state,\r\n        leads: state?.leads?.map((l) => {\r\n          if (l._id === action.payload._id) {\r\n            return {\r\n              ...l,\r\n              quantity: action.payload.quantity,\r\n              convert: action.payload.convert,\r\n            };\r\n          } else {\r\n            return l;\r\n          }\r\n        }),\r\n        updatelead: {\r\n          ...state.updatelead,\r\n          quantity: action.payload.quantity,\r\n          convert: action.payload.convert,\r\n        },\r\n      };\r\n    case SELECTED_LEAD:\r\n      return {\r\n        ...state,\r\n        selectedlead: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { leadsReducer };\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './reducers/authReducer/authReducer';\r\nimport { confirmationReducer } from './reducers/confirmationReducer';\r\nimport { contactReducer } from './reducers/contactReducer/contactReducer';\r\nimport { errorReducer } from './reducers/errorReducer';\r\nimport { inventoryReducer } from './reducers/inventoryReducer/inventoryReducer';\r\nimport { leadsReducer } from './reducers/leadReducer/leadReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  user: authReducer,\r\n  lead: leadsReducer,\r\n  inventory: inventoryReducer,\r\n  contact: contactReducer,\r\n  alert: errorReducer,\r\n  confirmation: confirmationReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer.js';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './context/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}